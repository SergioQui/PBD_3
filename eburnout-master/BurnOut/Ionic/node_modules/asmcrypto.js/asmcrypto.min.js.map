{"version":3,"sources":["C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/utils.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/errors.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/aes/aes.asm.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/aes/exports.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/aes/aes.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/aes/cbc/cbc.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/aes/cbc/exports.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/aes/gcm/gcm.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/aes/gcm/exports.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hash/hash.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hash/sha1/sha1.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hash/sha1/sha1.asm.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hash/sha1/exports.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hash/sha256/sha256.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hash/sha256/sha256.asm.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hash/sha256/exports.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hmac/hmac.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hmac/hmac-sha1.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hmac/exports-hmac-sha1.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hmac/hmac-sha256.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/hmac/exports-hmac-sha256.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/pbkdf2/pbkdf2.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/pbkdf2/pbkdf2-hmac-sha1.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/pbkdf2/exports-pbkdf2-hmac-sha1.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/pbkdf2/pbkdf2-hmac-sha256.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/pbkdf2/exports-pbkdf2-hmac-sha256.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/random/random.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/random/isaac.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/bignum/bigint.asm.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/bignum/bignum.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/bignum/extgcd.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/bignum/modulus.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/bignum/prime.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/bignum/exports.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/rsa/rsa.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/rsa/pkcs1.js","C:/Users/Lippai Adam/Repositories/asmcrypto.js/src/origin.js"],"names":["FloatArray","Float64Array","Float32Array","string_to_bytes","str","utf8","len","length","bytes","Uint8Array","i","j","c","charCodeAt","Error","subarray","bytes_to_string","chars","Array","b","String","fromCharCode","apply","slice","bytes_to_hex","arr","h","toString","bytes_to_base64","btoa","is_number","a","is_string","is_buffer","ArrayBuffer","is_bytes","is_typed_array","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","_heap_init","constructor","heap","heapSize","size","byteLength","_heap_write","hpos","data","dpos","dlen","hlen","wlen","set","IllegalStateError","err","this","arguments","message","stack","prototype","Object","create","name","value","IllegalArgumentError","SecurityError","AES_asm","gexp3","glog3","ginit_done","gmul","aes_sbox","aes_sinv","aes_enc","aes_dec","aes_init","d","ginit","_s","s","x","ginv","t","wrapper","foreign","buffer","asm","stdlib","S0","S1","S2","S3","I0","I1","I2","I3","N0","N1","N2","N3","M0","M1","M2","M3","H0","H1","H2","H3","R","HEAP","DATA","_core","k","r","x0","x1","x2","x3","t1","t2","t3","y0","y1","y2","y3","_ecb_enc","_cbc_enc","_cipher_modes","_mac_modes","z0","z1","z2","z3","set_rounds","set_state","s0","s1","s2","s3","set_iv","i0","i1","i2","i3","set_nonce","n0","n1","n2","n3","set_mask","m0","m1","m2","m3","set_counter","c0","c1","c2","c3","get_state","pos","get_iv","gcm_init","cipher","mode","ret","mac","set_key","ks","k0","k1","k2","k3","k4","k5","k6","k7","ekeys","dkeys","rcon","jj","ENC","ECB","CBC","CFB","OFB","CTR","DEC","MAC","GCM","HEAP_DATA","_AES_heap_instance","_AES_asm_instance","AES","[object Object]","key","iv","padding","nonce","counter","counterSize","AES_reset","undefined","TypeError","keylen","keyview","DataView","byteOffset","getUint32","mask","Math","pow","view","ivview","result","AES_set_key","AES_set_iv","AES_set_padding","amode","rpos","rlen","presult","prlen","AES_Encrypt_process","plen","hasOwnProperty","p","AES_Decrypt_process","pad","pcheck","AES_CBC","super","BLOCK_SIZE","AES_Encrypt_finish","AES_Decrypt_finish","encrypt","SyntaxError","decrypt","Encrypt","Decrypt","_AES_GCM_data_maxLength","AES_GCM","adata","tagSize","reset","AES_GCM_reset","AES_GCM_encrypt","AES_GCM_decrypt","RangeError","alen","clen","gamma0","tlen","atag","acheck","result1","AES_GCM_Decrypt_process","result2","AES_GCM_Decrypt_finish","AES_GCM_Encrypt_process","AES_GCM_Encrypt_finish","noncelen","noncebuf","_gcm_mac_process","nonceview","hash_reset","hash_process","process","hash_finish","finish","HASH_SIZE","_sha1_block_size","_sha1_hash_size","sha1_constructor","options","H4","TOTAL0","TOTAL1","I4","O0","O1","O2","O3","O4","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","e","n","w16","w17","w18","w19","w20","w21","w22","w23","w24","w25","w26","w27","w28","w29","w30","w31","w32","w33","w34","w35","w36","w37","w38","w39","w40","w41","w42","w43","w44","w45","w46","w47","w48","w49","w50","w51","w52","w53","w54","w55","w56","w57","w58","w59","w60","w61","w62","w63","w64","w65","w66","w67","w68","w69","w70","w71","w72","w73","w74","w75","w76","_core_heap","offset","_state_to_heap","output","hashed","hmac_reset","_hmac_opad","hmac_finish","t0","t4","init","h0","h1","h2","h3","h4","total0","total1","hmac_init","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","pbkdf2_generate_block","block","count","sha1_asm","NAME","sha1_prototype","sha1_instance","get_sha1_instance","sha1_bytes","SHA1","hex","base64","_sha256_block_size","_sha256_hash_size","sha256_constructor","H5","H6","H7","I5","I6","I7","O5","O6","O7","f","g","t5","t6","t7","h5","h6","h7","sha256_asm","sha256_prototype","sha256_instance","get_sha256_instance","sha256_bytes","SHA256","hmac_constructor","hash","HMAC_SIZE","verify","password","_hmac_key","_hmac_init_verify","hmac_process","hmac_prototype","ipad","call","inner_result","opad","diff","hmac_sha1_constructor","hmac_sha1_prototype","hmac_sha1_instance","get_hmac_sha1_instance","hmac_sha1_bytes","HMAC_SHA1","hmac_sha256_constructor","hmac_sha256_prototype","hmac_sha256_instance","get_hmac_sha256_instance","hmac_sha256_bytes","HMAC_SHA256","pbkdf2_constructor","hmac","pbkdf2_reset","pbkdf2_prototype","generate","salt","blocks","ceil","l","tmp","pbkdf2_hmac_sha1_constructor","pbkdf2_hmac_sha1_prototype","pbkdf2_hmac_sha1_instance","pbkdf2_hmac_sha1_bytes","iterations","dklen","pbkdf2_hmac_sha1_hex","pbkdf2_hmac_sha1_base64","PBKDF2","PBKDF2_HMAC_SHA1","pbkdf2_hmac_sha256_constructor","pbkdf2_hmac_sha256_prototype","pbkdf2_hmac_sha256_instance","get_pbkdf2_hmac_sha256_instance","pbkdf2_hmac_sha256_bytes","_global_crypto_getRandomValues","PBKDF2_HMAC_SHA256","ISAAC","m","acc","brs","cnt","gnt","randinit","mix","prng","y","seed","rand","_global_console","console","_global_date_now","Date","now","_global_math_random","random","_global_performance","performance","_global_crypto","crypto","msCrypto","getRandomValues","_isaac_rand","_isaac_seed","_isaac_counter","_isaac_weak_seeded","_isaac_seeded","_random_estimated_entropy","_random_required_entropy","_random_warn_callstacks","exports","_random_skip_system_rng_warning","_random_allow_weak","_hires_now","_hires_epoch","Random_weak_seed","location","href","pid","title","pbkdf2","Random_seed","bpos","blen","buff","nonzero","Random_getValues","error","warn","Random_getNumber","defineProperty","get","w","bigint_asm","SP","HEAP32","imul","salloc","sfree","cp","A","B","z","cmp","lA","lB","sub","lR","sreset","tst","neg","add","mul","al0","al1","al2","al3","al4","al5","al6","al7","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","r13","r14","r15","u","v","Ai","Bj","Rk","sqr","dd","Aj","div","N","lN","D","lD","Q","u1","u0","v0","vh","vl","qh","ql","rh","rl","mredc","T","uh","ul","is_big_number","BigNumber_constructor","_bigint_asm","_bigint_stdlib","_bigint_heap","_half_imul","_BigNumber_ZERO_limbs","num","limbs","bitlen","sign","absnum","abs","BigNumber_ZERO","bitLength","BigNumberPrototype","Number","radix","substr","replace","toBytes","bytelen","valueOf","bits","clamp","clamped","slimbs","sliced","negate","negative","compare","that","alimbs","alimbcnt","blimbs","blimbcnt","rbitlen","rlimbcnt","rsign","rof","abitlen","asign","bbitlen","bsign","pA","pB","pR","subtract","multiply","square","divide","qlimbcnt","quotient","remainder","pQ","BigNumber_ONE","freeze","BigNumber_extGCD","sa","sb","a_cmp_b","q","xi","xj","lx","yi","yj","ly","gcd","Modulus","comodulus","floor","Number_extGCD","coefficient","comodulusRemainder","comodulusRemainderSquare","_Montgomery_reduce","nlimbs","nlimbcnt","pN","ModulusPrototype","reduce","inverse","power","g2","gn","_BigNumber_isMillerRabinProbablePrime","rounds","ONE","_primes","isProbablePrime","paranoia","s5","s17","l3","l5","l17","randomProbablePrime","filter","limbcnt","prime","divisors","push","_small_primes","remainders","LN2","seek","BigNumber","ZERO","extGCD","RSA_reset","RSA_encrypt","msg","RSA_decrypt","dp","dq","RSA_OAEP","label","RSA_MGF1_generate","hash_size","chunks","submask","chunk","RSA_PSS","saltLength","RSA_OAEP_prototype","key_size","data_length","ps_length","data_block","data_block_mask","seed_mask","lhash","ps_end","psz","RSA_PSS_prototype","slen","key_bits","message_length","salt_length","h_block","d_block","d_salt","m_block","m_hash","m_salt","d_block_mask","zbits","signature","h_block_verify","protocol","search","parseInt","atob"],"mappings":"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","file":"asmcrypto.min.js","sourcesContent":["export var FloatArray = typeof Float64Array !== \"undefined\" ? Float64Array : Float32Array; // make PhantomJS happy\r\n\r\nexport function string_to_bytes ( str, utf8 ) {\r\n    utf8 = !!utf8;\r\n\r\n    var len = str.length,\r\n        bytes = new Uint8Array( utf8 ? 4*len : len );\r\n\r\n    for ( var i = 0, j = 0; i < len; i++ ) {\r\n        var c = str.charCodeAt(i);\r\n\r\n        if ( utf8 && 0xd800 <= c && c <= 0xdbff ) {\r\n            if ( ++i >= len ) throw new Error( \"Malformed string, low surrogate expected at position \" + i );\r\n            c = ( (c ^ 0xd800) << 10 ) | 0x10000 | ( str.charCodeAt(i) ^ 0xdc00 );\r\n        }\r\n        else if ( !utf8 && c >>> 8 ) {\r\n            throw new Error(\"Wide characters are not allowed.\");\r\n        }\r\n\r\n        if ( !utf8 || c <= 0x7f ) {\r\n            bytes[j++] = c;\r\n        }\r\n        else if ( c <= 0x7ff ) {\r\n            bytes[j++] = 0xc0 | (c >> 6);\r\n            bytes[j++] = 0x80 | (c & 0x3f);\r\n        }\r\n        else if ( c <= 0xffff ) {\r\n            bytes[j++] = 0xe0 | (c >> 12);\r\n            bytes[j++] = 0x80 | (c >> 6 & 0x3f);\r\n            bytes[j++] = 0x80 | (c & 0x3f);\r\n        }\r\n        else {\r\n            bytes[j++] = 0xf0 | (c >> 18);\r\n            bytes[j++] = 0x80 | (c >> 12 & 0x3f);\r\n            bytes[j++] = 0x80 | (c >> 6 & 0x3f);\r\n            bytes[j++] = 0x80 | (c & 0x3f);\r\n        }\r\n    }\r\n\r\n    return bytes.subarray(0, j);\r\n}\r\n\r\nexport function hex_to_bytes ( str ) {\r\n    var len = str.length;\r\n    if ( len & 1 ) {\r\n        str = '0'+str;\r\n        len++;\r\n    }\r\n    var bytes = new Uint8Array(len>>1);\r\n    for ( var i = 0; i < len; i += 2 ) {\r\n        bytes[i>>1] = parseInt( str.substr( i, 2), 16 );\r\n    }\r\n    return bytes;\r\n}\r\n\r\nexport function base64_to_bytes ( str ) {\r\n    return string_to_bytes( atob( str ) );\r\n}\r\n\r\nexport function bytes_to_string ( bytes, utf8 ) {\r\n    utf8 = !!utf8;\r\n\r\n    var len = bytes.length,\r\n        chars = new Array(len);\r\n\r\n    for ( var i = 0, j = 0; i < len; i++ ) {\r\n        var b = bytes[i];\r\n        if ( !utf8 || b < 128 ) {\r\n            chars[j++] = b;\r\n        }\r\n        else if ( b >= 192 && b < 224 && i+1 < len ) {\r\n            chars[j++] = ( (b & 0x1f) << 6 ) | (bytes[++i] & 0x3f);\r\n        }\r\n        else if ( b >= 224 && b < 240 && i+2 < len ) {\r\n            chars[j++] = ( (b & 0xf) << 12 ) | ( (bytes[++i] & 0x3f) << 6 ) | (bytes[++i] & 0x3f);\r\n        }\r\n        else if ( b >= 240 && b < 248 && i+3 < len ) {\r\n            var c = ( (b & 7) << 18 ) | ( (bytes[++i] & 0x3f) << 12 ) | ( (bytes[++i] & 0x3f) << 6 ) | (bytes[++i] & 0x3f);\r\n            if ( c <= 0xffff ) {\r\n                chars[j++] = c;\r\n            }\r\n            else {\r\n                c ^= 0x10000;\r\n                chars[j++] = 0xd800 | (c >> 10);\r\n                chars[j++] = 0xdc00 | (c & 0x3ff);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Malformed UTF8 character at byte offset \" + i);\r\n        }\r\n    }\r\n\r\n    var str = '',\r\n        bs = 16384;\r\n    for ( var i = 0; i < j; i += bs ) {\r\n        str += String.fromCharCode.apply( String, chars.slice( i, i+bs <= j ? i+bs : j ) );\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nexport function bytes_to_hex ( arr ) {\r\n    var str = '';\r\n    for ( var i = 0; i < arr.length; i++ ) {\r\n        var h = ( arr[i] & 0xff ).toString(16);\r\n        if ( h.length < 2 ) str += '0';\r\n        str += h;\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function bytes_to_base64 ( arr ) {\r\n    return btoa( bytes_to_string(arr) );\r\n}\r\n\r\nexport function pow2_ceil ( a ) {\r\n    a -= 1;\r\n    a |= a >>> 1;\r\n    a |= a >>> 2;\r\n    a |= a >>> 4;\r\n    a |= a >>> 8;\r\n    a |= a >>> 16;\r\n    a += 1;\r\n    return a;\r\n}\r\n\r\nexport function is_number ( a ) {\r\n    return ( typeof a === 'number' );\r\n}\r\n\r\nexport function is_string ( a ) {\r\n    return ( typeof a === 'string' );\r\n}\r\n\r\nexport function is_buffer ( a ) {\r\n    return ( a instanceof ArrayBuffer );\r\n}\r\n\r\nexport function is_bytes ( a ) {\r\n    return ( a instanceof Uint8Array );\r\n}\r\n\r\nexport function is_typed_array ( a ) {\r\n    return ( a instanceof Int8Array ) || ( a instanceof Uint8Array )\r\n        || ( a instanceof Int16Array ) || ( a instanceof Uint16Array )\r\n        || ( a instanceof Int32Array ) || ( a instanceof Uint32Array )\r\n        || ( a instanceof Float32Array )\r\n        || ( a instanceof Float64Array );\r\n}\r\n\r\nexport function _heap_init ( constructor, heap, heapSize ) {\r\n    var size = heap ? heap.byteLength : heapSize || 65536;\r\n\r\n    if ( size & 0xfff || size <= 0 )\r\n        throw new Error(\"heap size must be a positive integer and a multiple of 4096\");\r\n\r\n    heap = heap || new constructor( new ArrayBuffer(size) );\r\n\r\n    return heap;\r\n}\r\n\r\nexport function _heap_write ( heap, hpos, data, dpos, dlen ) {\r\n    var hlen = heap.length - hpos,\r\n        wlen = ( hlen < dlen ) ? hlen : dlen;\r\n\r\n    heap.set( data.subarray( dpos, dpos+wlen ), hpos );\r\n\r\n    return wlen;\r\n}\r\n","export function IllegalStateError () { var err = Error.apply( this, arguments ); this.message = err.message, this.stack = err.stack; }\r\nIllegalStateError.prototype = Object.create( Error.prototype, { name: { value: 'IllegalStateError' } } );\r\n\r\nexport function IllegalArgumentError () { var err = Error.apply( this, arguments ); this.message = err.message, this.stack = err.stack; }\r\nIllegalArgumentError.prototype = Object.create( Error.prototype, { name: { value: 'IllegalArgumentError' } } );\r\n\r\nexport function SecurityError () { var err = Error.apply( this, arguments ); this.message = err.message, this.stack = err.stack; }\r\nSecurityError.prototype = Object.create( Error.prototype, { name: { value: 'SecurityError' } } );\r\n","/**\r\n * @file {@link http://asmjs.org Asm.js} implementation of the {@link https://en.wikipedia.org/wiki/Advanced_Encryption_Standard Advanced Encryption Standard}.\r\n * @author Artem S Vybornov <vybornov@gmail.com>\r\n * @license MIT\r\n */\r\nexport var AES_asm = function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Galois Field stuff init flag\r\n     */\r\n    var ginit_done = false;\r\n\r\n    /**\r\n     * Galois Field exponentiation and logarithm tables for 3 (the generator)\r\n     */\r\n    var gexp3, glog3;\r\n\r\n    /**\r\n     * Init Galois Field tables\r\n     */\r\n    function ginit () {\r\n        gexp3 = [],\r\n        glog3 = [];\r\n\r\n        var a = 1, c, d;\r\n        for ( c = 0; c < 255; c++ ) {\r\n            gexp3[c] = a;\r\n\r\n            // Multiply by three\r\n            d = a & 0x80, a <<= 1, a &= 255;\r\n            if ( d === 0x80 ) a ^= 0x1b;\r\n            a ^= gexp3[c];\r\n\r\n            // Set the log table value\r\n            glog3[gexp3[c]] = c;\r\n        }\r\n        gexp3[255] = gexp3[0];\r\n        glog3[0] = 0;\r\n\r\n        ginit_done = true;\r\n    }\r\n\r\n    /**\r\n     * Galois Field multiplication\r\n     * @param {int} a\r\n     * @param {int} b\r\n     * @return {int}\r\n     */\r\n    function gmul ( a, b ) {\r\n        var c = gexp3[ ( glog3[a] + glog3[b] ) % 255 ];\r\n        if ( a === 0 || b === 0 ) c = 0;\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * Galois Field reciprocal\r\n     * @param {int} a\r\n     * @return {int}\r\n     */\r\n    function ginv ( a ) {\r\n        var i = gexp3[ 255 - glog3[a] ];\r\n        if ( a === 0 ) i = 0;\r\n        return i;\r\n    }\r\n\r\n    /**\r\n     * AES stuff init flag\r\n     */\r\n    var aes_init_done = false;\r\n\r\n    /**\r\n     * Encryption, Decryption, S-Box and KeyTransform tables\r\n     */\r\n    var aes_sbox, aes_sinv, aes_enc, aes_dec;\r\n\r\n    /**\r\n     * Init AES tables\r\n     */\r\n    function aes_init () {\r\n        if ( !ginit_done ) ginit();\r\n\r\n        // Calculates AES S-Box value\r\n        function _s ( a ) {\r\n            var c, s, x;\r\n            s = x = ginv(a);\r\n            for ( c = 0; c < 4; c++ ) {\r\n                s = ( (s << 1) | (s >>> 7) ) & 255;\r\n                x ^= s;\r\n            }\r\n            x ^= 99;\r\n            return x;\r\n        }\r\n\r\n        // Tables\r\n        aes_sbox = [],\r\n        aes_sinv = [],\r\n        aes_enc = [ [], [], [], [] ],\r\n        aes_dec = [ [], [], [], [] ];\r\n\r\n        for ( var i = 0; i < 256; i++ ) {\r\n            var s = _s(i);\r\n\r\n            // S-Box and its inverse\r\n            aes_sbox[i]  = s;\r\n            aes_sinv[s]  = i;\r\n\r\n            // Ecryption and Decryption tables\r\n            aes_enc[0][i] = ( gmul( 2, s ) << 24 )  | ( s << 16 )            | ( s << 8 )             | gmul( 3, s );\r\n            aes_dec[0][s] = ( gmul( 14, i ) << 24 ) | ( gmul( 9, i ) << 16 ) | ( gmul( 13, i ) << 8 ) | gmul( 11, i );\r\n            // Rotate tables\r\n            for ( var t = 1; t < 4; t++ ) {\r\n                aes_enc[t][i] = ( aes_enc[t-1][i] >>> 8 ) | ( aes_enc[t-1][i] << 24 );\r\n                aes_dec[t][s] = ( aes_dec[t-1][s] >>> 8 ) | ( aes_dec[t-1][s] << 24 );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Asm.js module constructor.\r\n     *\r\n     * <p>\r\n     * Heap buffer layout by offset:\r\n     * <pre>\r\n     * 0x0000   encryption key schedule\r\n     * 0x0400   decryption key schedule\r\n     * 0x0800   sbox\r\n     * 0x0c00   inv sbox\r\n     * 0x1000   encryption tables\r\n     * 0x2000   decryption tables\r\n     * 0x3000   reserved (future GCM multiplication lookup table)\r\n     * 0x4000   data\r\n     * </pre>\r\n     * Don't touch anything before <code>0x400</code>.\r\n     * </p>\r\n     *\r\n     * @alias AES_asm\r\n     * @class\r\n     * @param {Object} foreign - <i>ignored</i>\r\n     * @param {ArrayBuffer} buffer - heap buffer to link with\r\n     */\r\n    var wrapper = function ( foreign, buffer ) {\r\n        // Init AES stuff for the first time\r\n        if ( !aes_init_done ) aes_init();\r\n\r\n        // Fill up AES tables\r\n        var heap = new Uint32Array(buffer);\r\n        heap.set( aes_sbox, 0x0800>>2 );\r\n        heap.set( aes_sinv, 0x0c00>>2 );\r\n        for ( var i = 0; i < 4; i++ ) {\r\n            heap.set( aes_enc[i], ( 0x1000 + 0x400 * i )>>2 );\r\n            heap.set( aes_dec[i], ( 0x2000 + 0x400 * i )>>2 );\r\n        }\r\n\r\n        /**\r\n         * Calculate AES key schedules.\r\n         * @instance\r\n         * @memberof AES_asm\r\n         * @param {int} ks - key size, 4/6/8 (for 128/192/256-bit key correspondingly)\r\n         * @param {int} k0..k7 - key vector components\r\n         */\r\n        function set_key ( ks, k0, k1, k2, k3, k4, k5, k6, k7 ) {\r\n            var ekeys = heap.subarray( 0x000, 60 ),\r\n                dkeys = heap.subarray( 0x100, 0x100+60 );\r\n\r\n            // Encryption key schedule\r\n            ekeys.set( [ k0, k1, k2, k3, k4, k5, k6, k7 ] );\r\n            for ( var i = ks, rcon = 1; i < 4*ks+28; i++ ) {\r\n                var k = ekeys[i-1];\r\n                if ( ( i % ks === 0 ) || ( ks === 8 && i % ks === 4 ) ) {\r\n                    k = aes_sbox[k>>>24]<<24 ^ aes_sbox[k>>>16&255]<<16 ^ aes_sbox[k>>>8&255]<<8 ^ aes_sbox[k&255];\r\n                }\r\n                if ( i % ks === 0 ) {\r\n                    k = (k << 8) ^ (k >>> 24) ^ (rcon << 24);\r\n                    rcon = (rcon << 1) ^ ( (rcon & 0x80) ? 0x1b : 0 );\r\n                }\r\n                ekeys[i] = ekeys[i-ks] ^ k;\r\n            }\r\n\r\n            // Decryption key schedule\r\n            for ( var j = 0; j < i; j += 4 ) {\r\n                for ( var jj = 0; jj < 4; jj++ ) {\r\n                    var k = ekeys[i-(4+j)+(4-jj)%4];\r\n                    if ( j < 4 || j >= i-4 ) {\r\n                        dkeys[j+jj] = k;\r\n                    } else {\r\n                        dkeys[j+jj] = aes_dec[0][aes_sbox[k>>>24]]\r\n                                    ^ aes_dec[1][aes_sbox[k>>>16&255]]\r\n                                    ^ aes_dec[2][aes_sbox[k>>>8&255]]\r\n                                    ^ aes_dec[3][aes_sbox[k&255]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Set rounds number\r\n            asm.set_rounds( ks + 5 );\r\n        }\r\n\r\n        // create library object with necessary properties\r\n        var stdlib = { Uint8Array: Uint8Array, Uint32Array: Uint32Array };\r\n\r\n        var asm = function ( stdlib, foreign, buffer ) {\r\n            \"use asm\";\r\n\r\n            var S0 = 0, S1 = 0, S2 = 0, S3 = 0,\r\n                I0 = 0, I1 = 0, I2 = 0, I3 = 0,\r\n                N0 = 0, N1 = 0, N2 = 0, N3 = 0,\r\n                M0 = 0, M1 = 0, M2 = 0, M3 = 0,\r\n                H0 = 0, H1 = 0, H2 = 0, H3 = 0,\r\n                R = 0;\r\n\r\n            var HEAP = new stdlib.Uint32Array(buffer),\r\n                DATA = new stdlib.Uint8Array(buffer);\r\n\r\n            /**\r\n             * AES core\r\n             * @param {int} k - precomputed key schedule offset\r\n             * @param {int} s - precomputed sbox table offset\r\n             * @param {int} t - precomputed round table offset\r\n             * @param {int} r - number of inner rounds to perform\r\n             * @param {int} x0..x3 - 128-bit input block vector\r\n             */\r\n            function _core ( k, s, t, r, x0, x1, x2, x3 ) {\r\n                k = k|0;\r\n                s = s|0;\r\n                t = t|0;\r\n                r = r|0;\r\n                x0 = x0|0;\r\n                x1 = x1|0;\r\n                x2 = x2|0;\r\n                x3 = x3|0;\r\n\r\n                var t1 = 0, t2 = 0, t3 = 0,\r\n                    y0 = 0, y1 = 0, y2 = 0, y3 = 0,\r\n                    i = 0;\r\n\r\n                t1 = t|0x400, t2 = t|0x800, t3 = t|0xc00;\r\n\r\n                // round 0\r\n                x0 = x0 ^ HEAP[(k|0)>>2],\r\n                x1 = x1 ^ HEAP[(k|4)>>2],\r\n                x2 = x2 ^ HEAP[(k|8)>>2],\r\n                x3 = x3 ^ HEAP[(k|12)>>2];\r\n\r\n                // round 1..r\r\n                for ( i = 16; (i|0) <= (r<<4); i = (i+16)|0 ) {\r\n                    y0 = HEAP[(t|x0>>22&1020)>>2] ^ HEAP[(t1|x1>>14&1020)>>2] ^ HEAP[(t2|x2>>6&1020)>>2] ^ HEAP[(t3|x3<<2&1020)>>2] ^ HEAP[(k|i|0)>>2],\r\n                    y1 = HEAP[(t|x1>>22&1020)>>2] ^ HEAP[(t1|x2>>14&1020)>>2] ^ HEAP[(t2|x3>>6&1020)>>2] ^ HEAP[(t3|x0<<2&1020)>>2] ^ HEAP[(k|i|4)>>2],\r\n                    y2 = HEAP[(t|x2>>22&1020)>>2] ^ HEAP[(t1|x3>>14&1020)>>2] ^ HEAP[(t2|x0>>6&1020)>>2] ^ HEAP[(t3|x1<<2&1020)>>2] ^ HEAP[(k|i|8)>>2],\r\n                    y3 = HEAP[(t|x3>>22&1020)>>2] ^ HEAP[(t1|x0>>14&1020)>>2] ^ HEAP[(t2|x1>>6&1020)>>2] ^ HEAP[(t3|x2<<2&1020)>>2] ^ HEAP[(k|i|12)>>2];\r\n                    x0 = y0, x1 = y1, x2 = y2, x3 = y3;\r\n                }\r\n\r\n                // final round\r\n                S0 = HEAP[(s|x0>>22&1020)>>2]<<24 ^ HEAP[(s|x1>>14&1020)>>2]<<16 ^ HEAP[(s|x2>>6&1020)>>2]<<8 ^ HEAP[(s|x3<<2&1020)>>2] ^ HEAP[(k|i|0)>>2],\r\n                S1 = HEAP[(s|x1>>22&1020)>>2]<<24 ^ HEAP[(s|x2>>14&1020)>>2]<<16 ^ HEAP[(s|x3>>6&1020)>>2]<<8 ^ HEAP[(s|x0<<2&1020)>>2] ^ HEAP[(k|i|4)>>2],\r\n                S2 = HEAP[(s|x2>>22&1020)>>2]<<24 ^ HEAP[(s|x3>>14&1020)>>2]<<16 ^ HEAP[(s|x0>>6&1020)>>2]<<8 ^ HEAP[(s|x1<<2&1020)>>2] ^ HEAP[(k|i|8)>>2],\r\n                S3 = HEAP[(s|x3>>22&1020)>>2]<<24 ^ HEAP[(s|x0>>14&1020)>>2]<<16 ^ HEAP[(s|x1>>6&1020)>>2]<<8 ^ HEAP[(s|x2<<2&1020)>>2] ^ HEAP[(k|i|12)>>2];\r\n            }\r\n\r\n            /**\r\n             * ECB mode encryption\r\n             * @param {int} x0..x3 - 128-bit input block vector\r\n             */\r\n            function _ecb_enc ( x0, x1, x2, x3 ) {\r\n                x0 = x0|0;\r\n                x1 = x1|0;\r\n                x2 = x2|0;\r\n                x3 = x3|0;\r\n\r\n                _core(\r\n                    0x0000, 0x0800, 0x1000,\r\n                    R,\r\n                    x0,\r\n                    x1,\r\n                    x2,\r\n                    x3\r\n                );\r\n            }\r\n\r\n            /**\r\n             * ECB mode decryption\r\n             * @param {int} x0..x3 - 128-bit input block vector\r\n             */\r\n            function _ecb_dec ( x0, x1, x2, x3 ) {\r\n                x0 = x0|0;\r\n                x1 = x1|0;\r\n                x2 = x2|0;\r\n                x3 = x3|0;\r\n\r\n                var t = 0;\r\n\r\n                _core(\r\n                    0x0400, 0x0c00, 0x2000,\r\n                    R,\r\n                    x0,\r\n                    x3,\r\n                    x2,\r\n                    x1\r\n                );\r\n\r\n                t = S1, S1 = S3, S3 = t;\r\n            }\r\n\r\n\r\n            /**\r\n             * CBC mode encryption\r\n             * @param {int} x0..x3 - 128-bit input block vector\r\n             */\r\n            function _cbc_enc ( x0, x1, x2, x3 ) {\r\n                x0 = x0|0;\r\n                x1 = x1|0;\r\n                x2 = x2|0;\r\n                x3 = x3|0;\r\n\r\n                _core(\r\n                    0x0000, 0x0800, 0x1000,\r\n                    R,\r\n                    I0 ^ x0,\r\n                    I1 ^ x1,\r\n                    I2 ^ x2,\r\n                    I3 ^ x3\r\n                );\r\n\r\n                I0 = S0,\r\n                I1 = S1,\r\n                I2 = S2,\r\n                I3 = S3;\r\n            }\r\n\r\n            /**\r\n             * CBC mode decryption\r\n             * @param {int} x0..x3 - 128-bit input block vector\r\n             */\r\n            function _cbc_dec ( x0, x1, x2, x3 ) {\r\n                x0 = x0|0;\r\n                x1 = x1|0;\r\n                x2 = x2|0;\r\n                x3 = x3|0;\r\n\r\n                var t = 0;\r\n\r\n                _core(\r\n                    0x0400, 0x0c00, 0x2000,\r\n                    R,\r\n                    x0,\r\n                    x3,\r\n                    x2,\r\n                    x1\r\n                );\r\n\r\n                t = S1, S1 = S3, S3 = t;\r\n\r\n                S0 = S0 ^ I0,\r\n                S1 = S1 ^ I1,\r\n                S2 = S2 ^ I2,\r\n                S3 = S3 ^ I3;\r\n\r\n                I0 = x0,\r\n                I1 = x1,\r\n                I2 = x2,\r\n                I3 = x3;\r\n            }\r\n\r\n            /**\r\n             * CFB mode encryption\r\n             * @param {int} x0..x3 - 128-bit input block vector\r\n             */\r\n            function _cfb_enc ( x0, x1, x2, x3 ) {\r\n                x0 = x0|0;\r\n                x1 = x1|0;\r\n                x2 = x2|0;\r\n                x3 = x3|0;\r\n\r\n                _core(\r\n                    0x0000, 0x0800, 0x1000,\r\n                    R,\r\n                    I0,\r\n                    I1,\r\n                    I2,\r\n                    I3\r\n                );\r\n\r\n                I0 = S0 = S0 ^ x0,\r\n                I1 = S1 = S1 ^ x1,\r\n                I2 = S2 = S2 ^ x2,\r\n                I3 = S3 = S3 ^ x3;\r\n            }\r\n\r\n\r\n            /**\r\n             * CFB mode decryption\r\n             * @param {int} x0..x3 - 128-bit input block vector\r\n             */\r\n            function _cfb_dec ( x0, x1, x2, x3 ) {\r\n                x0 = x0|0;\r\n                x1 = x1|0;\r\n                x2 = x2|0;\r\n                x3 = x3|0;\r\n\r\n                _core(\r\n                    0x0000, 0x0800, 0x1000,\r\n                    R,\r\n                    I0,\r\n                    I1,\r\n                    I2,\r\n                    I3\r\n                );\r\n\r\n                S0 = S0 ^ x0,\r\n                S1 = S1 ^ x1,\r\n                S2 = S2 ^ x2,\r\n                S3 = S3 ^ x3;\r\n\r\n                I0 = x0,\r\n                I1 = x1,\r\n                I2 = x2,\r\n                I3 = x3;\r\n            }\r\n\r\n            /**\r\n             * OFB mode encryption / decryption\r\n             * @param {int} x0..x3 - 128-bit input block vector\r\n             */\r\n            function _ofb ( x0, x1, x2, x3 ) {\r\n                x0 = x0|0;\r\n                x1 = x1|0;\r\n                x2 = x2|0;\r\n                x3 = x3|0;\r\n\r\n                _core(\r\n                    0x0000, 0x0800, 0x1000,\r\n                    R,\r\n                    I0,\r\n                    I1,\r\n                    I2,\r\n                    I3\r\n                );\r\n\r\n                I0 = S0,\r\n                I1 = S1,\r\n                I2 = S2,\r\n                I3 = S3;\r\n\r\n                S0 = S0 ^ x0,\r\n                S1 = S1 ^ x1,\r\n                S2 = S2 ^ x2,\r\n                S3 = S3 ^ x3;\r\n            }\r\n\r\n            /**\r\n             * CTR mode encryption / decryption\r\n             * @param {int} x0..x3 - 128-bit input block vector\r\n             */\r\n            function _ctr ( x0, x1, x2, x3 ) {\r\n                x0 = x0|0;\r\n                x1 = x1|0;\r\n                x2 = x2|0;\r\n                x3 = x3|0;\r\n\r\n                _core(\r\n                    0x0000, 0x0800, 0x1000,\r\n                    R,\r\n                    N0,\r\n                    N1,\r\n                    N2,\r\n                    N3\r\n                );\r\n\r\n                N3 = ( ~M3 & N3 ) | M3 & ( N3 + 1 ),\r\n                N2 = ( ~M2 & N2 ) | M2 & ( N2 + ( (N3|0) == 0 ) ),\r\n                N1 = ( ~M1 & N1 ) | M1 & ( N1 + ( (N2|0) == 0 ) ),\r\n                N0 = ( ~M0 & N0 ) | M0 & ( N0 + ( (N1|0) == 0 ) );\r\n\r\n                S0 = S0 ^ x0,\r\n                S1 = S1 ^ x1,\r\n                S2 = S2 ^ x2,\r\n                S3 = S3 ^ x3;\r\n            }\r\n\r\n            /**\r\n             * GCM mode MAC calculation\r\n             * @param {int} x0..x3 - 128-bit input block vector\r\n             */\r\n            function _gcm_mac ( x0, x1, x2, x3 ) {\r\n                x0 = x0|0;\r\n                x1 = x1|0;\r\n                x2 = x2|0;\r\n                x3 = x3|0;\r\n\r\n                var y0 = 0, y1 = 0, y2 = 0, y3 = 0,\r\n                    z0 = 0, z1 = 0, z2 = 0, z3 = 0,\r\n                    i = 0, c = 0;\r\n\r\n                x0 = x0 ^ I0,\r\n                x1 = x1 ^ I1,\r\n                x2 = x2 ^ I2,\r\n                x3 = x3 ^ I3;\r\n\r\n                y0 = H0|0,\r\n                y1 = H1|0,\r\n                y2 = H2|0,\r\n                y3 = H3|0;\r\n\r\n                for ( ; (i|0) < 128; i = (i + 1)|0 ) {\r\n                    if ( y0 >>> 31 ) {\r\n                        z0 = z0 ^ x0,\r\n                        z1 = z1 ^ x1,\r\n                        z2 = z2 ^ x2,\r\n                        z3 = z3 ^ x3;\r\n                    }\r\n\r\n                    y0 = (y0 << 1) | (y1 >>> 31),\r\n                    y1 = (y1 << 1) | (y2 >>> 31),\r\n                    y2 = (y2 << 1) | (y3 >>> 31),\r\n                    y3 = (y3 << 1);\r\n\r\n                    c = x3 & 1;\r\n\r\n                    x3 = (x3 >>> 1) | (x2 << 31),\r\n                    x2 = (x2 >>> 1) | (x1 << 31),\r\n                    x1 = (x1 >>> 1) | (x0 << 31),\r\n                    x0 = (x0 >>> 1);\r\n\r\n                    if ( c ) x0 = x0 ^ 0xe1000000;\r\n                }\r\n\r\n                I0 = z0,\r\n                I1 = z1,\r\n                I2 = z2,\r\n                I3 = z3;\r\n            }\r\n\r\n            /**\r\n             * Set the internal rounds number.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             * @param {int} r - number if inner AES rounds\r\n             */\r\n            function set_rounds ( r ) {\r\n                r = r|0;\r\n                R = r;\r\n            }\r\n\r\n            /**\r\n             * Populate the internal state of the module.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             * @param {int} s0...s3 - state vector\r\n             */\r\n            function set_state ( s0, s1, s2, s3 ) {\r\n                s0 = s0|0;\r\n                s1 = s1|0;\r\n                s2 = s2|0;\r\n                s3 = s3|0;\r\n\r\n                S0 = s0,\r\n                S1 = s1,\r\n                S2 = s2,\r\n                S3 = s3;\r\n            }\r\n\r\n            /**\r\n             * Populate the internal iv of the module.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             * @param {int} i0...i3 - iv vector\r\n             */\r\n            function set_iv ( i0, i1, i2, i3 ) {\r\n                i0 = i0|0;\r\n                i1 = i1|0;\r\n                i2 = i2|0;\r\n                i3 = i3|0;\r\n\r\n                I0 = i0,\r\n                I1 = i1,\r\n                I2 = i2,\r\n                I3 = i3;\r\n            }\r\n\r\n            /**\r\n             * Set nonce for CTR-family modes.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             * @param {int} n0..n3 - nonce vector\r\n             */\r\n            function set_nonce ( n0, n1, n2, n3 ) {\r\n                n0 = n0|0;\r\n                n1 = n1|0;\r\n                n2 = n2|0;\r\n                n3 = n3|0;\r\n\r\n                N0 = n0,\r\n                N1 = n1,\r\n                N2 = n2,\r\n                N3 = n3;\r\n            }\r\n\r\n            /**\r\n             * Set counter mask for CTR-family modes.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             * @param {int} m0...m3 - counter mask vector\r\n             */\r\n            function set_mask ( m0, m1, m2, m3 ) {\r\n                m0 = m0|0;\r\n                m1 = m1|0;\r\n                m2 = m2|0;\r\n                m3 = m3|0;\r\n\r\n                M0 = m0,\r\n                M1 = m1,\r\n                M2 = m2,\r\n                M3 = m3;\r\n            }\r\n\r\n            /**\r\n             * Set counter for CTR-family modes.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             * @param {int} c0...c3 - counter vector\r\n             */\r\n            function set_counter ( c0, c1, c2, c3 ) {\r\n                c0 = c0|0;\r\n                c1 = c1|0;\r\n                c2 = c2|0;\r\n                c3 = c3|0;\r\n\r\n                N3 = ( ~M3 & N3 ) | M3 & c3,\r\n                N2 = ( ~M2 & N2 ) | M2 & c2,\r\n                N1 = ( ~M1 & N1 ) | M1 & c1,\r\n                N0 = ( ~M0 & N0 ) | M0 & c0;\r\n            }\r\n\r\n            /**\r\n             * Store the internal state vector into the heap.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             * @param {int} pos - offset where to put the data\r\n             * @return {int} The number of bytes have been written into the heap, always 16.\r\n             */\r\n            function get_state ( pos ) {\r\n                pos = pos|0;\r\n\r\n                if ( pos & 15 ) return -1;\r\n\r\n                DATA[pos|0] = S0>>>24,\r\n                DATA[pos|1] = S0>>>16&255,\r\n                DATA[pos|2] = S0>>>8&255,\r\n                DATA[pos|3] = S0&255,\r\n                DATA[pos|4] = S1>>>24,\r\n                DATA[pos|5] = S1>>>16&255,\r\n                DATA[pos|6] = S1>>>8&255,\r\n                DATA[pos|7] = S1&255,\r\n                DATA[pos|8] = S2>>>24,\r\n                DATA[pos|9] = S2>>>16&255,\r\n                DATA[pos|10] = S2>>>8&255,\r\n                DATA[pos|11] = S2&255,\r\n                DATA[pos|12] = S3>>>24,\r\n                DATA[pos|13] = S3>>>16&255,\r\n                DATA[pos|14] = S3>>>8&255,\r\n                DATA[pos|15] = S3&255;\r\n\r\n                return 16;\r\n            }\r\n\r\n            /**\r\n             * Store the internal iv vector into the heap.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             * @param {int} pos - offset where to put the data\r\n             * @return {int} The number of bytes have been written into the heap, always 16.\r\n             */\r\n            function get_iv ( pos ) {\r\n                pos = pos|0;\r\n\r\n                if ( pos & 15 ) return -1;\r\n\r\n                DATA[pos|0] = I0>>>24,\r\n                DATA[pos|1] = I0>>>16&255,\r\n                DATA[pos|2] = I0>>>8&255,\r\n                DATA[pos|3] = I0&255,\r\n                DATA[pos|4] = I1>>>24,\r\n                DATA[pos|5] = I1>>>16&255,\r\n                DATA[pos|6] = I1>>>8&255,\r\n                DATA[pos|7] = I1&255,\r\n                DATA[pos|8] = I2>>>24,\r\n                DATA[pos|9] = I2>>>16&255,\r\n                DATA[pos|10] = I2>>>8&255,\r\n                DATA[pos|11] = I2&255,\r\n                DATA[pos|12] = I3>>>24,\r\n                DATA[pos|13] = I3>>>16&255,\r\n                DATA[pos|14] = I3>>>8&255,\r\n                DATA[pos|15] = I3&255;\r\n\r\n                return 16;\r\n            }\r\n\r\n            /**\r\n             * GCM initialization.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             */\r\n            function gcm_init ( ) {\r\n                _ecb_enc( 0, 0, 0, 0 );\r\n                H0 = S0,\r\n                H1 = S1,\r\n                H2 = S2,\r\n                H3 = S3;\r\n            }\r\n\r\n            /**\r\n             * Perform ciphering operation on the supplied data.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\r\n             * @param {int} pos - offset of the data being processed\r\n             * @param {int} len - length of the data being processed\r\n             * @return {int} Actual amount of data have been processed.\r\n             */\r\n            function cipher ( mode, pos, len ) {\r\n                mode = mode|0;\r\n                pos = pos|0;\r\n                len = len|0;\r\n\r\n                var ret = 0;\r\n\r\n                if ( pos & 15 ) return -1;\r\n\r\n                while ( (len|0) >= 16 ) {\r\n                    _cipher_modes[mode&7](\r\n                        DATA[pos|0]<<24 | DATA[pos|1]<<16 | DATA[pos|2]<<8 | DATA[pos|3],\r\n                        DATA[pos|4]<<24 | DATA[pos|5]<<16 | DATA[pos|6]<<8 | DATA[pos|7],\r\n                        DATA[pos|8]<<24 | DATA[pos|9]<<16 | DATA[pos|10]<<8 | DATA[pos|11],\r\n                        DATA[pos|12]<<24 | DATA[pos|13]<<16 | DATA[pos|14]<<8 | DATA[pos|15]\r\n                    );\r\n\r\n                    DATA[pos|0] = S0>>>24,\r\n                    DATA[pos|1] = S0>>>16&255,\r\n                    DATA[pos|2] = S0>>>8&255,\r\n                    DATA[pos|3] = S0&255,\r\n                    DATA[pos|4] = S1>>>24,\r\n                    DATA[pos|5] = S1>>>16&255,\r\n                    DATA[pos|6] = S1>>>8&255,\r\n                    DATA[pos|7] = S1&255,\r\n                    DATA[pos|8] = S2>>>24,\r\n                    DATA[pos|9] = S2>>>16&255,\r\n                    DATA[pos|10] = S2>>>8&255,\r\n                    DATA[pos|11] = S2&255,\r\n                    DATA[pos|12] = S3>>>24,\r\n                    DATA[pos|13] = S3>>>16&255,\r\n                    DATA[pos|14] = S3>>>8&255,\r\n                    DATA[pos|15] = S3&255;\r\n\r\n                    ret = (ret + 16)|0,\r\n                    pos = (pos + 16)|0,\r\n                    len = (len - 16)|0;\r\n                }\r\n\r\n                return ret|0;\r\n            }\r\n\r\n            /**\r\n             * Calculates MAC of the supplied data.\r\n             * @instance\r\n             * @memberof AES_asm\r\n             * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\r\n             * @param {int} pos - offset of the data being processed\r\n             * @param {int} len - length of the data being processed\r\n             * @return {int} Actual amount of data have been processed.\r\n             */\r\n            function mac ( mode, pos, len ) {\r\n                mode = mode|0;\r\n                pos = pos|0;\r\n                len = len|0;\r\n\r\n                var ret = 0;\r\n\r\n                if ( pos & 15 ) return -1;\r\n\r\n                while ( (len|0) >= 16 ) {\r\n                    _mac_modes[mode&1](\r\n                        DATA[pos|0]<<24 | DATA[pos|1]<<16 | DATA[pos|2]<<8 | DATA[pos|3],\r\n                        DATA[pos|4]<<24 | DATA[pos|5]<<16 | DATA[pos|6]<<8 | DATA[pos|7],\r\n                        DATA[pos|8]<<24 | DATA[pos|9]<<16 | DATA[pos|10]<<8 | DATA[pos|11],\r\n                        DATA[pos|12]<<24 | DATA[pos|13]<<16 | DATA[pos|14]<<8 | DATA[pos|15]\r\n                    );\r\n\r\n                    ret = (ret + 16)|0,\r\n                    pos = (pos + 16)|0,\r\n                    len = (len - 16)|0;\r\n                }\r\n\r\n                return ret|0;\r\n            }\r\n\r\n            /**\r\n             * AES cipher modes table (virual methods)\r\n             */\r\n            var _cipher_modes = [ _ecb_enc, _ecb_dec, _cbc_enc, _cbc_dec, _cfb_enc, _cfb_dec, _ofb, _ctr ];\r\n\r\n            /**\r\n             * AES MAC modes table (virual methods)\r\n             */\r\n            var _mac_modes = [ _cbc_enc, _gcm_mac ];\r\n\r\n            /**\r\n             * Asm.js module exports\r\n             */\r\n            return {\r\n                set_rounds: set_rounds,\r\n                set_state:  set_state,\r\n                set_iv:     set_iv,\r\n                set_nonce:  set_nonce,\r\n                set_mask:   set_mask,\r\n                set_counter:set_counter,\r\n                get_state:  get_state,\r\n                get_iv:     get_iv,\r\n                gcm_init:   gcm_init,\r\n                cipher:     cipher,\r\n                mac:        mac\r\n            };\r\n        }( stdlib, foreign, buffer );\r\n\r\n        asm.set_key = set_key;\r\n\r\n        return asm;\r\n    };\r\n\r\n    /**\r\n     * AES enciphering mode constants\r\n     * @enum {int}\r\n     * @const\r\n     */\r\n    wrapper.ENC = {\r\n        ECB: 0,\r\n        CBC: 2,\r\n        CFB: 4,\r\n        OFB: 6,\r\n        CTR: 7\r\n    },\r\n\r\n    /**\r\n     * AES deciphering mode constants\r\n     * @enum {int}\r\n     * @const\r\n     */\r\n    wrapper.DEC = {\r\n        ECB: 1,\r\n        CBC: 3,\r\n        CFB: 5,\r\n        OFB: 6,\r\n        CTR: 7\r\n    },\r\n\r\n    /**\r\n     * AES MAC mode constants\r\n     * @enum {int}\r\n     * @const\r\n     */\r\n    wrapper.MAC = {\r\n        CBC: 0,\r\n        GCM: 1\r\n    };\r\n\r\n    /**\r\n     * Heap data offset\r\n     * @type {int}\r\n     * @const\r\n     */\r\n    wrapper.HEAP_DATA = 0x4000;\r\n\r\n    return wrapper;\r\n}();\r\n","// shared asm.js module and heap\r\nimport {AES_asm} from './aes.asm';\r\n\r\nexport var _AES_heap_instance = new Uint8Array(0x100000); // 1MB\r\nexport var _AES_asm_instance  = AES_asm( null, _AES_heap_instance.buffer );\r\n","import {AES_asm} from './aes.asm';\r\nimport {_heap_init, _heap_write, is_bytes, is_number} from '../utils';\r\nimport {IllegalArgumentError, SecurityError} from '../errors';\r\n\r\nexport class AES {\r\n  constructor(key, iv, padding, heap, asm) {\r\n    this.nonce = null;\r\n    this.counter = 0;\r\n    this.counterSize = 0;\r\n\r\n    this.heap = _heap_init( Uint8Array, heap ).subarray( AES_asm.HEAP_DATA );\r\n    this.asm = asm || AES_asm( null, this.heap.buffer );\r\n    this.mode = null;\r\n    this.key = null;\r\n\r\n    this.AES_reset( key, iv, padding );\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} key\r\n   */\r\n  AES_set_key ( key ) {\r\n    if ( key !== undefined ) {\r\n      if ( !is_bytes(key) ) {\r\n        throw new TypeError(\"unexpected key type\");\r\n      }\r\n\r\n      var keylen = key.length;\r\n      if ( keylen !== 16 && keylen !== 24 && keylen !== 32 )\r\n        throw new IllegalArgumentError(\"illegal key size\");\r\n\r\n      var keyview = new DataView( key.buffer, key.byteOffset, key.byteLength );\r\n      this.asm.set_key(\r\n        keylen >> 2,\r\n        keyview.getUint32(0),\r\n        keyview.getUint32(4),\r\n        keyview.getUint32(8),\r\n        keyview.getUint32(12),\r\n        keylen > 16 ? keyview.getUint32(16) : 0,\r\n        keylen > 16 ? keyview.getUint32(20) : 0,\r\n        keylen > 24 ? keyview.getUint32(24) : 0,\r\n        keylen > 24 ? keyview.getUint32(28) : 0\r\n      );\r\n\r\n      this.key = key;\r\n    }\r\n    else if ( !this.key ) {\r\n      throw new Error(\"key is required\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This should be mixin instead of inheritance\r\n   *\r\n   * @param {Uint8Array} nonce\r\n   * @param {number} [counter]\r\n   * @param {number} [size]\r\n   */\r\n  AES_CTR_set_options ( nonce, counter, size ) {\r\n    if ( size !== undefined ) {\r\n      if ( size < 8 || size > 48 )\r\n        throw new IllegalArgumentError(\"illegal counter size\");\r\n\r\n      this.counterSize = size;\r\n\r\n      var mask = Math.pow( 2, size ) - 1;\r\n      this.asm.set_mask( 0, 0, (mask / 0x100000000)|0, mask|0 );\r\n    }\r\n    else {\r\n      this.counterSize = size = 48;\r\n      this.asm.set_mask( 0, 0, 0xffff, 0xffffffff );\r\n    }\r\n\r\n    if ( nonce !== undefined ) {\r\n      if ( !is_bytes(nonce) ) {\r\n        throw new TypeError(\"unexpected nonce type\");\r\n      }\r\n\r\n      var len = nonce.length;\r\n      if ( !len || len > 16 )\r\n        throw new IllegalArgumentError(\"illegal nonce size\");\r\n\r\n      this.nonce = nonce;\r\n\r\n      var view = new DataView( new ArrayBuffer(16) );\r\n      new Uint8Array(view.buffer).set(nonce);\r\n\r\n      this.asm.set_nonce( view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12) );\r\n    }\r\n    else {\r\n      throw new Error(\"nonce is required\");\r\n    }\r\n\r\n    if ( counter !== undefined ) {\r\n      if ( !is_number(counter) )\r\n        throw new TypeError(\"unexpected counter type\");\r\n\r\n      if ( counter < 0 || counter >= Math.pow( 2, size ) )\r\n        throw new IllegalArgumentError(\"illegal counter value\");\r\n\r\n      this.counter = counter;\r\n\r\n      this.asm.set_counter( 0, 0, (counter / 0x100000000)|0, counter|0 );\r\n    }\r\n    else {\r\n      this.counter = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} iv\r\n   */\r\n  AES_set_iv ( iv ) {\r\n    if ( iv !== undefined ) {\r\n      if ( !is_bytes(iv) ) {\r\n        throw new TypeError(\"unexpected iv type\");\r\n      }\r\n\r\n      if ( iv.length !== 16 )\r\n        throw new IllegalArgumentError(\"illegal iv size\");\r\n\r\n      var ivview = new DataView( iv.buffer, iv.byteOffset, iv.byteLength );\r\n\r\n      this.iv = iv;\r\n      this.asm.set_iv( ivview.getUint32(0), ivview.getUint32(4), ivview.getUint32(8), ivview.getUint32(12) );\r\n    }\r\n    else {\r\n      this.iv = null;\r\n      this.asm.set_iv( 0, 0, 0, 0 );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} padding\r\n   */\r\n  AES_set_padding ( padding ) {\r\n    if ( padding !== undefined ) {\r\n      this.padding = !!padding;\r\n    }\r\n    else {\r\n      this.padding = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} key\r\n   * @param {Uint8Array} [iv]\r\n   * @param {boolean} [padding]\r\n   */\r\n  AES_reset ( key, iv, padding ) {\r\n    this.result = null;\r\n    this.pos = 0;\r\n    this.len = 0;\r\n\r\n    this.AES_set_key( key );\r\n    this.AES_set_iv( iv );\r\n    this.AES_set_padding( padding );\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {Uint8Array} data\r\n   */\r\n  AES_Encrypt_process ( data ) {\r\n    if ( !is_bytes(data) )\r\n      throw new TypeError(\"data isn't of expected type\");\r\n\r\n    var asm = this.asm,\r\n      heap = this.heap,\r\n      amode = AES_asm.ENC[this.mode],\r\n      hpos = AES_asm.HEAP_DATA,\r\n      pos = this.pos,\r\n      len = this.len,\r\n      dpos = 0,\r\n      dlen = data.length || 0,\r\n      rpos = 0,\r\n      rlen = (len + dlen) & -16,\r\n      wlen = 0;\r\n\r\n    var result = new Uint8Array(rlen);\r\n\r\n    while ( dlen > 0 ) {\r\n      wlen = _heap_write( heap, pos+len, data, dpos, dlen );\r\n      len  += wlen;\r\n      dpos += wlen;\r\n      dlen -= wlen;\r\n\r\n      wlen = asm.cipher( amode, hpos + pos, len );\r\n\r\n      if ( wlen ) result.set( heap.subarray( pos, pos + wlen ), rpos );\r\n      rpos += wlen;\r\n\r\n      if ( wlen < len ) {\r\n        pos += wlen;\r\n        len -= wlen;\r\n      } else {\r\n        pos = 0;\r\n        len = 0;\r\n      }\r\n    }\r\n\r\n    this.result = result;\r\n    this.pos = pos;\r\n    this.len = len;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} data\r\n   */\r\n  AES_Encrypt_finish ( data ) {\r\n    var presult = null,\r\n      prlen = 0;\r\n\r\n    if ( data !== undefined ) {\r\n      presult = this.AES_Encrypt_process( data ).result;\r\n      prlen = presult.length;\r\n    }\r\n\r\n    var asm = this.asm,\r\n      heap = this.heap,\r\n      amode = AES_asm.ENC[this.mode],\r\n      hpos = AES_asm.HEAP_DATA,\r\n      pos = this.pos,\r\n      len = this.len,\r\n      plen = 16 - len % 16,\r\n      rlen = len;\r\n\r\n    if ( this.hasOwnProperty('padding') ) {\r\n      if ( this.padding ) {\r\n        for ( var p = 0; p < plen; ++p ) heap[ pos + len + p ] = plen;\r\n        len += plen;\r\n        rlen = len;\r\n      }\r\n      else if ( len % 16 ) {\r\n        throw new IllegalArgumentError(\"data length must be a multiple of the block size\");\r\n      }\r\n    }\r\n    else {\r\n      len += plen;\r\n    }\r\n\r\n    var result = new Uint8Array( prlen + rlen );\r\n\r\n    if ( prlen ) result.set( presult );\r\n\r\n    if ( len ) asm.cipher( amode, hpos + pos, len );\r\n\r\n    if ( rlen ) result.set( heap.subarray( pos, pos + rlen ), prlen );\r\n\r\n    this.result = result;\r\n    this.pos = 0;\r\n    this.len = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} data\r\n   */\r\n  AES_Decrypt_process ( data ) {\r\n    if ( !is_bytes(data) )\r\n      throw new TypeError(\"data isn't of expected type\");\r\n\r\n    var asm = this.asm,\r\n      heap = this.heap,\r\n      amode = AES_asm.DEC[this.mode],\r\n      hpos = AES_asm.HEAP_DATA,\r\n      pos = this.pos,\r\n      len = this.len,\r\n      dpos = 0,\r\n      dlen = data.length || 0,\r\n      rpos = 0,\r\n      rlen = (len + dlen) & -16,\r\n      plen = 0,\r\n      wlen = 0;\r\n\r\n    if ( this.padding ) {\r\n      plen = len + dlen - rlen || 16;\r\n      rlen -= plen;\r\n    }\r\n\r\n    var result = new Uint8Array(rlen);\r\n\r\n    while ( dlen > 0 ) {\r\n      wlen = _heap_write( heap, pos+len, data, dpos, dlen );\r\n      len  += wlen;\r\n      dpos += wlen;\r\n      dlen -= wlen;\r\n\r\n      wlen = asm.cipher( amode, hpos + pos, len - ( !dlen ? plen : 0 ) );\r\n\r\n      if ( wlen ) result.set( heap.subarray( pos, pos + wlen ), rpos );\r\n      rpos += wlen;\r\n\r\n      if ( wlen < len ) {\r\n        pos += wlen;\r\n        len -= wlen;\r\n      } else {\r\n        pos = 0;\r\n        len = 0;\r\n      }\r\n    }\r\n\r\n    this.result = result;\r\n    this.pos = pos;\r\n    this.len = len;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} data\r\n   */\r\n  AES_Decrypt_finish ( data ) {\r\n    var presult = null,\r\n      prlen = 0;\r\n\r\n    if ( data !== undefined ) {\r\n      presult = this.AES_Decrypt_process( data ).result;\r\n      prlen = presult.length;\r\n    }\r\n\r\n    var asm = this.asm,\r\n      heap = this.heap,\r\n      amode = AES_asm.DEC[this.mode],\r\n      hpos = AES_asm.HEAP_DATA,\r\n      pos = this.pos,\r\n      len = this.len,\r\n      rlen = len;\r\n\r\n    if ( len > 0 ) {\r\n      if ( len % 16 ) {\r\n        if ( this.hasOwnProperty('padding') ) {\r\n          throw new IllegalArgumentError(\"data length must be a multiple of the block size\");\r\n        } else {\r\n          len += 16 - len % 16;\r\n        }\r\n      }\r\n\r\n      asm.cipher( amode, hpos + pos, len );\r\n\r\n      if ( this.hasOwnProperty('padding') && this.padding ) {\r\n        var pad = heap[ pos + rlen - 1 ];\r\n        if ( pad < 1 || pad > 16 || pad > rlen )\r\n          throw new SecurityError(\"bad padding\");\r\n\r\n        var pcheck = 0;\r\n        for ( var i = pad; i > 1; i-- ) pcheck |= pad ^ heap[ pos + rlen - i ];\r\n        if ( pcheck )\r\n          throw new SecurityError(\"bad padding\");\r\n\r\n        rlen -= pad;\r\n      }\r\n    }\r\n\r\n    var result = new Uint8Array( prlen + rlen );\r\n\r\n    if ( prlen > 0 ) {\r\n      result.set( presult );\r\n    }\r\n\r\n    if ( rlen > 0 ) {\r\n      result.set( heap.subarray( pos, pos + rlen ), prlen );\r\n    }\r\n\r\n    this.result = result;\r\n    this.pos = 0;\r\n    this.len = 0;\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","/**\r\n * Cipher Block Chaining Mode (CBC)\r\n */\r\nimport {AES} from '../aes';\r\n\r\nexport class AES_CBC extends AES {\r\n  /**\r\n   * @param {Uint8Array} key\r\n   * @param {Uint8Array} [iv=null]\r\n   * @param {boolean} [padding=true]\r\n   * @param {Uint8Array} [heap]\r\n   * @param {Uint8Array} [asm]\r\n   */\r\n  constructor(key, iv = null, padding = true, heap, asm) {\r\n    super(key, iv, padding, heap, asm);\r\n\r\n    this.mode = 'CBC';\r\n    this.BLOCK_SIZE = 16;\r\n  }\r\n\r\n  encrypt(data) {\r\n    return this.AES_Encrypt_finish(data);\r\n  }\r\n\r\n  decrypt(data) {\r\n    return this.AES_Decrypt_finish(data);\r\n  }\r\n}\r\n\r\nexport class AES_CBC_Encrypt extends AES_CBC {\r\n  /**\r\n   * @param {Uint8Array} key\r\n   * @param {Uint8Array} [iv=null]\r\n   * @param {boolean} [padding=true]\r\n   * @param {Uint8Array} [heap]\r\n   * @param {Uint8Array} [asm]\r\n   */\r\n  constructor(key, iv, padding, heap, asm) {\r\n    super(key, iv, padding, heap, asm);\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} key\r\n   * @returns {AES_CBC_Encrypt}\r\n   */\r\n  reset(key) {\r\n    return this.AES_reset(key, null, true);\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} data\r\n   * @returns {AES_CBC_Encrypt}\r\n   */\r\n  process(data) {\r\n    return this.AES_Encrypt_process(data);\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} data\r\n   * @returns {AES_CBC_Encrypt}\r\n   */\r\n  finish(data) {\r\n    return this.AES_Encrypt_finish(data);\r\n  }\r\n}\r\n\r\nexport class AES_CBC_Decrypt extends AES_CBC {\r\n  /**\r\n   * @param {Uint8Array} key\r\n   * @param {Uint8Array} [iv=null]\r\n   * @param {boolean} [padding=true]\r\n   * @param {Uint8Array} [heap]\r\n   * @param {Uint8Array} [asm]\r\n   */\r\n  constructor(key, iv, padding, heap, asm) {\r\n    super(key, iv, padding, heap, asm);\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} key\r\n   * @returns {AES_CBC_Decrypt}\r\n   */\r\n  reset(key) {\r\n    return this.AES_reset(key, null, true);\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} data\r\n   * @returns {AES_CBC_Decrypt}\r\n   */\r\n  process(data) {\r\n    return this.AES_Decrypt_process(data);\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} data\r\n   * @returns {AES_CBC_Decrypt}\r\n   */\r\n  finish(data) {\r\n    return this.AES_Decrypt_finish(data);\r\n  }\r\n}\r\n\r\n","import {_AES_asm_instance, _AES_heap_instance} from '../exports';\r\nimport {AES_CBC, AES_CBC_Decrypt, AES_CBC_Encrypt} from './cbc';\r\n\r\n/**\r\n * @param {Uint8Array} data\r\n * @param {Uint8Array} key\r\n * @param {boolean} [padding]\r\n * @param {Uint8Array} [iv]\r\n * @returns {Uint8Array}\r\n */\r\nfunction AES_CBC_encrypt_bytes (data, key, padding, iv ) {\r\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\r\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\r\n    return new AES_CBC(key, iv, padding, _AES_heap_instance, _AES_asm_instance).encrypt(data).result;\r\n}\r\n\r\n/**\r\n * @param {Uint8Array} data\r\n * @param {Uint8Array} key\r\n * @param {boolean} [padding]\r\n * @param {Uint8Array} [iv]\r\n * @returns {Uint8Array}\r\n */\r\nfunction AES_CBC_decrypt_bytes ( data, key, padding, iv ) {\r\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\r\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\r\n    return new AES_CBC(key, iv, padding, _AES_heap_instance, _AES_asm_instance).decrypt(data).result;\r\n}\r\n\r\nAES_CBC.encrypt = AES_CBC_encrypt_bytes;\r\nAES_CBC.decrypt = AES_CBC_decrypt_bytes;\r\n\r\nAES_CBC.Encrypt = AES_CBC_Encrypt;\r\nAES_CBC.Decrypt = AES_CBC_Decrypt;\r\n\r\nexport {AES_CBC};\r\n","/**\r\n * Galois/Counter mode\r\n */\r\n\r\nimport {IllegalArgumentError, IllegalStateError, SecurityError} from '../../errors';\r\nimport {_heap_write, is_bytes, is_number} from '../../utils';\r\nimport {AES} from '../aes';\r\nimport {AES_asm} from '../aes.asm'\r\n\r\nvar _AES_GCM_data_maxLength = 68719476704;  // 2^36 - 2^5\r\n\r\nexport class AES_GCM extends AES {\r\n  constructor(key, nonce, adata, tagSize, heap, asm ) {\r\n    super(key, undefined, false, heap, asm);\r\n\r\n    this.nonce      = null;\r\n    this.adata      = null;\r\n    this.iv         = null;\r\n    this.counter    = 1;\r\n    this.tagSize    = 16;\r\n    this.mode       = 'GCM';\r\n    this.BLOCK_SIZE = 16;\r\n\r\n    this.reset(key, tagSize, nonce, adata);\r\n  }\r\n\r\n  reset(key, tagSize, nonce, adata) {\r\n    return this.AES_GCM_reset(key, tagSize, nonce, adata)\r\n  }\r\n\r\n  encrypt(data) {\r\n    return this.AES_GCM_encrypt(data);\r\n  }\r\n\r\n  decrypt(data) {\r\n    return this.AES_GCM_decrypt(data);\r\n  }\r\n\r\n  AES_GCM_Encrypt_process ( data ) {\r\n    if ( !is_bytes(data) )\r\n      throw new TypeError(\"data isn't of expected type\");\r\n\r\n    var dpos = 0,\r\n      dlen = data.length || 0,\r\n      asm = this.asm,\r\n      heap = this.heap,\r\n      counter = this.counter,\r\n      pos = this.pos,\r\n      len = this.len,\r\n      rpos = 0,\r\n      rlen = ( len + dlen ) & -16,\r\n      wlen = 0;\r\n\r\n    if ( ((counter-1)<<4) + len + dlen > _AES_GCM_data_maxLength )\r\n      throw new RangeError(\"counter overflow\");\r\n\r\n    var result = new Uint8Array(rlen);\r\n\r\n    while ( dlen > 0 ) {\r\n      wlen = _heap_write( heap, pos+len, data, dpos, dlen );\r\n      len  += wlen;\r\n      dpos += wlen;\r\n      dlen -= wlen;\r\n\r\n      wlen = asm.cipher( AES_asm.ENC.CTR, AES_asm.HEAP_DATA + pos, len );\r\n      wlen = asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, wlen );\r\n\r\n      if ( wlen ) result.set( heap.subarray( pos, pos + wlen ), rpos );\r\n      counter += (wlen>>>4);\r\n      rpos += wlen;\r\n\r\n      if ( wlen < len ) {\r\n        pos += wlen;\r\n        len -= wlen;\r\n      } else {\r\n        pos = 0;\r\n        len = 0;\r\n      }\r\n    }\r\n\r\n    this.result = result;\r\n    this.counter = counter;\r\n    this.pos = pos;\r\n    this.len = len;\r\n\r\n    return this;\r\n  }\r\n\r\n  AES_GCM_Encrypt_finish () {\r\n    var asm = this.asm,\r\n      heap = this.heap,\r\n      counter = this.counter,\r\n      tagSize = this.tagSize,\r\n      adata = this.adata,\r\n      pos = this.pos,\r\n      len = this.len;\r\n\r\n    var result = new Uint8Array( len + tagSize );\r\n\r\n    asm.cipher( AES_asm.ENC.CTR, AES_asm.HEAP_DATA + pos, (len + 15) & -16 );\r\n    if ( len ) result.set( heap.subarray( pos, pos + len ) );\r\n\r\n    for ( var i = len; i & 15; i++ ) heap[ pos + i ] = 0;\r\n    asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, i );\r\n\r\n    var alen = ( adata !== null ) ? adata.length : 0,\r\n      clen = ( (counter-1) << 4) + len;\r\n    heap[0] = heap[1] = heap[2] = 0,\r\n      heap[3] = alen>>>29,\r\n      heap[4] = alen>>>21,\r\n      heap[5] = alen>>>13&255,\r\n      heap[6] = alen>>>5&255,\r\n      heap[7] = alen<<3&255,\r\n      heap[8] = heap[9] = heap[10] = 0,\r\n      heap[11] = clen>>>29,\r\n      heap[12] = clen>>>21&255,\r\n      heap[13] = clen>>>13&255,\r\n      heap[14] = clen>>>5&255,\r\n      heap[15] = clen<<3&255;\r\n    asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16 );\r\n    asm.get_iv( AES_asm.HEAP_DATA );\r\n\r\n    asm.set_counter( 0, 0, 0, this.gamma0 );\r\n    asm.cipher( AES_asm.ENC.CTR, AES_asm.HEAP_DATA, 16 );\r\n    result.set( heap.subarray( 0, tagSize ), len );\r\n\r\n    this.result = result;\r\n    this.counter = 1;\r\n    this.pos = 0;\r\n    this.len = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  AES_GCM_Decrypt_process ( data ) {\r\n    if ( !is_bytes(data) )\r\n      throw new TypeError(\"data isn't of expected type\");\r\n\r\n    var dpos = 0,\r\n      dlen = data.length || 0,\r\n      asm = this.asm,\r\n      heap = this.heap,\r\n      counter = this.counter,\r\n      tagSize = this.tagSize,\r\n      pos = this.pos,\r\n      len = this.len,\r\n      rpos = 0,\r\n      rlen = len + dlen > tagSize ? ( len + dlen - tagSize ) & -16 : 0,\r\n      tlen = len + dlen - rlen,\r\n      wlen = 0;\r\n\r\n    if ( ((counter-1)<<4) + len + dlen > _AES_GCM_data_maxLength )\r\n      throw new RangeError(\"counter overflow\");\r\n\r\n    var result = new Uint8Array(rlen);\r\n\r\n    while ( dlen > tlen ) {\r\n      wlen = _heap_write( heap, pos+len, data, dpos, dlen-tlen );\r\n      len  += wlen;\r\n      dpos += wlen;\r\n      dlen -= wlen;\r\n\r\n      wlen = asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, wlen );\r\n      wlen = asm.cipher( AES_asm.DEC.CTR, AES_asm.HEAP_DATA + pos, wlen );\r\n\r\n      if ( wlen ) result.set( heap.subarray( pos, pos+wlen ), rpos );\r\n      counter += (wlen>>>4);\r\n      rpos += wlen;\r\n\r\n      pos = 0;\r\n      len = 0;\r\n    }\r\n\r\n    if ( dlen > 0 ) {\r\n      len += _heap_write( heap, 0, data, dpos, dlen );\r\n    }\r\n\r\n    this.result = result;\r\n    this.counter = counter;\r\n    this.pos = pos;\r\n    this.len = len;\r\n\r\n    return this;\r\n  }\r\n\r\n  AES_GCM_Decrypt_finish () {\r\n    var asm = this.asm,\r\n      heap = this.heap,\r\n      tagSize = this.tagSize,\r\n      adata = this.adata,\r\n      counter = this.counter,\r\n      pos = this.pos,\r\n      len = this.len,\r\n      rlen = len - tagSize,\r\n      wlen = 0;\r\n\r\n    if (len < tagSize)\r\n      throw new IllegalStateError(\"authentication tag not found\");\r\n\r\n    var result = new Uint8Array(rlen),\r\n      atag = new Uint8Array(heap.subarray(pos + rlen, pos + len));\r\n\r\n    for (var i = rlen; i & 15; i++) heap[pos + i] = 0;\r\n\r\n    wlen = asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, i);\r\n    wlen = asm.cipher(AES_asm.DEC.CTR, AES_asm.HEAP_DATA + pos, i);\r\n    if (rlen) result.set(heap.subarray(pos, pos + rlen));\r\n\r\n    var alen = (adata !== null) ? adata.length : 0,\r\n      clen = ((counter - 1) << 4) + len - tagSize;\r\n    heap[0] = heap[1] = heap[2] = 0,\r\n      heap[3] = alen >>> 29,\r\n      heap[4] = alen >>> 21,\r\n      heap[5] = alen >>> 13 & 255,\r\n      heap[6] = alen >>> 5 & 255,\r\n      heap[7] = alen << 3 & 255,\r\n      heap[8] = heap[9] = heap[10] = 0,\r\n      heap[11] = clen >>> 29,\r\n      heap[12] = clen >>> 21 & 255,\r\n      heap[13] = clen >>> 13 & 255,\r\n      heap[14] = clen >>> 5 & 255,\r\n      heap[15] = clen << 3 & 255;\r\n    asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16);\r\n    asm.get_iv(AES_asm.HEAP_DATA);\r\n\r\n    asm.set_counter(0, 0, 0, this.gamma0);\r\n    asm.cipher(AES_asm.ENC.CTR, AES_asm.HEAP_DATA, 16);\r\n\r\n    var acheck = 0;\r\n    for (var i = 0; i < tagSize; ++i) acheck |= atag[i] ^ heap[i];\r\n    if (acheck)\r\n      throw new SecurityError(\"data integrity check failed\");\r\n\r\n    this.result = result;\r\n    this.counter = 1;\r\n    this.pos = 0;\r\n    this.len = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  AES_GCM_decrypt ( data ) {\r\n    var result1 = this.AES_GCM_Decrypt_process( data ).result;\r\n    var result2 = this.AES_GCM_Decrypt_finish().result;\r\n\r\n    var result = new Uint8Array( result1.length + result2.length );\r\n    if ( result1.length ) result.set( result1 );\r\n    if ( result2.length ) result.set( result2, result1.length );\r\n    this.result = result;\r\n\r\n    return this;\r\n  }\r\n\r\n  AES_GCM_encrypt ( data ) {\r\n    var result1 = this.AES_GCM_Encrypt_process( data ).result;\r\n    var result2 = this.AES_GCM_Encrypt_finish().result;\r\n\r\n    var result = new Uint8Array( result1.length + result2.length );\r\n    if ( result1.length ) result.set( result1 );\r\n    if ( result2.length ) result.set( result2, result1.length );\r\n    this.result = result;\r\n\r\n    return this;\r\n  }\r\n\r\n  AES_GCM_reset (key, tagSize, nonce, adata, counter, iv  ) {\r\n    this.AES_reset(key, undefined, false);\r\n\r\n    var asm = this.asm;\r\n    var heap = this.heap;\r\n\r\n    asm.gcm_init();\r\n\r\n    var tagSize = tagSize;\r\n    if ( tagSize !== undefined ) {\r\n      if ( !is_number(tagSize) )\r\n        throw new TypeError(\"tagSize must be a number\");\r\n\r\n      if ( tagSize < 4 || tagSize > 16 )\r\n        throw new IllegalArgumentError(\"illegal tagSize value\");\r\n\r\n      this.tagSize = tagSize;\r\n    }\r\n    else {\r\n      this.tagSize = 16;\r\n    }\r\n\r\n    if ( nonce !== undefined ) {\r\n      if ( !is_bytes(nonce)) {\r\n        throw new TypeError(\"unexpected nonce type\");\r\n      }\r\n\r\n      this.nonce = nonce;\r\n\r\n      var noncelen = nonce.length || 0,\r\n        noncebuf = new Uint8Array(16);\r\n      if ( noncelen !== 12 ) {\r\n        this._gcm_mac_process( nonce );\r\n\r\n        heap[0] = heap[1] = heap[2] = heap[3] = heap[4] = heap[5] = heap[6] = heap[7] = heap[8] = heap[9] = heap[10] = 0,\r\n          heap[11] = noncelen>>>29,\r\n          heap[12] = noncelen>>>21&255,\r\n          heap[13] = noncelen>>>13&255,\r\n          heap[14] = noncelen>>>5&255,\r\n          heap[15] = noncelen<<3&255;\r\n        asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16 );\r\n\r\n        asm.get_iv( AES_asm.HEAP_DATA );\r\n        asm.set_iv();\r\n\r\n        noncebuf.set( heap.subarray( 0, 16 ) );\r\n      }\r\n      else {\r\n        noncebuf.set(nonce);\r\n        noncebuf[15] = 1;\r\n      }\r\n\r\n      var nonceview = new DataView( noncebuf.buffer );\r\n      this.gamma0 = nonceview.getUint32(12);\r\n\r\n      asm.set_nonce( nonceview.getUint32(0), nonceview.getUint32(4), nonceview.getUint32(8), 0 );\r\n      asm.set_mask( 0, 0, 0, 0xffffffff );\r\n    }\r\n    else {\r\n      throw new Error(\"nonce is required\");\r\n    }\r\n\r\n    if ( adata !== undefined && adata !== null ) {\r\n      if ( !is_bytes(adata) ){\r\n        throw new TypeError(\"unexpected adata type\");\r\n      }\r\n\r\n      if ( adata.length > _AES_GCM_data_maxLength )\r\n        throw new IllegalArgumentError(\"illegal adata length\");\r\n\r\n      if ( adata.length ) {\r\n        this.adata = adata;\r\n        this._gcm_mac_process( adata );\r\n      }\r\n      else {\r\n        this.adata = null;\r\n      }\r\n    }\r\n    else {\r\n      this.adata = null;\r\n    }\r\n\r\n    if ( counter !== undefined ) {\r\n      if ( !is_number(counter) )\r\n        throw new TypeError(\"counter must be a number\");\r\n\r\n      if ( counter < 1 || counter > 0xffffffff )\r\n        throw new RangeError(\"counter must be a positive 32-bit integer\");\r\n\r\n      this.counter = counter;\r\n      asm.set_counter( 0, 0, 0, this.gamma0+counter|0 );\r\n    }\r\n    else {\r\n      this.counter = 1;\r\n      asm.set_counter( 0, 0, 0, this.gamma0+1|0 );\r\n    }\r\n\r\n    if ( iv !== undefined ) {\r\n      if ( !is_number(iv) )\r\n        throw new TypeError(\"iv must be a number\");\r\n\r\n      this.iv = iv;\r\n\r\n      this.AES_set_iv( iv );\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  _gcm_mac_process ( data ) {\r\n    var heap = this.heap,\r\n      asm  = this.asm,\r\n      dpos = 0,\r\n      dlen = data.length || 0,\r\n      wlen = 0;\r\n\r\n    while ( dlen > 0 ) {\r\n      wlen = _heap_write( heap, 0, data, dpos, dlen );\r\n      dpos += wlen;\r\n      dlen -= wlen;\r\n\r\n      while ( wlen & 15 ) heap[ wlen++ ] = 0;\r\n\r\n      asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA, wlen );\r\n    }\r\n  }\r\n}\r\n\r\nexport class AES_GCM_Encrypt extends AES_GCM {\r\n  constructor(key, nonce, adata, tagSize, heap, asm ) {\r\n    super(key, nonce, adata, tagSize, heap, asm );\r\n  }\r\n  process(data) {\r\n    return this.AES_GCM_Encrypt_process(data);\r\n  }\r\n  finish() {\r\n    return this.AES_GCM_Encrypt_finish();\r\n  }\r\n}\r\n\r\nexport class AES_GCM_Decrypt extends AES_GCM  {\r\n  constructor(key, nonce, adata, tagSize, heap, asm ) {\r\n    super(key, nonce, adata, tagSize, heap, asm );\r\n  }\r\n\r\n  process(data) {\r\n    return this.AES_GCM_Decrypt_process(data);\r\n  }\r\n  finish() {\r\n    return this.AES_GCM_Decrypt_finish();\r\n  }\r\n}\r\n","/**\r\n * AES-GCM exports\r\n */\r\n\r\nimport {_AES_asm_instance, _AES_heap_instance} from '../exports';\r\nimport {AES_GCM, AES_GCM_Decrypt, AES_GCM_Encrypt} from './gcm';\r\n\r\n/**\r\n * @param {Uint8Array} data\r\n * @param {Uint8Array} key\r\n * @param {Uint8Array} nonce\r\n * @param {Uint8Array} [adata]\r\n * @param {number} [tagSize]\r\n * @return {Uint8Array}\r\n */\r\nfunction AES_GCM_encrypt_bytes ( data, key, nonce, adata, tagSize ) {\r\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\r\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\r\n    if ( nonce === undefined ) throw new SyntaxError(\"nonce required\");\r\n    return new AES_GCM(key, nonce, adata, tagSize, _AES_heap_instance, _AES_asm_instance).encrypt(data).result;\r\n}\r\n\r\n/**\r\n * @param {Uint8Array} data\r\n * @param {Uint8Array} key\r\n * @param {Uint8Array} nonce\r\n * @param {Uint8Array} [adata]\r\n * @param {number} [tagSize]\r\n * @return {Uint8Array}\r\n */\r\nfunction AES_GCM_decrypt_bytes ( data, key, nonce, adata, tagSize ) {\r\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\r\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\r\n    if ( nonce === undefined ) throw new SyntaxError(\"nonce required\");\r\n    return new AES_GCM(key, nonce, adata, tagSize, _AES_heap_instance, _AES_asm_instance).decrypt(data).result;\r\n}\r\n\r\nAES_GCM.encrypt = AES_GCM_encrypt_bytes;\r\nAES_GCM.decrypt = AES_GCM_decrypt_bytes;\r\n\r\nAES_GCM.Encrypt = AES_GCM_Encrypt;\r\nAES_GCM.Decrypt = AES_GCM_Decrypt;\r\n\r\nexport { AES_GCM };\r\n","import {_heap_write, is_buffer, is_bytes, is_string, string_to_bytes} from '../utils';\r\nimport {IllegalStateError} from '../errors';\r\n\r\nexport function hash_reset () {\r\n    this.result = null;\r\n    this.pos = 0;\r\n    this.len = 0;\r\n\r\n    this.asm.reset();\r\n\r\n    return this;\r\n}\r\n\r\nexport function hash_process ( data ) {\r\n    if ( this.result !== null )\r\n        throw new IllegalStateError(\"state must be reset before processing new data\");\r\n\r\n    if ( is_string(data) )\r\n        data = string_to_bytes(data);\r\n\r\n    if ( is_buffer(data) )\r\n        data = new Uint8Array(data);\r\n\r\n    if ( !is_bytes(data) )\r\n        throw new TypeError(\"data isn't of expected type\");\r\n\r\n    var asm = this.asm,\r\n        heap = this.heap,\r\n        hpos = this.pos,\r\n        hlen = this.len,\r\n        dpos = 0,\r\n        dlen = data.length,\r\n        wlen = 0;\r\n\r\n    while ( dlen > 0 ) {\r\n        wlen = _heap_write( heap, hpos+hlen, data, dpos, dlen );\r\n        hlen += wlen;\r\n        dpos += wlen;\r\n        dlen -= wlen;\r\n\r\n        wlen = asm.process( hpos, hlen );\r\n\r\n        hpos += wlen;\r\n        hlen -= wlen;\r\n\r\n        if ( !hlen ) hpos = 0;\r\n    }\r\n\r\n    this.pos = hpos;\r\n    this.len = hlen;\r\n\r\n    return this;\r\n}\r\n\r\nexport function hash_finish () {\r\n    if ( this.result !== null )\r\n        throw new IllegalStateError(\"state must be reset before processing new data\");\r\n\r\n    this.asm.finish( this.pos, this.len, 0 );\r\n\r\n    this.result = new Uint8Array(this.HASH_SIZE);\r\n    this.result.set( this.heap.subarray( 0, this.HASH_SIZE ) );\r\n\r\n    this.pos = 0;\r\n    this.len = 0;\r\n\r\n    return this;\r\n}\r\n","import {sha1_asm} from './sha1.asm';\r\nimport {hash_finish, hash_process, hash_reset} from '../hash';\r\nimport {_heap_init} from '../../utils';\r\n\r\nexport var _sha1_block_size = 64;\r\nexport var _sha1_hash_size = 20;\r\n\r\nexport function sha1_constructor ( options ) {\r\n    options = options || {};\r\n\r\n    this.heap = _heap_init( Uint8Array, options.heap );\r\n    this.asm = options.asm || sha1_asm( { Uint8Array: Uint8Array }, null, this.heap.buffer );\r\n\r\n    this.BLOCK_SIZE = _sha1_block_size;\r\n    this.HASH_SIZE = _sha1_hash_size;\r\n\r\n    this.reset();\r\n}\r\n\r\nsha1_constructor.BLOCK_SIZE = _sha1_block_size;\r\nsha1_constructor.NAME = \"sha1\";\r\n\r\nsha1_constructor.HASH_SIZE = _sha1_hash_size;\r\nvar sha1_prototype = sha1_constructor.prototype;\r\nsha1_prototype.reset =   hash_reset;\r\nsha1_prototype.process = hash_process;\r\nsha1_prototype.finish =  hash_finish;\r\n\r\nvar sha1_instance = null;\r\n\r\nexport function get_sha1_instance () {\r\n    if ( sha1_instance === null ) sha1_instance = new sha1_constructor( { heapSize: 0x100000 } );\r\n    return sha1_instance;\r\n}\r\n","export function sha1_asm ( stdlib, foreign, buffer ) {\r\n    \"use asm\";\r\n\r\n    // SHA256 state\r\n    var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0,\r\n        TOTAL0 = 0, TOTAL1 = 0;\r\n\r\n    // HMAC state\r\n    var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0,\r\n        O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0;\r\n\r\n    // I/O buffer\r\n    var HEAP = new stdlib.Uint8Array(buffer);\r\n\r\n    function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {\r\n        w0 = w0|0;\r\n        w1 = w1|0;\r\n        w2 = w2|0;\r\n        w3 = w3|0;\r\n        w4 = w4|0;\r\n        w5 = w5|0;\r\n        w6 = w6|0;\r\n        w7 = w7|0;\r\n        w8 = w8|0;\r\n        w9 = w9|0;\r\n        w10 = w10|0;\r\n        w11 = w11|0;\r\n        w12 = w12|0;\r\n        w13 = w13|0;\r\n        w14 = w14|0;\r\n        w15 = w15|0;\r\n\r\n        var a = 0, b = 0, c = 0, d = 0, e = 0, n = 0, t = 0,\r\n            w16 = 0, w17 = 0, w18 = 0, w19 = 0,\r\n            w20 = 0, w21 = 0, w22 = 0, w23 = 0, w24 = 0, w25 = 0, w26 = 0, w27 = 0, w28 = 0, w29 = 0,\r\n            w30 = 0, w31 = 0, w32 = 0, w33 = 0, w34 = 0, w35 = 0, w36 = 0, w37 = 0, w38 = 0, w39 = 0,\r\n            w40 = 0, w41 = 0, w42 = 0, w43 = 0, w44 = 0, w45 = 0, w46 = 0, w47 = 0, w48 = 0, w49 = 0,\r\n            w50 = 0, w51 = 0, w52 = 0, w53 = 0, w54 = 0, w55 = 0, w56 = 0, w57 = 0, w58 = 0, w59 = 0,\r\n            w60 = 0, w61 = 0, w62 = 0, w63 = 0, w64 = 0, w65 = 0, w66 = 0, w67 = 0, w68 = 0, w69 = 0,\r\n            w70 = 0, w71 = 0, w72 = 0, w73 = 0, w74 = 0, w75 = 0, w76 = 0, w77 = 0, w78 = 0, w79 = 0;\r\n\r\n        a = H0;\r\n        b = H1;\r\n        c = H2;\r\n        d = H3;\r\n        e = H4;\r\n\r\n        // 0\r\n        t = ( w0 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 1\r\n        t = ( w1 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 2\r\n        t = ( w2 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 3\r\n        t = ( w3 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 4\r\n        t = ( w4 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 5\r\n        t = ( w5 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 6\r\n        t = ( w6 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 7\r\n        t = ( w7 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 8\r\n        t = ( w8 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 9\r\n        t = ( w9 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 10\r\n        t = ( w10 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 11\r\n        t = ( w11 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 12\r\n        t = ( w12 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 13\r\n        t = ( w13 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 14\r\n        t = ( w14 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 15\r\n        t = ( w15 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 16\r\n        n = w13 ^ w8 ^ w2 ^ w0;\r\n        w16 = (n << 1) | (n >>> 31);\r\n        t = (w16 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 17\r\n        n = w14 ^ w9 ^ w3 ^ w1;\r\n        w17 = (n << 1) | (n >>> 31);\r\n        t = (w17 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 18\r\n        n = w15 ^ w10 ^ w4 ^ w2;\r\n        w18 = (n << 1) | (n >>> 31);\r\n        t = (w18 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 19\r\n        n = w16 ^ w11 ^ w5 ^ w3;\r\n        w19 = (n << 1) | (n >>> 31);\r\n        t = (w19 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 20\r\n        n = w17 ^ w12 ^ w6 ^ w4;\r\n        w20 = (n << 1) | (n >>> 31);\r\n        t = (w20 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 21\r\n        n = w18 ^ w13 ^ w7 ^ w5;\r\n        w21 = (n << 1) | (n >>> 31);\r\n        t = (w21 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 22\r\n        n = w19 ^ w14 ^ w8 ^ w6;\r\n        w22 = (n << 1) | (n >>> 31);\r\n        t = (w22 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 23\r\n        n = w20 ^ w15 ^ w9 ^ w7;\r\n        w23 = (n << 1) | (n >>> 31);\r\n        t = (w23 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 24\r\n        n = w21 ^ w16 ^ w10 ^ w8;\r\n        w24 = (n << 1) | (n >>> 31);\r\n        t = (w24 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 25\r\n        n = w22 ^ w17 ^ w11 ^ w9;\r\n        w25 = (n << 1) | (n >>> 31);\r\n        t = (w25 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 26\r\n        n = w23 ^ w18 ^ w12 ^ w10;\r\n        w26 = (n << 1) | (n >>> 31);\r\n        t = (w26 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 27\r\n        n = w24 ^ w19 ^ w13 ^ w11;\r\n        w27 = (n << 1) | (n >>> 31);\r\n        t = (w27 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 28\r\n        n = w25 ^ w20 ^ w14 ^ w12;\r\n        w28 = (n << 1) | (n >>> 31);\r\n        t = (w28 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 29\r\n        n = w26 ^ w21 ^ w15 ^ w13;\r\n        w29 = (n << 1) | (n >>> 31);\r\n        t = (w29 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 30\r\n        n = w27 ^ w22 ^ w16 ^ w14;\r\n        w30 = (n << 1) | (n >>> 31);\r\n        t = (w30 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 31\r\n        n = w28 ^ w23 ^ w17 ^ w15;\r\n        w31 = (n << 1) | (n >>> 31);\r\n        t = (w31 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 32\r\n        n = w29 ^ w24 ^ w18 ^ w16;\r\n        w32 = (n << 1) | (n >>> 31);\r\n        t = (w32 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 33\r\n        n = w30 ^ w25 ^ w19 ^ w17;\r\n        w33 = (n << 1) | (n >>> 31);\r\n        t = (w33 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 34\r\n        n = w31 ^ w26 ^ w20 ^ w18;\r\n        w34 = (n << 1) | (n >>> 31);\r\n        t = (w34 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 35\r\n        n = w32 ^ w27 ^ w21 ^ w19;\r\n        w35 = (n << 1) | (n >>> 31);\r\n        t = (w35 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 36\r\n        n = w33 ^ w28 ^ w22 ^ w20;\r\n        w36 = (n << 1) | (n >>> 31);\r\n        t = (w36 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 37\r\n        n = w34 ^ w29 ^ w23 ^ w21;\r\n        w37 = (n << 1) | (n >>> 31);\r\n        t = (w37 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 38\r\n        n = w35 ^ w30 ^ w24 ^ w22;\r\n        w38 = (n << 1) | (n >>> 31);\r\n        t = (w38 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 39\r\n        n = w36 ^ w31 ^ w25 ^ w23;\r\n        w39 = (n << 1) | (n >>> 31);\r\n        t = (w39 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 40\r\n        n = w37 ^ w32 ^ w26 ^ w24;\r\n        w40 = (n << 1) | (n >>> 31);\r\n        t = (w40 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 41\r\n        n = w38 ^ w33 ^ w27 ^ w25;\r\n        w41 = (n << 1) | (n >>> 31);\r\n        t = (w41 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 42\r\n        n = w39 ^ w34 ^ w28 ^ w26;\r\n        w42 = (n << 1) | (n >>> 31);\r\n        t = (w42 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 43\r\n        n = w40 ^ w35 ^ w29 ^ w27;\r\n        w43 = (n << 1) | (n >>> 31);\r\n        t = (w43 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 44\r\n        n = w41 ^ w36 ^ w30 ^ w28;\r\n        w44 = (n << 1) | (n >>> 31);\r\n        t = (w44 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 45\r\n        n = w42 ^ w37 ^ w31 ^ w29;\r\n        w45 = (n << 1) | (n >>> 31);\r\n        t = (w45 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 46\r\n        n = w43 ^ w38 ^ w32 ^ w30;\r\n        w46 = (n << 1) | (n >>> 31);\r\n        t = (w46 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 47\r\n        n = w44 ^ w39 ^ w33 ^ w31;\r\n        w47 = (n << 1) | (n >>> 31);\r\n        t = (w47 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 48\r\n        n = w45 ^ w40 ^ w34 ^ w32;\r\n        w48 = (n << 1) | (n >>> 31);\r\n        t = (w48 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 49\r\n        n = w46 ^ w41 ^ w35 ^ w33;\r\n        w49 = (n << 1) | (n >>> 31);\r\n        t = (w49 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 50\r\n        n = w47 ^ w42 ^ w36 ^ w34;\r\n        w50 = (n << 1) | (n >>> 31);\r\n        t = (w50 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 51\r\n        n = w48 ^ w43 ^ w37 ^ w35;\r\n        w51 = (n << 1) | (n >>> 31);\r\n        t = (w51 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 52\r\n        n = w49 ^ w44 ^ w38 ^ w36;\r\n        w52 = (n << 1) | (n >>> 31);\r\n        t = (w52 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 53\r\n        n = w50 ^ w45 ^ w39 ^ w37;\r\n        w53 = (n << 1) | (n >>> 31);\r\n        t = (w53 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 54\r\n        n = w51 ^ w46 ^ w40 ^ w38;\r\n        w54 = (n << 1) | (n >>> 31);\r\n        t = (w54 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 55\r\n        n = w52 ^ w47 ^ w41 ^ w39;\r\n        w55 = (n << 1) | (n >>> 31);\r\n        t = (w55 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 56\r\n        n = w53 ^ w48 ^ w42 ^ w40;\r\n        w56 = (n << 1) | (n >>> 31);\r\n        t = (w56 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 57\r\n        n = w54 ^ w49 ^ w43 ^ w41;\r\n        w57 = (n << 1) | (n >>> 31);\r\n        t = (w57 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 58\r\n        n = w55 ^ w50 ^ w44 ^ w42;\r\n        w58 = (n << 1) | (n >>> 31);\r\n        t = (w58 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 59\r\n        n = w56 ^ w51 ^ w45 ^ w43;\r\n        w59 = (n << 1) | (n >>> 31);\r\n        t = (w59 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 60\r\n        n = w57 ^ w52 ^ w46 ^ w44;\r\n        w60 = (n << 1) | (n >>> 31);\r\n        t = (w60 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 61\r\n        n = w58 ^ w53 ^ w47 ^ w45;\r\n        w61 = (n << 1) | (n >>> 31);\r\n        t = (w61 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 62\r\n        n = w59 ^ w54 ^ w48 ^ w46;\r\n        w62 = (n << 1) | (n >>> 31);\r\n        t = (w62 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 63\r\n        n = w60 ^ w55 ^ w49 ^ w47;\r\n        w63 = (n << 1) | (n >>> 31);\r\n        t = (w63 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 64\r\n        n = w61 ^ w56 ^ w50 ^ w48;\r\n        w64 = (n << 1) | (n >>> 31);\r\n        t = (w64 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 65\r\n        n = w62 ^ w57 ^ w51 ^ w49;\r\n        w65 = (n << 1) | (n >>> 31);\r\n        t = (w65 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 66\r\n        n = w63 ^ w58 ^ w52 ^ w50;\r\n        w66 = (n << 1) | (n >>> 31);\r\n        t = (w66 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 67\r\n        n = w64 ^ w59 ^ w53 ^ w51;\r\n        w67 = (n << 1) | (n >>> 31);\r\n        t = (w67 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 68\r\n        n = w65 ^ w60 ^ w54 ^ w52;\r\n        w68 = (n << 1) | (n >>> 31);\r\n        t = (w68 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 69\r\n        n = w66 ^ w61 ^ w55 ^ w53;\r\n        w69 = (n << 1) | (n >>> 31);\r\n        t = (w69 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 70\r\n        n = w67 ^ w62 ^ w56 ^ w54;\r\n        w70 = (n << 1) | (n >>> 31);\r\n        t = (w70 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 71\r\n        n = w68 ^ w63 ^ w57 ^ w55;\r\n        w71 = (n << 1) | (n >>> 31);\r\n        t = (w71 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 72\r\n        n = w69 ^ w64 ^ w58 ^ w56;\r\n        w72 = (n << 1) | (n >>> 31);\r\n        t = (w72 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 73\r\n        n = w70 ^ w65 ^ w59 ^ w57;\r\n        w73 = (n << 1) | (n >>> 31);\r\n        t = (w73 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 74\r\n        n = w71 ^ w66 ^ w60 ^ w58;\r\n        w74 = (n << 1) | (n >>> 31);\r\n        t = (w74 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 75\r\n        n = w72 ^ w67 ^ w61 ^ w59;\r\n        w75 = (n << 1) | (n >>> 31);\r\n        t = (w75 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 76\r\n        n = w73 ^ w68 ^ w62 ^ w60;\r\n        w76 = (n << 1) | (n >>> 31);\r\n        t = (w76 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 77\r\n        n = w74 ^ w69 ^ w63 ^ w61;\r\n        w77 = (n << 1) | (n >>> 31);\r\n        t = (w77 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 78\r\n        n = w75 ^ w70 ^ w64 ^ w62;\r\n        w78 = (n << 1) | (n >>> 31);\r\n        t = (w78 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        // 79\r\n        n = w76 ^ w71 ^ w65 ^ w63;\r\n        w79 = (n << 1) | (n >>> 31);\r\n        t = (w79 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\r\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\r\n\r\n        H0 = ( H0 + a )|0;\r\n        H1 = ( H1 + b )|0;\r\n        H2 = ( H2 + c )|0;\r\n        H3 = ( H3 + d )|0;\r\n        H4 = ( H4 + e )|0;\r\n\r\n    }\r\n\r\n    function _core_heap ( offset ) {\r\n        offset = offset|0;\r\n\r\n        _core(\r\n            HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],\r\n            HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],\r\n            HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],\r\n            HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],\r\n            HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],\r\n            HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],\r\n            HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],\r\n            HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],\r\n            HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],\r\n            HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],\r\n            HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],\r\n            HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],\r\n            HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],\r\n            HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],\r\n            HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],\r\n            HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]\r\n        );\r\n    }\r\n\r\n    // offset — multiple of 32\r\n    function _state_to_heap ( output ) {\r\n        output = output|0;\r\n\r\n        HEAP[output|0] = H0>>>24;\r\n        HEAP[output|1] = H0>>>16&255;\r\n        HEAP[output|2] = H0>>>8&255;\r\n        HEAP[output|3] = H0&255;\r\n        HEAP[output|4] = H1>>>24;\r\n        HEAP[output|5] = H1>>>16&255;\r\n        HEAP[output|6] = H1>>>8&255;\r\n        HEAP[output|7] = H1&255;\r\n        HEAP[output|8] = H2>>>24;\r\n        HEAP[output|9] = H2>>>16&255;\r\n        HEAP[output|10] = H2>>>8&255;\r\n        HEAP[output|11] = H2&255;\r\n        HEAP[output|12] = H3>>>24;\r\n        HEAP[output|13] = H3>>>16&255;\r\n        HEAP[output|14] = H3>>>8&255;\r\n        HEAP[output|15] = H3&255;\r\n        HEAP[output|16] = H4>>>24;\r\n        HEAP[output|17] = H4>>>16&255;\r\n        HEAP[output|18] = H4>>>8&255;\r\n        HEAP[output|19] = H4&255;\r\n    }\r\n\r\n    function reset () {\r\n        H0 = 0x67452301;\r\n        H1 = 0xefcdab89;\r\n        H2 = 0x98badcfe;\r\n        H3 = 0x10325476;\r\n        H4 = 0xc3d2e1f0;\r\n        TOTAL0 = TOTAL1 = 0;\r\n    }\r\n\r\n    function init ( h0, h1, h2, h3, h4, total0, total1 ) {\r\n        h0 = h0|0;\r\n        h1 = h1|0;\r\n        h2 = h2|0;\r\n        h3 = h3|0;\r\n        h4 = h4|0;\r\n        total0 = total0|0;\r\n        total1 = total1|0;\r\n\r\n        H0 = h0;\r\n        H1 = h1;\r\n        H2 = h2;\r\n        H3 = h3;\r\n        H4 = h4;\r\n        TOTAL0 = total0;\r\n        TOTAL1 = total1;\r\n    }\r\n\r\n    // offset — multiple of 64\r\n    function process ( offset, length ) {\r\n        offset = offset|0;\r\n        length = length|0;\r\n\r\n        var hashed = 0;\r\n\r\n        if ( offset & 63 )\r\n            return -1;\r\n\r\n        while ( (length|0) >= 64 ) {\r\n            _core_heap(offset);\r\n\r\n            offset = ( offset + 64 )|0;\r\n            length = ( length - 64 )|0;\r\n\r\n            hashed = ( hashed + 64 )|0;\r\n        }\r\n\r\n        TOTAL0 = ( TOTAL0 + hashed )|0;\r\n        if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;\r\n\r\n        return hashed|0;\r\n    }\r\n\r\n    // offset — multiple of 64\r\n    // output — multiple of 32\r\n    function finish ( offset, length, output ) {\r\n        offset = offset|0;\r\n        length = length|0;\r\n        output = output|0;\r\n\r\n        var hashed = 0,\r\n            i = 0;\r\n\r\n        if ( offset & 63 )\r\n            return -1;\r\n\r\n        if ( ~output )\r\n            if ( output & 31 )\r\n                return -1;\r\n\r\n        if ( (length|0) >= 64 ) {\r\n            hashed = process( offset, length )|0;\r\n            if ( (hashed|0) == -1 )\r\n                return -1;\r\n\r\n            offset = ( offset + hashed )|0;\r\n            length = ( length - hashed )|0;\r\n        }\r\n\r\n        hashed = ( hashed + length )|0;\r\n        TOTAL0 = ( TOTAL0 + length )|0;\r\n        if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = (TOTAL1 + 1)|0;\r\n\r\n        HEAP[offset|length] = 0x80;\r\n\r\n        if ( (length|0) >= 56 ) {\r\n            for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )\r\n                HEAP[offset|i] = 0x00;\r\n            _core_heap(offset);\r\n\r\n            length = 0;\r\n\r\n            HEAP[offset|0] = 0;\r\n        }\r\n\r\n        for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )\r\n            HEAP[offset|i] = 0;\r\n\r\n        HEAP[offset|56] = TOTAL1>>>21&255;\r\n        HEAP[offset|57] = TOTAL1>>>13&255;\r\n        HEAP[offset|58] = TOTAL1>>>5&255;\r\n        HEAP[offset|59] = TOTAL1<<3&255 | TOTAL0>>>29;\r\n        HEAP[offset|60] = TOTAL0>>>21&255;\r\n        HEAP[offset|61] = TOTAL0>>>13&255;\r\n        HEAP[offset|62] = TOTAL0>>>5&255;\r\n        HEAP[offset|63] = TOTAL0<<3&255;\r\n        _core_heap(offset);\r\n\r\n        if ( ~output )\r\n            _state_to_heap(output);\r\n\r\n        return hashed|0;\r\n    }\r\n\r\n    function hmac_reset () {\r\n        H0 = I0;\r\n        H1 = I1;\r\n        H2 = I2;\r\n        H3 = I3;\r\n        H4 = I4;\r\n        TOTAL0 = 64;\r\n        TOTAL1 = 0;\r\n    }\r\n\r\n    function _hmac_opad () {\r\n        H0 = O0;\r\n        H1 = O1;\r\n        H2 = O2;\r\n        H3 = O3;\r\n        H4 = O4;\r\n        TOTAL0 = 64;\r\n        TOTAL1 = 0;\r\n    }\r\n\r\n    function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {\r\n        p0 = p0|0;\r\n        p1 = p1|0;\r\n        p2 = p2|0;\r\n        p3 = p3|0;\r\n        p4 = p4|0;\r\n        p5 = p5|0;\r\n        p6 = p6|0;\r\n        p7 = p7|0;\r\n        p8 = p8|0;\r\n        p9 = p9|0;\r\n        p10 = p10|0;\r\n        p11 = p11|0;\r\n        p12 = p12|0;\r\n        p13 = p13|0;\r\n        p14 = p14|0;\r\n        p15 = p15|0;\r\n\r\n        // opad\r\n        reset();\r\n        _core(\r\n            p0 ^ 0x5c5c5c5c,\r\n            p1 ^ 0x5c5c5c5c,\r\n            p2 ^ 0x5c5c5c5c,\r\n            p3 ^ 0x5c5c5c5c,\r\n            p4 ^ 0x5c5c5c5c,\r\n            p5 ^ 0x5c5c5c5c,\r\n            p6 ^ 0x5c5c5c5c,\r\n            p7 ^ 0x5c5c5c5c,\r\n            p8 ^ 0x5c5c5c5c,\r\n            p9 ^ 0x5c5c5c5c,\r\n            p10 ^ 0x5c5c5c5c,\r\n            p11 ^ 0x5c5c5c5c,\r\n            p12 ^ 0x5c5c5c5c,\r\n            p13 ^ 0x5c5c5c5c,\r\n            p14 ^ 0x5c5c5c5c,\r\n            p15 ^ 0x5c5c5c5c\r\n        );\r\n        O0 = H0;\r\n        O1 = H1;\r\n        O2 = H2;\r\n        O3 = H3;\r\n        O4 = H4;\r\n\r\n        // ipad\r\n        reset();\r\n        _core(\r\n            p0 ^ 0x36363636,\r\n            p1 ^ 0x36363636,\r\n            p2 ^ 0x36363636,\r\n            p3 ^ 0x36363636,\r\n            p4 ^ 0x36363636,\r\n            p5 ^ 0x36363636,\r\n            p6 ^ 0x36363636,\r\n            p7 ^ 0x36363636,\r\n            p8 ^ 0x36363636,\r\n            p9 ^ 0x36363636,\r\n            p10 ^ 0x36363636,\r\n            p11 ^ 0x36363636,\r\n            p12 ^ 0x36363636,\r\n            p13 ^ 0x36363636,\r\n            p14 ^ 0x36363636,\r\n            p15 ^ 0x36363636\r\n        );\r\n        I0 = H0;\r\n        I1 = H1;\r\n        I2 = H2;\r\n        I3 = H3;\r\n        I4 = H4;\r\n\r\n        TOTAL0 = 64;\r\n        TOTAL1 = 0;\r\n    }\r\n\r\n    // offset — multiple of 64\r\n    // output — multiple of 32\r\n    function hmac_finish ( offset, length, output ) {\r\n        offset = offset|0;\r\n        length = length|0;\r\n        output = output|0;\r\n\r\n        var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, hashed = 0;\r\n\r\n        if ( offset & 63 )\r\n            return -1;\r\n\r\n        if ( ~output )\r\n            if ( output & 31 )\r\n                return -1;\r\n\r\n        hashed = finish( offset, length, -1 )|0;\r\n        t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\r\n\r\n        _hmac_opad();\r\n        _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\r\n\r\n        if ( ~output )\r\n            _state_to_heap(output);\r\n\r\n        return hashed|0;\r\n    }\r\n\r\n    // salt is assumed to be already processed\r\n    // offset — multiple of 64\r\n    // output — multiple of 32\r\n    function pbkdf2_generate_block ( offset, length, block, count, output ) {\r\n        offset = offset|0;\r\n        length = length|0;\r\n        block = block|0;\r\n        count = count|0;\r\n        output = output|0;\r\n\r\n        var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0,\r\n            t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0;\r\n\r\n        if ( offset & 63 )\r\n            return -1;\r\n\r\n        if ( ~output )\r\n            if ( output & 31 )\r\n                return -1;\r\n\r\n        // pad block number into heap\r\n        // FIXME probable OOB write\r\n        HEAP[(offset+length)|0]   = block>>>24;\r\n        HEAP[(offset+length+1)|0] = block>>>16&255;\r\n        HEAP[(offset+length+2)|0] = block>>>8&255;\r\n        HEAP[(offset+length+3)|0] = block&255;\r\n\r\n        // finish first iteration\r\n        hmac_finish( offset, (length+4)|0, -1 )|0;\r\n        h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4;\r\n        count = (count-1)|0;\r\n\r\n        // perform the rest iterations\r\n        while ( (count|0) > 0 ) {\r\n            hmac_reset();\r\n            _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\r\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\r\n\r\n            _hmac_opad();\r\n            _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\r\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\r\n\r\n            h0 = h0 ^ H0;\r\n            h1 = h1 ^ H1;\r\n            h2 = h2 ^ H2;\r\n            h3 = h3 ^ H3;\r\n            h4 = h4 ^ H4;\r\n\r\n            count = (count-1)|0;\r\n        }\r\n\r\n        H0 = h0;\r\n        H1 = h1;\r\n        H2 = h2;\r\n        H3 = h3;\r\n        H4 = h4;\r\n\r\n        if ( ~output )\r\n            _state_to_heap(output);\r\n\r\n        return 0;\r\n    }\r\n\r\n    return {\r\n        // SHA1\r\n        reset: reset,\r\n        init: init,\r\n        process: process,\r\n        finish: finish,\r\n\r\n        // HMAC-SHA1\r\n        hmac_reset: hmac_reset,\r\n        hmac_init: hmac_init,\r\n        hmac_finish: hmac_finish,\r\n\r\n        // PBKDF2-HMAC-SHA1\r\n        pbkdf2_generate_block: pbkdf2_generate_block\r\n    }\r\n}\r\n","/**\r\n * SHA1 exports\r\n */\r\n\r\nimport {get_sha1_instance, sha1_constructor} from './sha1';\r\nimport {bytes_to_base64, bytes_to_hex} from '../../utils';\r\n\r\nfunction sha1_bytes (data ) {\r\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\r\n    return get_sha1_instance().reset().process(data).finish().result;\r\n}\r\n\r\nfunction sha1_hex ( data ) {\r\n    var result = sha1_bytes(data);\r\n    return bytes_to_hex(result);\r\n}\r\n\r\nfunction sha1_base64 ( data ) {\r\n    var result = sha1_bytes(data);\r\n    return bytes_to_base64(result);\r\n}\r\n\r\nexport var SHA1 = sha1_constructor;\r\n\r\nSHA1.bytes = sha1_bytes;\r\nSHA1.hex = sha1_hex;\r\nSHA1.base64 = sha1_base64;\r\n","import {sha256_asm} from './sha256.asm';\r\nimport {hash_finish, hash_process, hash_reset} from '../hash';\r\nimport {_heap_init} from '../../utils';\r\n\r\nexport var _sha256_block_size = 64;\r\nexport var _sha256_hash_size = 32;\r\n\r\nexport function sha256_constructor ( options ) {\r\n    options = options || {};\r\n\r\n    this.heap = _heap_init( Uint8Array, options.heap );\r\n    this.asm = options.asm || sha256_asm( { Uint8Array: Uint8Array }, null, this.heap.buffer );\r\n\r\n    this.BLOCK_SIZE = _sha256_block_size;\r\n    this.HASH_SIZE = _sha256_hash_size;\r\n\r\n    this.reset();\r\n}\r\n\r\nsha256_constructor.BLOCK_SIZE = _sha256_block_size;\r\nsha256_constructor.HASH_SIZE = _sha256_hash_size;\r\nsha256_constructor.NAME = \"sha256\";\r\n\r\nvar sha256_prototype = sha256_constructor.prototype;\r\nsha256_prototype.reset =   hash_reset;\r\nsha256_prototype.process = hash_process;\r\nsha256_prototype.finish =  hash_finish;\r\n\r\nvar sha256_instance = null;\r\n\r\nexport function get_sha256_instance () {\r\n    if ( sha256_instance === null ) sha256_instance = new sha256_constructor( { heapSize: 0x100000 } );\r\n    return sha256_instance;\r\n}\r\n","export function sha256_asm ( stdlib, foreign, buffer ) {\r\n    \"use asm\";\r\n\r\n    // SHA256 state\r\n    var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0, H5 = 0, H6 = 0, H7 = 0,\r\n        TOTAL0 = 0, TOTAL1 = 0;\r\n\r\n    // HMAC state\r\n    var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0, I5 = 0, I6 = 0, I7 = 0,\r\n        O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0, O5 = 0, O6 = 0, O7 = 0;\r\n\r\n    // I/O buffer\r\n    var HEAP = new stdlib.Uint8Array(buffer);\r\n\r\n    function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {\r\n        w0 = w0|0;\r\n        w1 = w1|0;\r\n        w2 = w2|0;\r\n        w3 = w3|0;\r\n        w4 = w4|0;\r\n        w5 = w5|0;\r\n        w6 = w6|0;\r\n        w7 = w7|0;\r\n        w8 = w8|0;\r\n        w9 = w9|0;\r\n        w10 = w10|0;\r\n        w11 = w11|0;\r\n        w12 = w12|0;\r\n        w13 = w13|0;\r\n        w14 = w14|0;\r\n        w15 = w15|0;\r\n\r\n        var a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0;\r\n\r\n        a = H0;\r\n        b = H1;\r\n        c = H2;\r\n        d = H3;\r\n        e = H4;\r\n        f = H5;\r\n        g = H6;\r\n        h = H7;\r\n        \r\n        // 0\r\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x428a2f98 )|0;\r\n        d = ( d + h )|0;\r\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\r\n\r\n        // 1\r\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x71374491 )|0;\r\n        c = ( c + g )|0;\r\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\r\n\r\n        // 2\r\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xb5c0fbcf )|0;\r\n        b = ( b + f )|0;\r\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\r\n\r\n        // 3\r\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xe9b5dba5 )|0;\r\n        a = ( a + e )|0;\r\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\r\n\r\n        // 4\r\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x3956c25b )|0;\r\n        h = ( h + d )|0;\r\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\r\n\r\n        // 5\r\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x59f111f1 )|0;\r\n        g = ( g + c )|0;\r\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\r\n\r\n        // 6\r\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x923f82a4 )|0;\r\n        f = ( f + b )|0;\r\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\r\n\r\n        // 7\r\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xab1c5ed5 )|0;\r\n        e = ( e + a )|0;\r\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\r\n\r\n        // 8\r\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xd807aa98 )|0;\r\n        d = ( d + h )|0;\r\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\r\n\r\n        // 9\r\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x12835b01 )|0;\r\n        c = ( c + g )|0;\r\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\r\n\r\n        // 10\r\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x243185be )|0;\r\n        b = ( b + f )|0;\r\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\r\n\r\n        // 11\r\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x550c7dc3 )|0;\r\n        a = ( a + e )|0;\r\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\r\n\r\n        // 12\r\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x72be5d74 )|0;\r\n        h = ( h + d )|0;\r\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\r\n\r\n        // 13\r\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x80deb1fe )|0;\r\n        g = ( g + c )|0;\r\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\r\n\r\n        // 14\r\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x9bdc06a7 )|0;\r\n        f = ( f + b )|0;\r\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\r\n\r\n        // 15\r\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xc19bf174 )|0;\r\n        e = ( e + a )|0;\r\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\r\n\r\n        // 16\r\n        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\r\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xe49b69c1 )|0;\r\n        d = ( d + h )|0;\r\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\r\n\r\n        // 17\r\n        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\r\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xefbe4786 )|0;\r\n        c = ( c + g )|0;\r\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\r\n\r\n        // 18\r\n        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\r\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x0fc19dc6 )|0;\r\n        b = ( b + f )|0;\r\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\r\n\r\n        // 19\r\n        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\r\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x240ca1cc )|0;\r\n        a = ( a + e )|0;\r\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\r\n\r\n        // 20\r\n        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\r\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x2de92c6f )|0;\r\n        h = ( h + d )|0;\r\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\r\n\r\n        // 21\r\n        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\r\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x4a7484aa )|0;\r\n        g = ( g + c )|0;\r\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\r\n\r\n        // 22\r\n        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\r\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x5cb0a9dc )|0;\r\n        f = ( f + b )|0;\r\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\r\n\r\n        // 23\r\n        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\r\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x76f988da )|0;\r\n        e = ( e + a )|0;\r\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\r\n\r\n        // 24\r\n        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\r\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x983e5152 )|0;\r\n        d = ( d + h )|0;\r\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\r\n\r\n        // 25\r\n        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\r\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xa831c66d )|0;\r\n        c = ( c + g )|0;\r\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\r\n\r\n        // 26\r\n        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\r\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xb00327c8 )|0;\r\n        b = ( b + f )|0;\r\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\r\n\r\n        // 27\r\n        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\r\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xbf597fc7 )|0;\r\n        a = ( a + e )|0;\r\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\r\n\r\n        // 28\r\n        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\r\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0xc6e00bf3 )|0;\r\n        h = ( h + d )|0;\r\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\r\n\r\n        // 29\r\n        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\r\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xd5a79147 )|0;\r\n        g = ( g + c )|0;\r\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\r\n\r\n        // 30\r\n        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\r\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x06ca6351 )|0;\r\n        f = ( f + b )|0;\r\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\r\n\r\n        // 31\r\n        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\r\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x14292967 )|0;\r\n        e = ( e + a )|0;\r\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\r\n\r\n        // 32\r\n        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\r\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x27b70a85 )|0;\r\n        d = ( d + h )|0;\r\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\r\n\r\n        // 33\r\n        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\r\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x2e1b2138 )|0;\r\n        c = ( c + g )|0;\r\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\r\n\r\n        // 34\r\n        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\r\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x4d2c6dfc )|0;\r\n        b = ( b + f )|0;\r\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\r\n\r\n        // 35\r\n        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\r\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x53380d13 )|0;\r\n        a = ( a + e )|0;\r\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\r\n\r\n        // 36\r\n        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\r\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x650a7354 )|0;\r\n        h = ( h + d )|0;\r\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\r\n\r\n        // 37\r\n        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\r\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x766a0abb )|0;\r\n        g = ( g + c )|0;\r\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\r\n\r\n        // 38\r\n        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\r\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x81c2c92e )|0;\r\n        f = ( f + b )|0;\r\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\r\n\r\n        // 39\r\n        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\r\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x92722c85 )|0;\r\n        e = ( e + a )|0;\r\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\r\n\r\n        // 40\r\n        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\r\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xa2bfe8a1 )|0;\r\n        d = ( d + h )|0;\r\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\r\n\r\n        // 41\r\n        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\r\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xa81a664b )|0;\r\n        c = ( c + g )|0;\r\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\r\n\r\n        // 42\r\n        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\r\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xc24b8b70 )|0;\r\n        b = ( b + f )|0;\r\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\r\n\r\n        // 43\r\n        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\r\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xc76c51a3 )|0;\r\n        a = ( a + e )|0;\r\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\r\n\r\n        // 44\r\n        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\r\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0xd192e819 )|0;\r\n        h = ( h + d )|0;\r\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\r\n\r\n        // 45\r\n        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\r\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xd6990624 )|0;\r\n        g = ( g + c )|0;\r\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\r\n\r\n        // 46\r\n        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\r\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0xf40e3585 )|0;\r\n        f = ( f + b )|0;\r\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\r\n\r\n        // 47\r\n        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\r\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x106aa070 )|0;\r\n        e = ( e + a )|0;\r\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\r\n\r\n        // 48\r\n        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\r\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x19a4c116 )|0;\r\n        d = ( d + h )|0;\r\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\r\n\r\n        // 49\r\n        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\r\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x1e376c08 )|0;\r\n        c = ( c + g )|0;\r\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\r\n\r\n        // 50\r\n        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\r\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x2748774c )|0;\r\n        b = ( b + f )|0;\r\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\r\n\r\n        // 51\r\n        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\r\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x34b0bcb5 )|0;\r\n        a = ( a + e )|0;\r\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\r\n\r\n        // 52\r\n        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\r\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x391c0cb3 )|0;\r\n        h = ( h + d )|0;\r\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\r\n\r\n        // 53\r\n        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\r\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x4ed8aa4a )|0;\r\n        g = ( g + c )|0;\r\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\r\n\r\n        // 54\r\n        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\r\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x5b9cca4f )|0;\r\n        f = ( f + b )|0;\r\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\r\n\r\n        // 55\r\n        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\r\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x682e6ff3 )|0;\r\n        e = ( e + a )|0;\r\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\r\n\r\n        // 56\r\n        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\r\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x748f82ee )|0;\r\n        d = ( d + h )|0;\r\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\r\n\r\n        // 57\r\n        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\r\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x78a5636f )|0;\r\n        c = ( c + g )|0;\r\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\r\n\r\n        // 58\r\n        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\r\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x84c87814 )|0;\r\n        b = ( b + f )|0;\r\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\r\n\r\n        // 59\r\n        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\r\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x8cc70208 )|0;\r\n        a = ( a + e )|0;\r\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\r\n\r\n        // 60\r\n        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\r\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x90befffa )|0;\r\n        h = ( h + d )|0;\r\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\r\n\r\n        // 61\r\n        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\r\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xa4506ceb )|0;\r\n        g = ( g + c )|0;\r\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\r\n\r\n        // 62\r\n        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\r\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0xbef9a3f7 )|0;\r\n        f = ( f + b )|0;\r\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\r\n\r\n        // 63\r\n        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\r\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xc67178f2 )|0;\r\n        e = ( e + a )|0;\r\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\r\n\r\n        H0 = ( H0 + a )|0;\r\n        H1 = ( H1 + b )|0;\r\n        H2 = ( H2 + c )|0;\r\n        H3 = ( H3 + d )|0;\r\n        H4 = ( H4 + e )|0;\r\n        H5 = ( H5 + f )|0;\r\n        H6 = ( H6 + g )|0;\r\n        H7 = ( H7 + h )|0;\r\n    }\r\n\r\n    function _core_heap ( offset ) {\r\n        offset = offset|0;\r\n\r\n        _core(\r\n            HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],\r\n            HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],\r\n            HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],\r\n            HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],\r\n            HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],\r\n            HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],\r\n            HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],\r\n            HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],\r\n            HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],\r\n            HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],\r\n            HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],\r\n            HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],\r\n            HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],\r\n            HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],\r\n            HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],\r\n            HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]\r\n        );\r\n    }\r\n\r\n    // offset — multiple of 32\r\n    function _state_to_heap ( output ) {\r\n        output = output|0;\r\n\r\n        HEAP[output|0] = H0>>>24;\r\n        HEAP[output|1] = H0>>>16&255;\r\n        HEAP[output|2] = H0>>>8&255;\r\n        HEAP[output|3] = H0&255;\r\n        HEAP[output|4] = H1>>>24;\r\n        HEAP[output|5] = H1>>>16&255;\r\n        HEAP[output|6] = H1>>>8&255;\r\n        HEAP[output|7] = H1&255;\r\n        HEAP[output|8] = H2>>>24;\r\n        HEAP[output|9] = H2>>>16&255;\r\n        HEAP[output|10] = H2>>>8&255;\r\n        HEAP[output|11] = H2&255;\r\n        HEAP[output|12] = H3>>>24;\r\n        HEAP[output|13] = H3>>>16&255;\r\n        HEAP[output|14] = H3>>>8&255;\r\n        HEAP[output|15] = H3&255;\r\n        HEAP[output|16] = H4>>>24;\r\n        HEAP[output|17] = H4>>>16&255;\r\n        HEAP[output|18] = H4>>>8&255;\r\n        HEAP[output|19] = H4&255;\r\n        HEAP[output|20] = H5>>>24;\r\n        HEAP[output|21] = H5>>>16&255;\r\n        HEAP[output|22] = H5>>>8&255;\r\n        HEAP[output|23] = H5&255;\r\n        HEAP[output|24] = H6>>>24;\r\n        HEAP[output|25] = H6>>>16&255;\r\n        HEAP[output|26] = H6>>>8&255;\r\n        HEAP[output|27] = H6&255;\r\n        HEAP[output|28] = H7>>>24;\r\n        HEAP[output|29] = H7>>>16&255;\r\n        HEAP[output|30] = H7>>>8&255;\r\n        HEAP[output|31] = H7&255;\r\n    }\r\n\r\n    function reset () {\r\n        H0 = 0x6a09e667;\r\n        H1 = 0xbb67ae85;\r\n        H2 = 0x3c6ef372;\r\n        H3 = 0xa54ff53a;\r\n        H4 = 0x510e527f;\r\n        H5 = 0x9b05688c;\r\n        H6 = 0x1f83d9ab;\r\n        H7 = 0x5be0cd19;\r\n        TOTAL0 = TOTAL1 = 0;\r\n    }\r\n\r\n    function init ( h0, h1, h2, h3, h4, h5, h6, h7, total0, total1 ) {\r\n        h0 = h0|0;\r\n        h1 = h1|0;\r\n        h2 = h2|0;\r\n        h3 = h3|0;\r\n        h4 = h4|0;\r\n        h5 = h5|0;\r\n        h6 = h6|0;\r\n        h7 = h7|0;\r\n        total0 = total0|0;\r\n        total1 = total1|0;\r\n\r\n        H0 = h0;\r\n        H1 = h1;\r\n        H2 = h2;\r\n        H3 = h3;\r\n        H4 = h4;\r\n        H5 = h5;\r\n        H6 = h6;\r\n        H7 = h7;\r\n        TOTAL0 = total0;\r\n        TOTAL1 = total1;\r\n    }\r\n\r\n    // offset — multiple of 64\r\n    function process ( offset, length ) {\r\n        offset = offset|0;\r\n        length = length|0;\r\n\r\n        var hashed = 0;\r\n\r\n        if ( offset & 63 )\r\n            return -1;\r\n\r\n        while ( (length|0) >= 64 ) {\r\n            _core_heap(offset);\r\n\r\n            offset = ( offset + 64 )|0;\r\n            length = ( length - 64 )|0;\r\n\r\n            hashed = ( hashed + 64 )|0;\r\n        }\r\n\r\n        TOTAL0 = ( TOTAL0 + hashed )|0;\r\n        if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;\r\n\r\n        return hashed|0;\r\n    }\r\n\r\n    // offset — multiple of 64\r\n    // output — multiple of 32\r\n    function finish ( offset, length, output ) {\r\n        offset = offset|0;\r\n        length = length|0;\r\n        output = output|0;\r\n\r\n        var hashed = 0,\r\n            i = 0;\r\n\r\n        if ( offset & 63 )\r\n            return -1;\r\n\r\n        if ( ~output )\r\n            if ( output & 31 )\r\n                return -1;\r\n\r\n        if ( (length|0) >= 64 ) {\r\n            hashed = process( offset, length )|0;\r\n            if ( (hashed|0) == -1 )\r\n                return -1;\r\n\r\n            offset = ( offset + hashed )|0;\r\n            length = ( length - hashed )|0;\r\n        }\r\n\r\n        hashed = ( hashed + length )|0;\r\n        TOTAL0 = ( TOTAL0 + length )|0;\r\n        if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;\r\n\r\n        HEAP[offset|length] = 0x80;\r\n\r\n        if ( (length|0) >= 56 ) {\r\n            for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )\r\n                HEAP[offset|i] = 0x00;\r\n\r\n            _core_heap(offset);\r\n\r\n            length = 0;\r\n\r\n            HEAP[offset|0] = 0;\r\n        }\r\n\r\n        for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )\r\n            HEAP[offset|i] = 0;\r\n\r\n        HEAP[offset|56] = TOTAL1>>>21&255;\r\n        HEAP[offset|57] = TOTAL1>>>13&255;\r\n        HEAP[offset|58] = TOTAL1>>>5&255;\r\n        HEAP[offset|59] = TOTAL1<<3&255 | TOTAL0>>>29;\r\n        HEAP[offset|60] = TOTAL0>>>21&255;\r\n        HEAP[offset|61] = TOTAL0>>>13&255;\r\n        HEAP[offset|62] = TOTAL0>>>5&255;\r\n        HEAP[offset|63] = TOTAL0<<3&255;\r\n        _core_heap(offset);\r\n\r\n        if ( ~output )\r\n            _state_to_heap(output);\r\n\r\n        return hashed|0;\r\n    }\r\n\r\n    function hmac_reset () {\r\n        H0 = I0;\r\n        H1 = I1;\r\n        H2 = I2;\r\n        H3 = I3;\r\n        H4 = I4;\r\n        H5 = I5;\r\n        H6 = I6;\r\n        H7 = I7;\r\n        TOTAL0 = 64;\r\n        TOTAL1 = 0;\r\n    }\r\n\r\n    function _hmac_opad () {\r\n        H0 = O0;\r\n        H1 = O1;\r\n        H2 = O2;\r\n        H3 = O3;\r\n        H4 = O4;\r\n        H5 = O5;\r\n        H6 = O6;\r\n        H7 = O7;\r\n        TOTAL0 = 64;\r\n        TOTAL1 = 0;\r\n    }\r\n\r\n    function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {\r\n        p0 = p0|0;\r\n        p1 = p1|0;\r\n        p2 = p2|0;\r\n        p3 = p3|0;\r\n        p4 = p4|0;\r\n        p5 = p5|0;\r\n        p6 = p6|0;\r\n        p7 = p7|0;\r\n        p8 = p8|0;\r\n        p9 = p9|0;\r\n        p10 = p10|0;\r\n        p11 = p11|0;\r\n        p12 = p12|0;\r\n        p13 = p13|0;\r\n        p14 = p14|0;\r\n        p15 = p15|0;\r\n\r\n        // opad\r\n        reset();\r\n        _core(\r\n            p0 ^ 0x5c5c5c5c,\r\n            p1 ^ 0x5c5c5c5c,\r\n            p2 ^ 0x5c5c5c5c,\r\n            p3 ^ 0x5c5c5c5c,\r\n            p4 ^ 0x5c5c5c5c,\r\n            p5 ^ 0x5c5c5c5c,\r\n            p6 ^ 0x5c5c5c5c,\r\n            p7 ^ 0x5c5c5c5c,\r\n            p8 ^ 0x5c5c5c5c,\r\n            p9 ^ 0x5c5c5c5c,\r\n            p10 ^ 0x5c5c5c5c,\r\n            p11 ^ 0x5c5c5c5c,\r\n            p12 ^ 0x5c5c5c5c,\r\n            p13 ^ 0x5c5c5c5c,\r\n            p14 ^ 0x5c5c5c5c,\r\n            p15 ^ 0x5c5c5c5c\r\n        );\r\n        O0 = H0;\r\n        O1 = H1;\r\n        O2 = H2;\r\n        O3 = H3;\r\n        O4 = H4;\r\n        O5 = H5;\r\n        O6 = H6;\r\n        O7 = H7;\r\n\r\n        // ipad\r\n        reset();\r\n        _core(\r\n            p0 ^ 0x36363636,\r\n            p1 ^ 0x36363636,\r\n            p2 ^ 0x36363636,\r\n            p3 ^ 0x36363636,\r\n            p4 ^ 0x36363636,\r\n            p5 ^ 0x36363636,\r\n            p6 ^ 0x36363636,\r\n            p7 ^ 0x36363636,\r\n            p8 ^ 0x36363636,\r\n            p9 ^ 0x36363636,\r\n            p10 ^ 0x36363636,\r\n            p11 ^ 0x36363636,\r\n            p12 ^ 0x36363636,\r\n            p13 ^ 0x36363636,\r\n            p14 ^ 0x36363636,\r\n            p15 ^ 0x36363636\r\n        );\r\n        I0 = H0;\r\n        I1 = H1;\r\n        I2 = H2;\r\n        I3 = H3;\r\n        I4 = H4;\r\n        I5 = H5;\r\n        I6 = H6;\r\n        I7 = H7;\r\n\r\n        TOTAL0 = 64;\r\n        TOTAL1 = 0;\r\n    }\r\n\r\n    // offset — multiple of 64\r\n    // output — multiple of 32\r\n    function hmac_finish ( offset, length, output ) {\r\n        offset = offset|0;\r\n        length = length|0;\r\n        output = output|0;\r\n\r\n        var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\r\n            hashed = 0;\r\n\r\n        if ( offset & 63 )\r\n            return -1;\r\n\r\n        if ( ~output )\r\n            if ( output & 31 )\r\n                return -1;\r\n\r\n        hashed = finish( offset, length, -1 )|0;\r\n        t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\r\n\r\n        _hmac_opad();\r\n        _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\r\n\r\n        if ( ~output )\r\n            _state_to_heap(output);\r\n\r\n        return hashed|0;\r\n    }\r\n\r\n    // salt is assumed to be already processed\r\n    // offset — multiple of 64\r\n    // output — multiple of 32\r\n    function pbkdf2_generate_block ( offset, length, block, count, output ) {\r\n        offset = offset|0;\r\n        length = length|0;\r\n        block = block|0;\r\n        count = count|0;\r\n        output = output|0;\r\n\r\n        var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0, h5 = 0, h6 = 0, h7 = 0,\r\n            t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0;\r\n\r\n        if ( offset & 63 )\r\n            return -1;\r\n\r\n        if ( ~output )\r\n            if ( output & 31 )\r\n                return -1;\r\n\r\n        // pad block number into heap\r\n        // FIXME probable OOB write\r\n        HEAP[(offset+length)|0]   = block>>>24;\r\n        HEAP[(offset+length+1)|0] = block>>>16&255;\r\n        HEAP[(offset+length+2)|0] = block>>>8&255;\r\n        HEAP[(offset+length+3)|0] = block&255;\r\n\r\n        // finish first iteration\r\n        hmac_finish( offset, (length+4)|0, -1 )|0;\r\n        h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4, h5 = t5 = H5, h6 = t6 = H6, h7 = t7 = H7;\r\n        count = (count-1)|0;\r\n\r\n        // perform the rest iterations\r\n        while ( (count|0) > 0 ) {\r\n            hmac_reset();\r\n            _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\r\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\r\n\r\n            _hmac_opad();\r\n            _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\r\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\r\n\r\n            h0 = h0 ^ H0;\r\n            h1 = h1 ^ H1;\r\n            h2 = h2 ^ H2;\r\n            h3 = h3 ^ H3;\r\n            h4 = h4 ^ H4;\r\n            h5 = h5 ^ H5;\r\n            h6 = h6 ^ H6;\r\n            h7 = h7 ^ H7;\r\n\r\n            count = (count-1)|0;\r\n        }\r\n\r\n        H0 = h0;\r\n        H1 = h1;\r\n        H2 = h2;\r\n        H3 = h3;\r\n        H4 = h4;\r\n        H5 = h5;\r\n        H6 = h6;\r\n        H7 = h7;\r\n\r\n        if ( ~output )\r\n            _state_to_heap(output);\r\n\r\n        return 0;\r\n    }\r\n\r\n    return {\r\n        // SHA256\r\n        reset: reset,\r\n        init: init,\r\n        process: process,\r\n        finish: finish,\r\n\r\n        // HMAC-SHA256\r\n        hmac_reset: hmac_reset,\r\n        hmac_init: hmac_init,\r\n        hmac_finish: hmac_finish,\r\n\r\n        // PBKDF2-HMAC-SHA256\r\n        pbkdf2_generate_block: pbkdf2_generate_block\r\n    }\r\n}\r\n","/**\r\n * SHA256 exports\r\n */\r\n\r\nimport {get_sha256_instance, sha256_constructor} from './sha256';\r\nimport {bytes_to_base64, bytes_to_hex} from '../../utils';\r\n\r\nfunction sha256_bytes (data ) {\r\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\r\n    return get_sha256_instance().reset().process(data).finish().result;\r\n}\r\n\r\nfunction sha256_hex ( data ) {\r\n    var result = sha256_bytes(data);\r\n    return bytes_to_hex(result);\r\n}\r\n\r\nfunction sha256_base64 ( data ) {\r\n    var result = sha256_bytes(data);\r\n    return bytes_to_base64(result);\r\n}\r\n\r\nexport var SHA256 = sha256_constructor;\r\nSHA256.bytes = sha256_bytes;\r\nSHA256.hex = sha256_hex;\r\nSHA256.base64 = sha256_base64;\r\n","import {is_buffer, is_bytes, is_string, string_to_bytes} from '../utils';\r\nimport {IllegalArgumentError, IllegalStateError} from '../errors';\r\n\r\nexport function hmac_constructor (options ) {\r\n    options = options || {};\r\n\r\n    if ( !options.hash )\r\n        throw new SyntaxError(\"option 'hash' is required\");\r\n\r\n    if ( !options.hash.HASH_SIZE )\r\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\r\n\r\n    this.hash = options.hash;\r\n    this.BLOCK_SIZE = this.hash.BLOCK_SIZE;\r\n    this.HMAC_SIZE = this.hash.HASH_SIZE;\r\n\r\n    this.key = null;\r\n    this.verify = null;\r\n    this.result = null;\r\n\r\n    if ( options.password !== undefined || options.verify !== undefined )\r\n        this.reset(options);\r\n\r\n    return this;\r\n}\r\n\r\nexport function _hmac_key ( hash, password ) {\r\n    if ( is_buffer(password) )\r\n        password = new Uint8Array(password);\r\n\r\n    if ( is_string(password) )\r\n        password = string_to_bytes(password);\r\n\r\n    if ( !is_bytes(password) )\r\n        throw new TypeError(\"password isn't of expected type\");\r\n\r\n    var key = new Uint8Array( hash.BLOCK_SIZE );\r\n\r\n    if ( password.length > hash.BLOCK_SIZE ) {\r\n        key.set( hash.reset().process(password).finish().result );\r\n    }\r\n    else {\r\n        key.set(password);\r\n    }\r\n\r\n    return key;\r\n}\r\n\r\nexport function _hmac_init_verify ( verify ) {\r\n    if ( is_buffer(verify) || is_bytes(verify) ) {\r\n        verify = new Uint8Array(verify);\r\n    }\r\n    else if ( is_string(verify) ) {\r\n        verify = string_to_bytes(verify);\r\n    }\r\n    else {\r\n        throw new TypeError(\"verify tag isn't of expected type\");\r\n    }\r\n\r\n    if ( verify.length !== this.HMAC_SIZE )\r\n        throw new IllegalArgumentError(\"illegal verification tag size\");\r\n\r\n    this.verify = verify;\r\n}\r\n\r\nfunction hmac_reset ( options ) {\r\n    options = options || {};\r\n    var password = options.password;\r\n\r\n    if ( this.key === null && !is_string(password) && !password )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    this.result = null;\r\n    this.hash.reset();\r\n\r\n    if ( password || is_string(password) )\r\n        this.key = _hmac_key( this.hash, password );\r\n\r\n    var ipad = new Uint8Array(this.key);\r\n    for ( var i = 0; i < ipad.length; ++i )\r\n        ipad[i] ^= 0x36;\r\n\r\n    this.hash.process(ipad);\r\n\r\n    var verify = options.verify;\r\n    if ( verify !== undefined ) {\r\n        _hmac_init_verify.call( this, verify );\r\n    }\r\n    else {\r\n        this.verify = null;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nexport function hmac_process ( data ) {\r\n    if ( this.key === null )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    if ( this.result !== null )\r\n        throw new IllegalStateError(\"state must be reset before processing new data\");\r\n\r\n    this.hash.process(data);\r\n\r\n    return this;\r\n}\r\n\r\nfunction hmac_finish () {\r\n    if ( this.key === null )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    if ( this.result !== null )\r\n        throw new IllegalStateError(\"state must be reset before processing new data\");\r\n\r\n    var inner_result = this.hash.finish().result;\r\n\r\n    var opad = new Uint8Array(this.key);\r\n    for ( var i = 0; i < opad.length; ++i )\r\n        opad[i] ^= 0x5c;\r\n\r\n    var verify = this.verify;\r\n    var result = this.hash.reset().process(opad).process(inner_result).finish().result;\r\n\r\n    if ( verify ) {\r\n        if ( verify.length === result.length ) {\r\n            var diff = 0;\r\n            for ( var i = 0; i < verify.length; i++ ) {\r\n                diff |= ( verify[i] ^ result[i] );\r\n            }\r\n            this.result = !diff;\r\n        } else {\r\n            this.result = false;\r\n        }\r\n    }\r\n    else {\r\n        this.result = result;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nvar hmac_prototype = hmac_constructor.prototype;\r\nhmac_prototype.reset =   hmac_reset;\r\nhmac_prototype.process = hmac_process;\r\nhmac_prototype.finish =  hmac_finish;\r\n","import {hmac_process, hmac_constructor, _hmac_key, _hmac_init_verify} from './hmac';\r\nimport {_sha1_hash_size, get_sha1_instance, sha1_constructor} from '../hash/sha1/sha1';\r\nimport {is_string, string_to_bytes} from '../utils';\r\nimport {IllegalStateError} from '../errors';\r\n\r\nexport function hmac_sha1_constructor (options ) {\r\n    options = options || {};\r\n\r\n    if ( !( options.hash instanceof sha1_constructor ) )\r\n        options.hash = get_sha1_instance();\r\n\r\n    hmac_constructor.call( this, options );\r\n\r\n    return this;\r\n}\r\n\r\nfunction hmac_sha1_reset ( options ) {\r\n    options = options || {};\r\n\r\n    this.result = null;\r\n    this.hash.reset();\r\n\r\n    var password = options.password;\r\n    if ( password !== undefined ) {\r\n        if ( is_string(password) )\r\n            password = string_to_bytes(password);\r\n\r\n        var key = this.key = _hmac_key( this.hash, password );\r\n        this.hash.reset().asm.hmac_init(\r\n                (key[0]<<24)|(key[1]<<16)|(key[2]<<8)|(key[3]),\r\n                (key[4]<<24)|(key[5]<<16)|(key[6]<<8)|(key[7]),\r\n                (key[8]<<24)|(key[9]<<16)|(key[10]<<8)|(key[11]),\r\n                (key[12]<<24)|(key[13]<<16)|(key[14]<<8)|(key[15]),\r\n                (key[16]<<24)|(key[17]<<16)|(key[18]<<8)|(key[19]),\r\n                (key[20]<<24)|(key[21]<<16)|(key[22]<<8)|(key[23]),\r\n                (key[24]<<24)|(key[25]<<16)|(key[26]<<8)|(key[27]),\r\n                (key[28]<<24)|(key[29]<<16)|(key[30]<<8)|(key[31]),\r\n                (key[32]<<24)|(key[33]<<16)|(key[34]<<8)|(key[35]),\r\n                (key[36]<<24)|(key[37]<<16)|(key[38]<<8)|(key[39]),\r\n                (key[40]<<24)|(key[41]<<16)|(key[42]<<8)|(key[43]),\r\n                (key[44]<<24)|(key[45]<<16)|(key[46]<<8)|(key[47]),\r\n                (key[48]<<24)|(key[49]<<16)|(key[50]<<8)|(key[51]),\r\n                (key[52]<<24)|(key[53]<<16)|(key[54]<<8)|(key[55]),\r\n                (key[56]<<24)|(key[57]<<16)|(key[58]<<8)|(key[59]),\r\n                (key[60]<<24)|(key[61]<<16)|(key[62]<<8)|(key[63])\r\n        );\r\n    }\r\n    else {\r\n        this.hash.asm.hmac_reset();\r\n    }\r\n\r\n    var verify = options.verify;\r\n    if ( verify !== undefined ) {\r\n        _hmac_init_verify.call( this, verify );\r\n    }\r\n    else {\r\n        this.verify = null;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nfunction hmac_sha1_finish () {\r\n    if ( this.key === null )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    if ( this.result !== null )\r\n        throw new IllegalStateError(\"state must be reset before processing new data\");\r\n\r\n    var hash = this.hash,\r\n        asm = this.hash.asm,\r\n        heap = this.hash.heap;\r\n\r\n    asm.hmac_finish( hash.pos, hash.len, 0 );\r\n\r\n    var verify = this.verify;\r\n    var result = new Uint8Array(_sha1_hash_size);\r\n    result.set( heap.subarray( 0, _sha1_hash_size ) );\r\n\r\n    if ( verify ) {\r\n        if ( verify.length === result.length ) {\r\n            var diff = 0;\r\n            for ( var i = 0; i < verify.length; i++ ) {\r\n                diff |= ( verify[i] ^ result[i] );\r\n            }\r\n            this.result = !diff;\r\n        } else {\r\n            this.result = false;\r\n        }\r\n    }\r\n    else {\r\n        this.result = result;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nhmac_sha1_constructor.BLOCK_SIZE = sha1_constructor.BLOCK_SIZE;\r\nhmac_sha1_constructor.HMAC_SIZE = sha1_constructor.HASH_SIZE;\r\n\r\nvar hmac_sha1_prototype = hmac_sha1_constructor.prototype;\r\nhmac_sha1_prototype.reset = hmac_sha1_reset;\r\nhmac_sha1_prototype.process = hmac_process;\r\nhmac_sha1_prototype.finish = hmac_sha1_finish;\r\n\r\nvar hmac_sha1_instance = null;\r\n\r\nexport function get_hmac_sha1_instance () {\r\n    if ( hmac_sha1_instance === null ) hmac_sha1_instance = new hmac_sha1_constructor();\r\n    return hmac_sha1_instance;\r\n}\r\n","/**\r\n * HMAC-SHA1 exports\r\n */\r\n\r\nimport {get_hmac_sha1_instance, hmac_sha1_constructor} from './hmac-sha1';\r\nimport {bytes_to_base64, bytes_to_hex} from '../utils';\r\n\r\nfunction hmac_sha1_bytes (data, password ) {\r\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\r\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\r\n    return get_hmac_sha1_instance().reset( { password: password } ).process(data).finish().result;\r\n}\r\n\r\nfunction hmac_sha1_hex ( data, password ) {\r\n    var result = hmac_sha1_bytes( data, password );\r\n    return bytes_to_hex(result);\r\n}\r\n\r\nfunction hmac_sha1_base64 ( data, password ) {\r\n    var result = hmac_sha1_bytes( data, password );\r\n    return bytes_to_base64(result);\r\n}\r\n\r\nexport var HMAC_SHA1 = hmac_sha1_constructor;\r\n\r\nHMAC_SHA1.bytes = hmac_sha1_bytes;\r\nHMAC_SHA1.hex = hmac_sha1_hex;\r\nHMAC_SHA1.base64 = hmac_sha1_base64;\r\n","import {hmac_constructor, hmac_process, _hmac_init_verify, _hmac_key} from './hmac';\r\nimport {_sha256_hash_size, get_sha256_instance, sha256_constructor} from '../hash/sha256/sha256';\r\nimport {is_string, string_to_bytes} from '../utils';\r\nimport {IllegalStateError} from '../errors';\r\n\r\nexport function hmac_sha256_constructor (options ) {\r\n    options = options || {};\r\n\r\n    if ( !( options.hash instanceof sha256_constructor ) )\r\n        options.hash = get_sha256_instance();\r\n\r\n    hmac_constructor.call( this, options );\r\n\r\n    return this;\r\n}\r\n\r\nfunction hmac_sha256_reset ( options ) {\r\n    options = options || {};\r\n\r\n    this.result = null;\r\n    this.hash.reset();\r\n\r\n    var password = options.password;\r\n    if ( password !== undefined ) {\r\n        if ( is_string(password) )\r\n            password = string_to_bytes(password);\r\n\r\n        var key = this.key = _hmac_key( this.hash, password );\r\n        this.hash.reset().asm.hmac_init(\r\n            (key[0]<<24)|(key[1]<<16)|(key[2]<<8)|(key[3]),\r\n            (key[4]<<24)|(key[5]<<16)|(key[6]<<8)|(key[7]),\r\n            (key[8]<<24)|(key[9]<<16)|(key[10]<<8)|(key[11]),\r\n            (key[12]<<24)|(key[13]<<16)|(key[14]<<8)|(key[15]),\r\n            (key[16]<<24)|(key[17]<<16)|(key[18]<<8)|(key[19]),\r\n            (key[20]<<24)|(key[21]<<16)|(key[22]<<8)|(key[23]),\r\n            (key[24]<<24)|(key[25]<<16)|(key[26]<<8)|(key[27]),\r\n            (key[28]<<24)|(key[29]<<16)|(key[30]<<8)|(key[31]),\r\n            (key[32]<<24)|(key[33]<<16)|(key[34]<<8)|(key[35]),\r\n            (key[36]<<24)|(key[37]<<16)|(key[38]<<8)|(key[39]),\r\n            (key[40]<<24)|(key[41]<<16)|(key[42]<<8)|(key[43]),\r\n            (key[44]<<24)|(key[45]<<16)|(key[46]<<8)|(key[47]),\r\n            (key[48]<<24)|(key[49]<<16)|(key[50]<<8)|(key[51]),\r\n            (key[52]<<24)|(key[53]<<16)|(key[54]<<8)|(key[55]),\r\n            (key[56]<<24)|(key[57]<<16)|(key[58]<<8)|(key[59]),\r\n            (key[60]<<24)|(key[61]<<16)|(key[62]<<8)|(key[63])\r\n        );\r\n    }\r\n    else {\r\n        this.hash.asm.hmac_reset();\r\n    }\r\n\r\n    var verify = options.verify;\r\n    if ( verify !== undefined ) {\r\n        _hmac_init_verify.call( this, verify );\r\n    }\r\n    else {\r\n        this.verify = null;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nfunction hmac_sha256_finish () {\r\n    if ( this.key === null )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    if ( this.result !== null )\r\n        throw new IllegalStateError(\"state must be reset before processing new data\");\r\n\r\n    var hash = this.hash,\r\n        asm = this.hash.asm,\r\n        heap = this.hash.heap;\r\n\r\n    asm.hmac_finish( hash.pos, hash.len, 0 );\r\n\r\n    var verify = this.verify;\r\n    var result = new Uint8Array(_sha256_hash_size);\r\n    result.set( heap.subarray( 0, _sha256_hash_size ) );\r\n\r\n    if ( verify ) {\r\n        if ( verify.length === result.length ) {\r\n            var diff = 0;\r\n            for ( var i = 0; i < verify.length; i++ ) {\r\n                diff |= ( verify[i] ^ result[i] );\r\n            }\r\n            this.result = !diff;\r\n        } else {\r\n            this.result = false;\r\n        }\r\n    }\r\n    else {\r\n        this.result = result;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nhmac_sha256_constructor.BLOCK_SIZE = sha256_constructor.BLOCK_SIZE;\r\nhmac_sha256_constructor.HMAC_SIZE = sha256_constructor.HASH_SIZE;\r\n\r\nvar hmac_sha256_prototype = hmac_sha256_constructor.prototype;\r\nhmac_sha256_prototype.reset = hmac_sha256_reset;\r\nhmac_sha256_prototype.process = hmac_process;\r\nhmac_sha256_prototype.finish = hmac_sha256_finish;\r\n\r\nvar hmac_sha256_instance = null;\r\n\r\nexport function get_hmac_sha256_instance () {\r\n    if ( hmac_sha256_instance === null ) hmac_sha256_instance = new hmac_sha256_constructor();\r\n    return hmac_sha256_instance;\r\n}\r\n","/**\r\n * HMAC-SHA256 exports\r\n */\r\n\r\nimport {get_hmac_sha256_instance, hmac_sha256_constructor} from './hmac-sha256';\r\nimport {bytes_to_base64, bytes_to_hex} from '../utils';\r\n\r\nfunction hmac_sha256_bytes (data, password ) {\r\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\r\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\r\n    return get_hmac_sha256_instance().reset( { password: password } ).process(data).finish().result;\r\n}\r\n\r\nfunction hmac_sha256_hex ( data, password ) {\r\n    var result = hmac_sha256_bytes( data, password );\r\n    return bytes_to_hex(result);\r\n}\r\n\r\nfunction hmac_sha256_base64 ( data, password ) {\r\n    var result = hmac_sha256_bytes( data, password );\r\n    return bytes_to_base64(result);\r\n}\r\n\r\nexport var HMAC_SHA256 = hmac_sha256_constructor;\r\n\r\nHMAC_SHA256.bytes = hmac_sha256_bytes;\r\nHMAC_SHA256.hex = hmac_sha256_hex;\r\nHMAC_SHA256.base64 = hmac_sha256_base64;\r\n","import {is_string} from '../utils';\r\nimport {IllegalArgumentError, IllegalStateError} from '../errors';\r\n\r\nexport function pbkdf2_constructor (options ) {\r\n    options = options || {};\r\n\r\n    if ( !options.hmac )\r\n        throw new SyntaxError(\"option 'hmac' is required\");\r\n\r\n    if ( !options.hmac.HMAC_SIZE )\r\n        throw new SyntaxError(\"option 'hmac' supplied doesn't seem to be a valid HMAC function\");\r\n\r\n    this.hmac = options.hmac;\r\n    this.count = options.count || 4096;\r\n    this.length = options.length || this.hmac.HMAC_SIZE;\r\n\r\n    this.result = null;\r\n\r\n    var password = options.password;\r\n    if ( password || is_string(password) )\r\n        this.reset(options);\r\n\r\n    return this;\r\n}\r\n\r\nexport function pbkdf2_reset ( options ) {\r\n    this.result = null;\r\n\r\n    this.hmac.reset(options);\r\n\r\n    return this;\r\n}\r\n\r\nfunction pbkdf2_generate ( salt, count, length ) {\r\n    if ( this.result !== null )\r\n        throw new IllegalStateError(\"state must be reset before processing new data\");\r\n\r\n    if ( !salt && !is_string(salt) )\r\n        throw new IllegalArgumentError(\"bad 'salt' value\");\r\n\r\n    count = count || this.count;\r\n    length = length || this.length;\r\n\r\n    this.result = new Uint8Array(length);\r\n\r\n    var blocks = Math.ceil( length / this.hmac.HMAC_SIZE );\r\n\r\n    for ( var i = 1; i <= blocks; ++i ) {\r\n        var j = ( i - 1 ) * this.hmac.HMAC_SIZE;\r\n        var l = ( i < blocks ? 0 : length % this.hmac.HMAC_SIZE ) || this.hmac.HMAC_SIZE;\r\n        var tmp = new Uint8Array( this.hmac.reset().process(salt).process( new Uint8Array([ i>>>24&0xff, i>>>16&0xff, i>>>8&0xff, i&0xff ]) ).finish().result );\r\n        this.result.set( tmp.subarray( 0, l ), j );\r\n        for ( var k = 1; k < count; ++k ) {\r\n            tmp = new Uint8Array( this.hmac.reset().process(tmp).finish().result );\r\n            for ( var r = 0; r < l; ++r ) this.result[j+r] ^= tmp[r];\r\n        }\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n// methods\r\nvar pbkdf2_prototype = pbkdf2_constructor.prototype;\r\npbkdf2_prototype.reset =   pbkdf2_reset;\r\npbkdf2_prototype.generate = pbkdf2_generate;\r\n","import {get_hmac_sha1_instance, hmac_sha1_constructor} from '../hmac/hmac-sha1';\r\nimport {pbkdf2_constructor, pbkdf2_reset} from './pbkdf2';\r\nimport {is_string} from '../utils';\r\nimport {IllegalArgumentError, IllegalStateError} from '../errors';\r\n\r\nexport function pbkdf2_hmac_sha1_constructor (options ) {\r\n    options = options || {};\r\n\r\n    if ( !( options.hmac instanceof hmac_sha1_constructor ) )\r\n        options.hmac = get_hmac_sha1_instance();\r\n\r\n    pbkdf2_constructor.call( this, options );\r\n\r\n    return this;\r\n}\r\n\r\nfunction pbkdf2_hmac_sha1_generate ( salt, count, length ) {\r\n    if ( this.result !== null )\r\n        throw new IllegalStateError(\"state must be reset before processing new data\");\r\n\r\n    if ( !salt && !is_string(salt) )\r\n        throw new IllegalArgumentError(\"bad 'salt' value\");\r\n\r\n    count = count || this.count;\r\n    length = length || this.length;\r\n\r\n    this.result = new Uint8Array(length);\r\n\r\n    var blocks = Math.ceil( length / this.hmac.HMAC_SIZE );\r\n\r\n    for ( var i = 1; i <= blocks; ++i ) {\r\n        var j = ( i - 1 ) * this.hmac.HMAC_SIZE;\r\n        var l = ( i < blocks ? 0 : length % this.hmac.HMAC_SIZE ) || this.hmac.HMAC_SIZE;\r\n\r\n        this.hmac.reset().process(salt);\r\n        this.hmac.hash.asm.pbkdf2_generate_block( this.hmac.hash.pos, this.hmac.hash.len, i, count, 0 );\r\n\r\n        this.result.set( this.hmac.hash.heap.subarray( 0, l ), j );\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nvar pbkdf2_hmac_sha1_prototype = pbkdf2_hmac_sha1_constructor.prototype;\r\npbkdf2_hmac_sha1_prototype.reset =   pbkdf2_reset;\r\npbkdf2_hmac_sha1_prototype.generate = pbkdf2_hmac_sha1_generate;\r\n\r\nvar pbkdf2_hmac_sha1_instance = null;\r\n\r\nexport function get_pbkdf2_hmac_sha1_instance () {\r\n    if ( pbkdf2_hmac_sha1_instance === null ) pbkdf2_hmac_sha1_instance = new pbkdf2_hmac_sha1_constructor();\r\n    return pbkdf2_hmac_sha1_instance;\r\n}\r\n","/**\r\n * PBKDF2-HMAC-SHA1 exports\r\n */\r\n\r\nimport {bytes_to_base64, bytes_to_hex} from '../utils';\r\nimport {get_pbkdf2_hmac_sha1_instance} from './pbkdf2-hmac-sha1';\r\n\r\nfunction pbkdf2_hmac_sha1_bytes (password, salt, iterations, dklen ) {\r\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\r\n    if ( salt === undefined ) throw new SyntaxError(\"salt required\");\r\n    return get_pbkdf2_hmac_sha1_instance().reset( { password: password } ).generate( salt, iterations, dklen ).result;\r\n}\r\n\r\nfunction pbkdf2_hmac_sha1_hex ( password, salt, iterations, dklen ) {\r\n    var result = pbkdf2_hmac_sha1_bytes( password, salt, iterations, dklen );\r\n    return bytes_to_hex(result);\r\n}\r\n\r\nfunction pbkdf2_hmac_sha1_base64 ( password, salt, iterations, dklen ) {\r\n    var result = pbkdf2_hmac_sha1_bytes( password, salt, iterations, dklen );\r\n    return bytes_to_base64(result);\r\n}\r\n\r\nexport var PBKDF2 = {\r\n    bytes: pbkdf2_hmac_sha1_bytes,\r\n    hex: pbkdf2_hmac_sha1_hex,\r\n    base64: pbkdf2_hmac_sha1_base64\r\n};\r\n\r\nexport var PBKDF2_HMAC_SHA1 = {\r\n  bytes: pbkdf2_hmac_sha1_bytes,\r\n  hex: pbkdf2_hmac_sha1_hex,\r\n  base64: pbkdf2_hmac_sha1_base64\r\n};\r\n","import {pbkdf2_constructor, pbkdf2_reset} from './pbkdf2';\r\nimport {get_hmac_sha256_instance, hmac_sha256_constructor} from '../hmac/hmac-sha256';\r\nimport {is_string} from '../utils';\r\nimport {IllegalArgumentError, IllegalStateError} from '../errors';\r\n\r\nexport function pbkdf2_hmac_sha256_constructor ( options ) {\r\n    options = options || {};\r\n\r\n    if ( !( options.hmac instanceof hmac_sha256_constructor ) )\r\n        options.hmac = get_hmac_sha256_instance();\r\n\r\n    pbkdf2_constructor.call( this, options );\r\n\r\n    return this;\r\n}\r\n\r\nfunction pbkdf2_hmac_sha256_generate ( salt, count, length ) {\r\n    if ( this.result !== null )\r\n        throw new IllegalStateError(\"state must be reset before processing new data\");\r\n\r\n    if ( !salt && !is_string(salt) )\r\n        throw new IllegalArgumentError(\"bad 'salt' value\");\r\n\r\n    count = count || this.count;\r\n    length = length || this.length;\r\n\r\n    this.result = new Uint8Array(length);\r\n\r\n    var blocks = Math.ceil( length / this.hmac.HMAC_SIZE );\r\n\r\n    for ( var i = 1; i <= blocks; ++i ) {\r\n        var j = ( i - 1 ) * this.hmac.HMAC_SIZE;\r\n        var l = ( i < blocks ? 0 : length % this.hmac.HMAC_SIZE ) || this.hmac.HMAC_SIZE;\r\n\r\n        this.hmac.reset().process(salt);\r\n        this.hmac.hash.asm.pbkdf2_generate_block( this.hmac.hash.pos, this.hmac.hash.len, i, count, 0 );\r\n\r\n        this.result.set( this.hmac.hash.heap.subarray( 0, l ), j );\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nvar pbkdf2_hmac_sha256_prototype = pbkdf2_hmac_sha256_constructor.prototype;\r\npbkdf2_hmac_sha256_prototype.reset =   pbkdf2_reset;\r\npbkdf2_hmac_sha256_prototype.generate = pbkdf2_hmac_sha256_generate;\r\n\r\nvar pbkdf2_hmac_sha256_instance = null;\r\n\r\nexport function get_pbkdf2_hmac_sha256_instance () {\r\n    if ( pbkdf2_hmac_sha256_instance === null ) pbkdf2_hmac_sha256_instance = new pbkdf2_hmac_sha256_constructor();\r\n    return pbkdf2_hmac_sha256_instance;\r\n}\r\n","/**\r\n * PBKDF2-HMAC-SHA256 exports\r\n */\r\n\r\nimport {get_pbkdf2_hmac_sha256_instance} from './pbkdf2-hmac-sha256';\r\nimport {bytes_to_base64, bytes_to_hex} from '../utils';\r\n\r\nfunction pbkdf2_hmac_sha256_bytes (password, salt, iterations, dklen ) {\r\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\r\n    if ( salt === undefined ) throw new SyntaxError(\"salt required\");\r\n    return get_pbkdf2_hmac_sha256_instance().reset( { password: password } ).generate( salt, iterations, dklen ).result;\r\n}\r\n\r\nfunction pbkdf2_hmac_sha256_hex ( password, salt, iterations, dklen ) {\r\n    var result = pbkdf2_hmac_sha256_bytes( password, salt, iterations, dklen );\r\n    return bytes_to_hex(result);\r\n}\r\n\r\nfunction pbkdf2_hmac_sha256_base64 ( password, salt, iterations, dklen ) {\r\n    var result = pbkdf2_hmac_sha256_bytes( password, salt, iterations, dklen );\r\n    return bytes_to_base64(result);\r\n}\r\n\r\nexport var PBKDF2_HMAC_SHA256 = {\r\n    bytes: pbkdf2_hmac_sha256_bytes,\r\n    hex: pbkdf2_hmac_sha256_hex,\r\n    base64: pbkdf2_hmac_sha256_base64\r\n};\r\n","import { ISAAC } from './isaac';\r\nimport {FloatArray, is_buffer, is_typed_array} from '../utils';\r\nimport {get_pbkdf2_hmac_sha256_instance} from '../pbkdf2/pbkdf2-hmac-sha256';\r\nimport {SecurityError} from '../errors';\r\n\r\nvar _global_console = typeof console !== \"undefined\" ? console : undefined,\r\n    _global_date_now = Date.now,\r\n    _global_math_random = Math.random,\r\n    _global_performance = typeof performance !== \"undefined\" ? performance : undefined,\r\n    _global_crypto = typeof crypto !== \"undefined\" ? crypto : (typeof msCrypto !== \"undefined\" ? msCrypto : undefined),\r\n    _global_crypto_getRandomValues;\r\n\r\nif ( _global_crypto !== undefined )\r\n    _global_crypto_getRandomValues = _global_crypto.getRandomValues;\r\n\r\nvar _isaac_rand = ISAAC.rand,\r\n    _isaac_seed = ISAAC.seed,\r\n    _isaac_counter = 0,\r\n    _isaac_weak_seeded = false,\r\n    _isaac_seeded = false;\r\n\r\nvar _random_estimated_entropy = 0,\r\n    _random_required_entropy = 256,\r\n    _random_warn_callstacks = {};\r\n\r\nexport var _random_skip_system_rng_warning = false;\r\nexport var _random_allow_weak = false;\r\n\r\nvar _hires_now;\r\nif ( _global_performance !== undefined ) {\r\n    _hires_now = function () { return 1000 * _global_performance.now() | 0 };\r\n}\r\nelse {\r\n    var _hires_epoch = 1000 * _global_date_now() | 0;\r\n    _hires_now = function () { return 1000 * _global_date_now() - _hires_epoch | 0 };\r\n}\r\n\r\n/**\r\n * weak_seed\r\n *\r\n * Seeds RNG with native `crypto.getRandomValues` output or with high-resolution\r\n * time and single `Math.random()` value, and various other sources.\r\n *\r\n * We estimate this may give at least ~50 bits of unpredictableness,\r\n * but this has not been analysed thoroughly or precisely.\r\n */\r\nfunction Random_weak_seed () {\r\n    if ( _global_crypto !== undefined ) {\r\n        buffer = new Uint8Array(32);\r\n        _global_crypto_getRandomValues.call( _global_crypto, buffer );\r\n\r\n        _isaac_seed(buffer);\r\n    }\r\n    else {\r\n        // Some clarification about brute-force attack cost:\r\n        // - entire bitcoin network operates at ~10^16 hash guesses per second;\r\n        // - each PBKDF2 iteration requires the same number of hashing operations as bitcoin nonce guess;\r\n        // - attacker having such a hashing power is able to break worst-case 50 bits of the randomness in ~3 hours;\r\n        // Sounds sad though attacker having such a hashing power more likely would prefer to mine bitcoins.\r\n        var buffer = new FloatArray(3),\r\n            i, t;\r\n\r\n        buffer[0] = _global_math_random();\r\n        buffer[1] = _global_date_now();\r\n        buffer[2] = _hires_now();\r\n\r\n        buffer = new Uint8Array(buffer.buffer);\r\n\r\n        var salt = '';\r\n        if ( typeof location !== \"undefined\" ) {\r\n            salt += location.href;\r\n        }\r\n        else if ( typeof process !== \"undefined\" ) {\r\n            salt += process.pid + process.title;\r\n        }\r\n\r\n        var pbkdf2 = get_pbkdf2_hmac_sha256_instance();\r\n        for ( i = 0; i < 100; i++ ) {\r\n            buffer = pbkdf2.reset( { password: buffer } ).generate( salt, 1000, 32 ).result;\r\n            t = _hires_now();\r\n            buffer[0] ^= t >>> 24, buffer[1] ^= t >>> 16, buffer[2] ^= t >>> 8, buffer[3] ^= t;\r\n        }\r\n\r\n        _isaac_seed(buffer);\r\n    }\r\n\r\n    _isaac_counter = 0;\r\n\r\n    _isaac_weak_seeded = true;\r\n}\r\n\r\n/**\r\n * seed\r\n *\r\n * Seeds PRNG with supplied random values if these values have enough entropy.\r\n *\r\n * A false return value means the RNG is currently insecure; however a true\r\n * return value does not mean it is necessarily secure (depending on how you\r\n * collected the seed) though asmCrypto will be forced to assume this.\r\n *\r\n * The input buffer will be zeroed to discourage reuse. You should not copy it\r\n * or use it anywhere else before passing it into this function.\r\n *\r\n * **DISCLAIMER!** Seeding with a poor values is an easiest way shoot your legs, so\r\n * do not seed until you're know what entropy is and how to obtail high-quality random values,\r\n * **DO NOT SEED WITH CONSTANT VALUE! YOU'LL GET NO RANDOMNESS FROM CONSTANT!**\r\n */\r\nexport function Random_seed ( seed ) {\r\n    if ( !is_buffer(seed) && !is_typed_array(seed) )\r\n        throw new TypeError(\"bad seed type\");\r\n\r\n    var bpos = seed.byteOffset || 0,\r\n        blen = seed.byteLength || seed.length,\r\n        buff = new Uint8Array( ( seed.buffer || seed ), bpos, blen );\r\n\r\n    _isaac_seed(buff);\r\n\r\n    _isaac_counter = 0;\r\n\r\n    // don't let the user use these bytes again\r\n    var nonzero = 0;\r\n    for ( var i = 0; i < buff.length; i++ ) {\r\n        nonzero |= buff[i];\r\n        buff[i] = 0;\r\n    }\r\n\r\n    if ( nonzero !== 0 ) {\r\n        // TODO we could make a better estimate, but half-length is a prudent\r\n        // simple measure that seems unlikely to over-estimate\r\n        _random_estimated_entropy += 4 * blen;\r\n    }\r\n\r\n    _isaac_seeded = ( _random_estimated_entropy  >= _random_required_entropy );\r\n\r\n    return _isaac_seeded;\r\n}\r\n\r\n/**\r\n * getValues\r\n *\r\n * Populates the buffer with cryptographically secure random values. These are\r\n * calculated using `crypto.getRandomValues` if it is available, as well as our\r\n * own ISAAC PRNG implementation.\r\n *\r\n * If the former is not available (older browsers such as IE10 [1]), then the\r\n * latter *must* be seeded using `Random.seed`, unless `asmCrypto.random.allowWeak` is true.\r\n *\r\n * *We assume the system RNG is strong*; if you cannot afford this risk, then\r\n * you should also seed ISAAC using `Random.seed`. This is advisable for very\r\n * important situations, such as generation of long-term secrets. See also [2].\r\n *\r\n * [1] https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\r\n * [2] https://en.wikipedia.org/wiki/Dual_EC_DRBG\r\n *\r\n * In all cases, we opportunistically seed using various arbitrary sources\r\n * such as high-resolution time and one single value from the insecure\r\n * Math.random(); however this is not reliable as a strong security measure.\r\n */\r\nexport function Random_getValues ( buffer ) {\r\n    // opportunistically seed ISAAC with a weak seed; this hopefully makes an\r\n    // attack harder in the case where the system RNG is weak *and* we haven't\r\n    // seeded ISAAC. but don't make any guarantees to the user about this.\r\n    if ( !_isaac_weak_seeded )\r\n        Random_weak_seed();\r\n\r\n    // if we have no strong sources then the RNG is weak, handle it\r\n    if ( !_isaac_seeded && _global_crypto === undefined ) {\r\n        if ( !_random_allow_weak )\r\n            throw new SecurityError(\"No strong PRNGs available. Use asmCrypto.random.seed().\");\r\n\r\n        if ( _global_console !== undefined )\r\n            _global_console.error(\"No strong PRNGs available; your security is greatly lowered. Use asmCrypto.random.seed().\");\r\n    }\r\n\r\n    // separate warning about assuming system RNG strong\r\n    if ( !_random_skip_system_rng_warning && !_isaac_seeded && _global_crypto !== undefined && _global_console !== undefined ) {\r\n        // Hacky way to get call stack\r\n        var s = new Error().stack;\r\n        _random_warn_callstacks[s] |= 0;\r\n        if ( !_random_warn_callstacks[s]++ )\r\n            _global_console.warn(\"asmCrypto PRNG not seeded; your security relies on your system PRNG. If this is not acceptable, use asmCrypto.random.seed().\");\r\n    }\r\n\r\n    // proceed to get random values\r\n    if ( !is_buffer(buffer) && !is_typed_array(buffer) )\r\n        throw new TypeError(\"unexpected buffer type\");\r\n\r\n    var bpos = buffer.byteOffset || 0,\r\n        blen = buffer.byteLength || buffer.length,\r\n        bytes = new Uint8Array( ( buffer.buffer || buffer ), bpos, blen ),\r\n        i, r;\r\n\r\n    // apply system rng\r\n    if ( _global_crypto !== undefined )\r\n        _global_crypto_getRandomValues.call( _global_crypto, bytes );\r\n\r\n    // apply isaac rng\r\n    for ( i = 0; i < blen; i++ ) {\r\n        if ( (i & 3) === 0 ) {\r\n            if ( _isaac_counter >= 0x10000000000 ) Random_weak_seed();\r\n            r = _isaac_rand();\r\n            _isaac_counter++;\r\n        }\r\n        bytes[i] ^= r;\r\n        r >>>= 8;\r\n    }\r\n\r\n    return buffer;\r\n}\r\n\r\n/**\r\n * getNumber\r\n *\r\n * A drop-in `Math.random` replacement.\r\n * Intended for prevention of random material leakage out of the user's host.\r\n */\r\nexport function Random_getNumber () {\r\n    if ( !_isaac_weak_seeded || _isaac_counter >= 0x10000000000 )\r\n        Random_weak_seed();\r\n\r\n    var n = ( 0x100000 * _isaac_rand() + ( _isaac_rand() >>> 12 ) ) / 0x10000000000000;\r\n    _isaac_counter += 2;\r\n\r\n    return n;\r\n}\r\n\r\nObject.defineProperty( Random_getNumber, 'allowWeak', {\r\n  get: function () { return _random_allow_weak; },\r\n  set: function ( a ) { _random_allow_weak = a; }\r\n});\r\n\r\nObject.defineProperty( Random_getNumber, 'skipSystemRNGWarning', {\r\n  get: function () { return _random_skip_system_rng_warning; },\r\n  set: function ( w ) { _random_skip_system_rng_warning = w; }\r\n});\r\n\r\n\r\nObject.defineProperty( Random_getValues, 'allowWeak', {\r\n  get: function () { return _random_allow_weak; },\r\n  set: function ( a ) { _random_allow_weak = a; }\r\n});\r\n\r\nObject.defineProperty( Random_getValues, 'skipSystemRNGWarning', {\r\n  get: function () { return _random_skip_system_rng_warning; },\r\n  set: function ( w ) { _random_skip_system_rng_warning = w; }\r\n});\r\n\r\nRandom_getNumber.seed = Random_seed;\r\nRandom_getValues.seed = Random_seed;\r\n","/* ----------------------------------------------------------------------\r\n * Copyright (c) 2014 Artem S Vybornov\r\n *\r\n * Copyright (c) 2012 Yves-Marie K. Rinquin\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * ----------------------------------------------------------------------\r\n *\r\n * ISAAC is a cryptographically secure pseudo-random number generator\r\n * (or CSPRNG for short) designed by Robert J. Jenkins Jr. in 1996 and\r\n * based on RC4. It is designed for speed and security.\r\n *\r\n * ISAAC's informations & analysis:\r\n *   http://burtleburtle.net/bob/rand/isaac.html\r\n * ISAAC's implementation details:\r\n *   http://burtleburtle.net/bob/rand/isaacafa.html\r\n *\r\n * ISAAC succesfully passed TestU01\r\n */\r\n\r\nimport {FloatArray, is_buffer, is_number, is_string, is_typed_array, string_to_bytes} from '../utils';\r\n\r\nexport var ISAAC =  ( function () {\r\n    var m = new Uint32Array(256), // internal memory\r\n        r = new Uint32Array(256), // result array\r\n        acc = 0,              // accumulator\r\n        brs = 0,              // last result\r\n        cnt = 0,              // counter\r\n        gnt = 0;              // generation counter\r\n\r\n    /* private: randinit function, same as ISAAC reference implementation */\r\n    function randinit() {\r\n        var a, b, c, d, e, f, g, h;\r\n\r\n        /* private mixing function */\r\n        function mix () {\r\n            a ^= b <<  11; d = (d + a)|0; b = (b + c)|0;\r\n            b ^= c >>>  2; e = (e + b)|0; c = (c + d)|0;\r\n            c ^= d <<   8; f = (f + c)|0; d = (d + e)|0;\r\n            d ^= e >>> 16; g = (g + d)|0; e = (e + f)|0;\r\n            e ^= f <<  10; h = (h + e)|0; f = (f + g)|0;\r\n            f ^= g >>>  4; a = (a + f)|0; g = (g + h)|0;\r\n            g ^= h <<   8; b = (b + g)|0; h = (h + a)|0;\r\n            h ^= a >>>  9; c = (c + h)|0; a = (a + b)|0;\r\n        }\r\n\r\n        acc = brs = cnt = 0;\r\n\r\n        // the golden ratio\r\n        a = b = c = d = e = f = g = h = 0x9e3779b9;\r\n\r\n        // scramble it\r\n        for ( var i = 0; i < 4; i++ )\r\n            mix();\r\n\r\n        // mix it and combine with the internal state\r\n        for ( var i = 0; i < 256; i += 8 ) {\r\n            a = (a + r[i|0])|0; b = (b + r[i|1])|0;\r\n            c = (c + r[i|2])|0; d = (d + r[i|3])|0;\r\n            e = (e + r[i|4])|0; f = (f + r[i|5])|0;\r\n            g = (g + r[i|6])|0; h = (h + r[i|7])|0;\r\n            mix();\r\n            m.set([a, b, c, d, e, f, g, h], i);\r\n        }\r\n\r\n        // mix it again\r\n        for ( var i = 0; i < 256; i += 8 ) {\r\n            a = (a + m[i|0])|0; b = (b + m[i|1])|0;\r\n            c = (c + m[i|2])|0; d = (d + m[i|3])|0;\r\n            e = (e + m[i|4])|0; f = (f + m[i|5])|0;\r\n            g = (g + m[i|6])|0; h = (h + m[i|7])|0;\r\n            mix();\r\n            m.set([a, b, c, d, e, f, g, h], i);\r\n        }\r\n\r\n        // fill in the first set of results\r\n        prng(1), gnt = 256;\r\n    }\r\n\r\n    /* public: seeding function */\r\n    function seed ( s ) {\r\n        var i, j, k, n, l;\r\n\r\n        if ( !is_typed_array(s) ) {\r\n            if ( is_number(s) ) {\r\n                n = new FloatArray(1), n[0] = s;\r\n                s = new Uint8Array(n.buffer);\r\n            }\r\n            else if ( is_string(s) ) {\r\n                s = string_to_bytes(s);\r\n            }\r\n            else if ( is_buffer(s) ) {\r\n                s = new Uint8Array(s);\r\n            }\r\n            else {\r\n                throw new TypeError(\"bad seed type\");\r\n            }\r\n        }\r\n        else {\r\n            s = new Uint8Array(s.buffer);\r\n        }\r\n\r\n        // preprocess the seed\r\n        l = s.length;\r\n        for ( j = 0; j < l; j += 1024 )\r\n        {\r\n            // xor each chunk of 1024 bytes with r, for randinit() to mix in\r\n            for ( k = j, i = 0; ( i < 1024 ) && ( k < l ); k = j | (++i) ) {\r\n                r[i >> 2] ^= ( s[k] << ( (i & 3) << 3 ) );\r\n            }\r\n            randinit();\r\n        }\r\n    }\r\n\r\n    /* public: isaac generator, n = number of run */\r\n    function prng ( n ) {\r\n        n = n || 1;\r\n\r\n        var i, x, y;\r\n\r\n        while ( n-- ) {\r\n            cnt = (cnt + 1)|0;\r\n            brs = (brs + cnt)|0;\r\n\r\n            for ( i = 0; i < 256; i += 4 ) {\r\n                acc ^= acc << 13;\r\n                acc = m[(i + 128) & 0xff] + acc | 0; x = m[i|0];\r\n                m[i|0] = y = m[(x>>>2) & 0xff] + ( acc + brs | 0 ) | 0;\r\n                r[i|0] = brs = m[(y>>>10) & 0xff] + x | 0;\r\n\r\n                acc ^= acc >>> 6;\r\n                acc = m[(i + 129) & 0xff] + acc | 0; x = m[i|1];\r\n                m[i|1] = y = m[(x >>> 2) & 0xff] + ( acc + brs | 0 ) | 0;\r\n                r[i|1] = brs = m[(y >>> 10) & 0xff] + x | 0;\r\n\r\n                acc ^= acc << 2;\r\n                acc = m[(i + 130) & 0xff] + acc | 0; x = m[i|2];\r\n                m[i|2] = y = m[(x >>> 2) & 0xff] + ( acc + brs | 0 ) | 0;\r\n                r[i|2] = brs = m[(y >>> 10) & 0xff] + x | 0;\r\n\r\n                acc ^= acc >>> 16;\r\n                acc = m[(i + 131) & 0xff] + acc | 0; x = m[i|3];\r\n                m[i|3] = y = m[(x >>> 2) & 0xff] + (acc + brs | 0 ) | 0;\r\n                r[i|3] = brs = m[(y >>> 10) & 0xff] + x | 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* public: return a random number */\r\n    function rand() {\r\n        if ( !gnt-- )\r\n            prng(1), gnt = 255;\r\n\r\n        return r[gnt];\r\n    }\r\n\r\n    /* return class object */\r\n    return {\r\n        'seed':  seed,\r\n        'prng':  prng,\r\n        'rand':  rand\r\n    };\r\n})();\r\n","/**\r\n * Integers are represented as little endian array of 32-bit limbs.\r\n * Limbs number is a power of 2 and a multiple of 8 (256 bits).\r\n * Negative values use two's complement representation.\r\n */\r\nexport function bigint_asm ( stdlib, foreign, buffer ) {\r\n    \"use asm\";\r\n\r\n    var SP = 0;\r\n\r\n    var HEAP32 = new stdlib.Uint32Array(buffer);\r\n\r\n    var imul = stdlib.Math.imul;\r\n\r\n    /**\r\n     * Simple stack memory allocator\r\n     *\r\n     * Methods:\r\n     *  sreset\r\n     *  salloc\r\n     *  sfree\r\n     */\r\n\r\n    function sreset ( p ) {\r\n        p = p|0;\r\n        SP = p = (p + 31) & -32;\r\n        return p|0;\r\n    }\r\n\r\n    function salloc ( l ) {\r\n        l = l|0;\r\n        var p = 0; p = SP;\r\n        SP = p + ((l + 31) & -32)|0;\r\n        return p|0;\r\n    }\r\n\r\n    function sfree ( l ) {\r\n        l = l|0;\r\n        SP = SP - ((l + 31) & -32)|0;\r\n    }\r\n\r\n    /**\r\n     * Utility functions:\r\n     *  cp\r\n     *  z\r\n     */\r\n\r\n    function cp ( l, A, B ) {\r\n        l = l|0;\r\n        A = A|0;\r\n        B = B|0;\r\n\r\n        var i = 0;\r\n\r\n        if ( (A|0) > (B|0) ) {\r\n            for ( ; (i|0) < (l|0); i = (i+4)|0 ) {\r\n                HEAP32[(B+i)>>2] = HEAP32[(A+i)>>2];\r\n            }\r\n        }\r\n        else {\r\n            for ( i = (l-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\r\n                HEAP32[(B+i)>>2] = HEAP32[(A+i)>>2];\r\n            }\r\n        }\r\n    }\r\n\r\n    function z ( l, z, A ) {\r\n        l = l|0;\r\n        z = z|0;\r\n        A = A|0;\r\n\r\n        var i = 0;\r\n\r\n        for ( ; (i|0) < (l|0); i = (i+4)|0 ) {\r\n            HEAP32[(A+i)>>2] = z;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Negate the argument\r\n     *\r\n     * Perform two's complement transformation:\r\n     *\r\n     *  -A = ~A + 1\r\n     *\r\n     * @param A offset of the argment being negated, 32-byte aligned\r\n     * @param lA length of the argument, multiple of 32\r\n     *\r\n     * @param R offset where to place the result to, 32-byte aligned\r\n     * @param lR length to truncate the result to, multiple of 32\r\n     */\r\n    function neg ( A, lA, R, lR ) {\r\n        A  =  A|0;\r\n        lA = lA|0;\r\n        R  =  R|0;\r\n        lR = lR|0;\r\n\r\n        var a = 0, c = 0, t = 0, r = 0, i = 0;\r\n\r\n        if ( (lR|0) <= 0 )\r\n            lR = lA;\r\n\r\n        if ( (lR|0) < (lA|0) )\r\n            lA = lR;\r\n\r\n        c = 1;\r\n        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\r\n            a = ~HEAP32[(A+i)>>2];\r\n            t = (a & 0xffff) + c|0;\r\n            r = (a >>> 16) + (t >>> 16)|0;\r\n            HEAP32[(R+i)>>2] = (r << 16) | (t & 0xffff);\r\n            c = r >>> 16;\r\n        }\r\n\r\n        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {\r\n            HEAP32[(R+i)>>2] = (c-1)|0;\r\n        }\r\n\r\n        return c|0;\r\n    }\r\n\r\n    function cmp ( A, lA, B, lB ) {\r\n        A  =  A|0;\r\n        lA = lA|0;\r\n        B  =  B|0;\r\n        lB = lB|0;\r\n\r\n        var a = 0, b = 0, i = 0;\r\n\r\n        if ( (lA|0) > (lB|0) ) {\r\n            for ( i = (lA-4)|0; (i|0) >= (lB|0); i = (i-4)|0 ) {\r\n                if ( HEAP32[(A+i)>>2]|0 ) return 1;\r\n            }\r\n        }\r\n        else {\r\n            for ( i = (lB-4)|0; (i|0) >= (lA|0); i = (i-4)|0 ) {\r\n                if ( HEAP32[(B+i)>>2]|0 ) return -1;\r\n            }\r\n        }\r\n\r\n        for ( ; (i|0) >= 0; i = (i-4)|0 ) {\r\n            a = HEAP32[(A+i)>>2]|0, b = HEAP32[(B+i)>>2]|0;\r\n            if ( (a>>>0) < (b>>>0) ) return -1;\r\n            if ( (a>>>0) > (b>>>0) ) return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Test the argument\r\n     *\r\n     * Same as `cmp` with zero.\r\n     */\r\n    function tst ( A, lA ) {\r\n        A  =  A|0;\r\n        lA = lA|0;\r\n\r\n        var i = 0;\r\n\r\n        for ( i = (lA-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\r\n            if ( HEAP32[(A+i)>>2]|0 ) return (i+4)|0;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Conventional addition\r\n     *\r\n     * @param A offset of the first argument, 32-byte aligned\r\n     * @param lA length of the first argument, multiple of 32\r\n     *\r\n     * @param B offset of the second argument, 32-bit aligned\r\n     * @param lB length of the second argument, multiple of 32\r\n     *\r\n     * @param R offset where to place the result to, 32-byte aligned\r\n     * @param lR length to truncate the result to, multiple of 32\r\n     */\r\n    function add ( A, lA, B, lB, R, lR ) {\r\n        A  =  A|0;\r\n        lA = lA|0;\r\n        B  =  B|0;\r\n        lB = lB|0;\r\n        R  =  R|0;\r\n        lR = lR|0;\r\n\r\n        var a = 0, b = 0, c = 0, t = 0, r = 0, i = 0;\r\n\r\n        if ( (lA|0) < (lB|0) ) {\r\n            t = A, A = B, B = t;\r\n            t = lA, lA = lB, lB = t;\r\n        }\r\n\r\n        if ( (lR|0) <= 0 )\r\n            lR = lA+4|0;\r\n\r\n        if ( (lR|0) < (lB|0) )\r\n            lA = lB = lR;\r\n\r\n        for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {\r\n            a = HEAP32[(A+i)>>2]|0;\r\n            b = HEAP32[(B+i)>>2]|0;\r\n            t = ( (a & 0xffff) + (b & 0xffff)|0 ) + c|0;\r\n            r = ( (a >>> 16) + (b >>> 16)|0 ) + (t >>> 16)|0;\r\n            HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\r\n            c = r >>> 16;\r\n        }\r\n\r\n        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\r\n            a = HEAP32[(A+i)>>2]|0;\r\n            t = (a & 0xffff) + c|0;\r\n            r = (a >>> 16) + (t >>> 16)|0;\r\n            HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\r\n            c = r >>> 16;\r\n        }\r\n\r\n        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {\r\n            HEAP32[(R+i)>>2] = c|0;\r\n            c = 0;\r\n        }\r\n\r\n        return c|0;\r\n    }\r\n\r\n   /**\r\n     * Conventional subtraction\r\n     *\r\n     * @param A offset of the first argument, 32-byte aligned\r\n     * @param lA length of the first argument, multiple of 32\r\n     *\r\n     * @param B offset of the second argument, 32-bit aligned\r\n     * @param lB length of the second argument, multiple of 32\r\n     *\r\n     * @param R offset where to place the result to, 32-byte aligned\r\n     * @param lR length to truncate the result to, multiple of 32\r\n     */\r\n    function sub ( A, lA, B, lB, R, lR ) {\r\n        A  =  A|0;\r\n        lA = lA|0;\r\n        B  =  B|0;\r\n        lB = lB|0;\r\n        R  =  R|0;\r\n        lR = lR|0;\r\n\r\n        var a = 0, b = 0, c = 0, t = 0, r = 0, i = 0;\r\n\r\n        if ( (lR|0) <= 0 )\r\n            lR = (lA|0) > (lB|0) ? lA+4|0 : lB+4|0;\r\n\r\n        if ( (lR|0) < (lA|0) )\r\n            lA = lR;\r\n\r\n        if ( (lR|0) < (lB|0) )\r\n            lB = lR;\r\n\r\n        if ( (lA|0) < (lB|0) ) {\r\n            for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\r\n                a = HEAP32[(A+i)>>2]|0;\r\n                b = HEAP32[(B+i)>>2]|0;\r\n                t = ( (a & 0xffff) - (b & 0xffff)|0 ) + c|0;\r\n                r = ( (a >>> 16) - (b >>> 16)|0 ) + (t >> 16)|0;\r\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\r\n                c = r >> 16;\r\n            }\r\n\r\n            for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {\r\n                b = HEAP32[(B+i)>>2]|0;\r\n                t = c - (b & 0xffff)|0;\r\n                r = (t >> 16) - (b >>> 16)|0;\r\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\r\n                c = r >> 16;\r\n            }\r\n        }\r\n        else {\r\n            for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {\r\n                a = HEAP32[(A+i)>>2]|0;\r\n                b = HEAP32[(B+i)>>2]|0;\r\n                t = ( (a & 0xffff) - (b & 0xffff)|0 ) + c|0;\r\n                r = ( (a >>> 16) - (b >>> 16)|0 ) + (t >> 16)|0;\r\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\r\n                c = r >> 16;\r\n            }\r\n\r\n            for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\r\n                a = HEAP32[(A+i)>>2]|0;\r\n                t = (a & 0xffff) + c|0;\r\n                r = (a >>> 16) + (t >> 16)|0;\r\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\r\n                c = r >> 16;\r\n            }\r\n        }\r\n\r\n        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {\r\n            HEAP32[(R+i)>>2] = c|0;\r\n        }\r\n\r\n        return c|0;\r\n    }\r\n\r\n    /**\r\n     * Conventional multiplication\r\n     *\r\n     * TODO implement Karatsuba algorithm for large multiplicands\r\n     *\r\n     * @param A offset of the first argument, 32-byte aligned\r\n     * @param lA length of the first argument, multiple of 32\r\n     *\r\n     * @param B offset of the second argument, 32-byte aligned\r\n     * @param lB length of the second argument, multiple of 32\r\n     *\r\n     * @param R offset where to place the result to, 32-byte aligned\r\n     * @param lR length to truncate the result to, multiple of 32\r\n     */\r\n    function mul ( A, lA, B, lB, R, lR ) {\r\n        A  =  A|0;\r\n        lA = lA|0;\r\n        B  =  B|0;\r\n        lB = lB|0;\r\n        R  =  R|0;\r\n        lR = lR|0;\r\n\r\n        var al0 = 0, al1 = 0, al2 = 0, al3 = 0, al4 = 0, al5 = 0, al6 = 0, al7 = 0, ah0 = 0, ah1 = 0, ah2 = 0, ah3 = 0, ah4 = 0, ah5 = 0, ah6 = 0, ah7 = 0,\r\n            bl0 = 0, bl1 = 0, bl2 = 0, bl3 = 0, bl4 = 0, bl5 = 0, bl6 = 0, bl7 = 0, bh0 = 0, bh1 = 0, bh2 = 0, bh3 = 0, bh4 = 0, bh5 = 0, bh6 = 0, bh7 = 0,\r\n            r0 = 0, r1 = 0, r2 = 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0, r8 = 0, r9 = 0, r10 = 0, r11 = 0, r12 = 0, r13 = 0, r14 = 0, r15 = 0,\r\n            u = 0, v = 0, w = 0, m = 0,\r\n            i = 0, Ai = 0, j = 0, Bj = 0, Rk = 0;\r\n\r\n        if ( (lA|0) > (lB|0) ) {\r\n            u = A, v = lA;\r\n            A = B, lA = lB;\r\n            B = u, lB = v;\r\n        }\r\n\r\n        m = (lA+lB)|0;\r\n        if ( ( (lR|0) > (m|0) ) | ( (lR|0) <= 0 ) )\r\n            lR = m;\r\n\r\n        if ( (lR|0) < (lA|0) )\r\n            lA = lR;\r\n\r\n        if ( (lR|0) < (lB|0) )\r\n            lB = lR;\r\n\r\n        for ( ; (i|0) < (lA|0); i = (i+32)|0 ) {\r\n            Ai = (A+i)|0;\r\n\r\n            ah0 = HEAP32[(Ai|0)>>2]|0,\r\n            ah1 = HEAP32[(Ai|4)>>2]|0,\r\n            ah2 = HEAP32[(Ai|8)>>2]|0,\r\n            ah3 = HEAP32[(Ai|12)>>2]|0,\r\n            ah4 = HEAP32[(Ai|16)>>2]|0,\r\n            ah5 = HEAP32[(Ai|20)>>2]|0,\r\n            ah6 = HEAP32[(Ai|24)>>2]|0,\r\n            ah7 = HEAP32[(Ai|28)>>2]|0,\r\n            al0 = ah0 & 0xffff,\r\n            al1 = ah1 & 0xffff,\r\n            al2 = ah2 & 0xffff,\r\n            al3 = ah3 & 0xffff,\r\n            al4 = ah4 & 0xffff,\r\n            al5 = ah5 & 0xffff,\r\n            al6 = ah6 & 0xffff,\r\n            al7 = ah7 & 0xffff,\r\n            ah0 = ah0 >>> 16,\r\n            ah1 = ah1 >>> 16,\r\n            ah2 = ah2 >>> 16,\r\n            ah3 = ah3 >>> 16,\r\n            ah4 = ah4 >>> 16,\r\n            ah5 = ah5 >>> 16,\r\n            ah6 = ah6 >>> 16,\r\n            ah7 = ah7 >>> 16;\r\n\r\n            r8 = r9 = r10 = r11 = r12 = r13 = r14 = r15 = 0;\r\n\r\n            for ( j = 0; (j|0) < (lB|0); j = (j+32)|0 ) {\r\n                Bj = (B+j)|0;\r\n                Rk = (R+(i+j|0))|0;\r\n\r\n                bh0 = HEAP32[(Bj|0)>>2]|0,\r\n                bh1 = HEAP32[(Bj|4)>>2]|0,\r\n                bh2 = HEAP32[(Bj|8)>>2]|0,\r\n                bh3 = HEAP32[(Bj|12)>>2]|0,\r\n                bh4 = HEAP32[(Bj|16)>>2]|0,\r\n                bh5 = HEAP32[(Bj|20)>>2]|0,\r\n                bh6 = HEAP32[(Bj|24)>>2]|0,\r\n                bh7 = HEAP32[(Bj|28)>>2]|0,\r\n                bl0 = bh0 & 0xffff,\r\n                bl1 = bh1 & 0xffff,\r\n                bl2 = bh2 & 0xffff,\r\n                bl3 = bh3 & 0xffff,\r\n                bl4 = bh4 & 0xffff,\r\n                bl5 = bh5 & 0xffff,\r\n                bl6 = bh6 & 0xffff,\r\n                bl7 = bh7 & 0xffff,\r\n                bh0 = bh0 >>> 16,\r\n                bh1 = bh1 >>> 16,\r\n                bh2 = bh2 >>> 16,\r\n                bh3 = bh3 >>> 16,\r\n                bh4 = bh4 >>> 16,\r\n                bh5 = bh5 >>> 16,\r\n                bh6 = bh6 >>> 16,\r\n                bh7 = bh7 >>> 16;\r\n\r\n                r0 = HEAP32[(Rk|0)>>2]|0,\r\n                r1 = HEAP32[(Rk|4)>>2]|0,\r\n                r2 = HEAP32[(Rk|8)>>2]|0,\r\n                r3 = HEAP32[(Rk|12)>>2]|0,\r\n                r4 = HEAP32[(Rk|16)>>2]|0,\r\n                r5 = HEAP32[(Rk|20)>>2]|0,\r\n                r6 = HEAP32[(Rk|24)>>2]|0,\r\n                r7 = HEAP32[(Rk|28)>>2]|0;\r\n\r\n                u = ((imul(al0, bl0)|0) + (r8 & 0xffff)|0) + (r0 & 0xffff)|0;\r\n                v = ((imul(ah0, bl0)|0) + (r8 >>> 16)|0) + (r0 >>> 16)|0;\r\n                w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r0 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al0, bl1)|0) + (m & 0xffff)|0) + (r1 & 0xffff)|0;\r\n                v = ((imul(ah0, bl1)|0) + (m >>> 16)|0) + (r1 >>> 16)|0;\r\n                w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r1 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al0, bl2)|0) + (m & 0xffff)|0) + (r2 & 0xffff)|0;\r\n                v = ((imul(ah0, bl2)|0) + (m >>> 16)|0) + (r2 >>> 16)|0;\r\n                w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r2 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al0, bl3)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;\r\n                v = ((imul(ah0, bl3)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;\r\n                w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r3 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al0, bl4)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\r\n                v = ((imul(ah0, bl4)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\r\n                w = ((imul(al0, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah0, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r4 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al0, bl5)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\r\n                v = ((imul(ah0, bl5)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\r\n                w = ((imul(al0, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah0, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r5 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al0, bl6)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\r\n                v = ((imul(ah0, bl6)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\r\n                w = ((imul(al0, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah0, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r6 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al0, bl7)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\r\n                v = ((imul(ah0, bl7)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\r\n                w = ((imul(al0, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah0, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r7 = (w << 16) | (u & 0xffff);\r\n\r\n                r8 = m;\r\n\r\n                u = ((imul(al1, bl0)|0) + (r9 & 0xffff)|0) + (r1 & 0xffff)|0;\r\n                v = ((imul(ah1, bl0)|0) + (r9 >>> 16)|0) + (r1 >>> 16)|0;\r\n                w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r1 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al1, bl1)|0) + (m & 0xffff)|0) + (r2 & 0xffff)|0;\r\n                v = ((imul(ah1, bl1)|0) + (m >>> 16)|0) + (r2 >>> 16)|0;\r\n                w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r2 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al1, bl2)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;\r\n                v = ((imul(ah1, bl2)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;\r\n                w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r3 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al1, bl3)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\r\n                v = ((imul(ah1, bl3)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\r\n                w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r4 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al1, bl4)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\r\n                v = ((imul(ah1, bl4)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\r\n                w = ((imul(al1, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah1, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r5 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al1, bl5)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\r\n                v = ((imul(ah1, bl5)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\r\n                w = ((imul(al1, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah1, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r6 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al1, bl6)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\r\n                v = ((imul(ah1, bl6)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\r\n                w = ((imul(al1, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah1, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r7 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al1, bl7)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\r\n                v = ((imul(ah1, bl7)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\r\n                w = ((imul(al1, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah1, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r8 = (w << 16) | (u & 0xffff);\r\n\r\n                r9 = m;\r\n\r\n                u = ((imul(al2, bl0)|0) + (r10 & 0xffff)|0) + (r2 & 0xffff)|0;\r\n                v = ((imul(ah2, bl0)|0) + (r10 >>> 16)|0) + (r2 >>> 16)|0;\r\n                w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r2 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al2, bl1)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;\r\n                v = ((imul(ah2, bl1)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;\r\n                w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r3 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al2, bl2)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\r\n                v = ((imul(ah2, bl2)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\r\n                w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r4 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al2, bl3)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\r\n                v = ((imul(ah2, bl3)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\r\n                w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r5 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al2, bl4)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\r\n                v = ((imul(ah2, bl4)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\r\n                w = ((imul(al2, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah2, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r6 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al2, bl5)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\r\n                v = ((imul(ah2, bl5)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\r\n                w = ((imul(al2, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah2, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r7 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al2, bl6)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\r\n                v = ((imul(ah2, bl6)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\r\n                w = ((imul(al2, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah2, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r8 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al2, bl7)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\r\n                v = ((imul(ah2, bl7)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\r\n                w = ((imul(al2, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah2, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r9 = (w << 16) | (u & 0xffff);\r\n\r\n                r10 = m;\r\n\r\n                u = ((imul(al3, bl0)|0) + (r11 & 0xffff)|0) + (r3 & 0xffff)|0;\r\n                v = ((imul(ah3, bl0)|0) + (r11 >>> 16)|0) + (r3 >>> 16)|0;\r\n                w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r3 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al3, bl1)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\r\n                v = ((imul(ah3, bl1)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\r\n                w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r4 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al3, bl2)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\r\n                v = ((imul(ah3, bl2)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\r\n                w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r5 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al3, bl3)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\r\n                v = ((imul(ah3, bl3)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\r\n                w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r6 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al3, bl4)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\r\n                v = ((imul(ah3, bl4)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\r\n                w = ((imul(al3, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah3, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r7 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al3, bl5)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\r\n                v = ((imul(ah3, bl5)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\r\n                w = ((imul(al3, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah3, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r8 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al3, bl6)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\r\n                v = ((imul(ah3, bl6)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\r\n                w = ((imul(al3, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah3, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r9 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al3, bl7)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\r\n                v = ((imul(ah3, bl7)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\r\n                w = ((imul(al3, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah3, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r10 = (w << 16) | (u & 0xffff);\r\n\r\n                r11 = m;\r\n\r\n                u = ((imul(al4, bl0)|0) + (r12 & 0xffff)|0) + (r4 & 0xffff)|0;\r\n                v = ((imul(ah4, bl0)|0) + (r12 >>> 16)|0) + (r4 >>> 16)|0;\r\n                w = ((imul(al4, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah4, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r4 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al4, bl1)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\r\n                v = ((imul(ah4, bl1)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\r\n                w = ((imul(al4, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah4, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r5 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al4, bl2)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\r\n                v = ((imul(ah4, bl2)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\r\n                w = ((imul(al4, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah4, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r6 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al4, bl3)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\r\n                v = ((imul(ah4, bl3)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\r\n                w = ((imul(al4, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah4, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r7 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al4, bl4)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\r\n                v = ((imul(ah4, bl4)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\r\n                w = ((imul(al4, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah4, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r8 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al4, bl5)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\r\n                v = ((imul(ah4, bl5)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\r\n                w = ((imul(al4, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah4, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r9 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al4, bl6)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\r\n                v = ((imul(ah4, bl6)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\r\n                w = ((imul(al4, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah4, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r10 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al4, bl7)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\r\n                v = ((imul(ah4, bl7)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\r\n                w = ((imul(al4, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah4, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r11 = (w << 16) | (u & 0xffff);\r\n\r\n                r12 = m;\r\n\r\n                u = ((imul(al5, bl0)|0) + (r13 & 0xffff)|0) + (r5 & 0xffff)|0;\r\n                v = ((imul(ah5, bl0)|0) + (r13 >>> 16)|0) + (r5 >>> 16)|0;\r\n                w = ((imul(al5, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah5, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r5 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al5, bl1)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\r\n                v = ((imul(ah5, bl1)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\r\n                w = ((imul(al5, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah5, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r6 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al5, bl2)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\r\n                v = ((imul(ah5, bl2)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\r\n                w = ((imul(al5, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah5, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r7 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al5, bl3)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\r\n                v = ((imul(ah5, bl3)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\r\n                w = ((imul(al5, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah5, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r8 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al5, bl4)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\r\n                v = ((imul(ah5, bl4)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\r\n                w = ((imul(al5, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah5, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r9 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al5, bl5)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\r\n                v = ((imul(ah5, bl5)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\r\n                w = ((imul(al5, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah5, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r10 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al5, bl6)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\r\n                v = ((imul(ah5, bl6)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\r\n                w = ((imul(al5, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah5, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r11 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al5, bl7)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;\r\n                v = ((imul(ah5, bl7)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;\r\n                w = ((imul(al5, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah5, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r12 = (w << 16) | (u & 0xffff);\r\n\r\n                r13 = m;\r\n\r\n                u = ((imul(al6, bl0)|0) + (r14 & 0xffff)|0) + (r6 & 0xffff)|0;\r\n                v = ((imul(ah6, bl0)|0) + (r14 >>> 16)|0) + (r6 >>> 16)|0;\r\n                w = ((imul(al6, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah6, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r6 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al6, bl1)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\r\n                v = ((imul(ah6, bl1)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\r\n                w = ((imul(al6, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah6, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r7 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al6, bl2)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\r\n                v = ((imul(ah6, bl2)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\r\n                w = ((imul(al6, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah6, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r8 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al6, bl3)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\r\n                v = ((imul(ah6, bl3)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\r\n                w = ((imul(al6, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah6, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r9 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al6, bl4)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\r\n                v = ((imul(ah6, bl4)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\r\n                w = ((imul(al6, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah6, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r10 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al6, bl5)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\r\n                v = ((imul(ah6, bl5)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\r\n                w = ((imul(al6, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah6, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r11 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al6, bl6)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;\r\n                v = ((imul(ah6, bl6)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;\r\n                w = ((imul(al6, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah6, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r12 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al6, bl7)|0) + (m & 0xffff)|0) + (r13 & 0xffff)|0;\r\n                v = ((imul(ah6, bl7)|0) + (m >>> 16)|0) + (r13 >>> 16)|0;\r\n                w = ((imul(al6, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah6, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r13 = (w << 16) | (u & 0xffff);\r\n\r\n                r14 = m;\r\n\r\n                u = ((imul(al7, bl0)|0) + (r15 & 0xffff)|0) + (r7 & 0xffff)|0;\r\n                v = ((imul(ah7, bl0)|0) + (r15 >>> 16)|0) + (r7 >>> 16)|0;\r\n                w = ((imul(al7, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah7, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r7 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al7, bl1)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\r\n                v = ((imul(ah7, bl1)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\r\n                w = ((imul(al7, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah7, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r8 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al7, bl2)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\r\n                v = ((imul(ah7, bl2)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\r\n                w = ((imul(al7, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah7, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r9 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al7, bl3)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\r\n                v = ((imul(ah7, bl3)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\r\n                w = ((imul(al7, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah7, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r10 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al7, bl4)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\r\n                v = ((imul(ah7, bl4)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\r\n                w = ((imul(al7, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah7, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r11 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al7, bl5)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;\r\n                v = ((imul(ah7, bl5)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;\r\n                w = ((imul(al7, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah7, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r12 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al7, bl6)|0) + (m & 0xffff)|0) + (r13 & 0xffff)|0;\r\n                v = ((imul(ah7, bl6)|0) + (m >>> 16)|0) + (r13 >>> 16)|0;\r\n                w = ((imul(al7, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah7, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r13 = (w << 16) | (u & 0xffff);\r\n\r\n                u = ((imul(al7, bl7)|0) + (m & 0xffff)|0) + (r14 & 0xffff)|0;\r\n                v = ((imul(ah7, bl7)|0) + (m >>> 16)|0) + (r14 >>> 16)|0;\r\n                w = ((imul(al7, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah7, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r14 = (w << 16) | (u & 0xffff);\r\n\r\n                r15 = m;\r\n\r\n                HEAP32[(Rk|0)>>2] = r0,\r\n                HEAP32[(Rk|4)>>2] = r1,\r\n                HEAP32[(Rk|8)>>2] = r2,\r\n                HEAP32[(Rk|12)>>2] = r3,\r\n                HEAP32[(Rk|16)>>2] = r4,\r\n                HEAP32[(Rk|20)>>2] = r5,\r\n                HEAP32[(Rk|24)>>2] = r6,\r\n                HEAP32[(Rk|28)>>2] = r7;\r\n            }\r\n\r\n            Rk = (R+(i+j|0))|0;\r\n            HEAP32[(Rk|0)>>2] = r8,\r\n            HEAP32[(Rk|4)>>2] = r9,\r\n            HEAP32[(Rk|8)>>2] = r10,\r\n            HEAP32[(Rk|12)>>2] = r11,\r\n            HEAP32[(Rk|16)>>2] = r12,\r\n            HEAP32[(Rk|20)>>2] = r13,\r\n            HEAP32[(Rk|24)>>2] = r14,\r\n            HEAP32[(Rk|28)>>2] = r15;\r\n        }\r\n/*\r\n        for ( i = lA & -32; (i|0) < (lA|0); i = (i+4)|0 ) {\r\n            Ai = (A+i)|0;\r\n\r\n            ah0 = HEAP32[Ai>>2]|0,\r\n            al0 = ah0 & 0xffff,\r\n            ah0 = ah0 >>> 16;\r\n\r\n            r1 = 0;\r\n\r\n            for ( j = 0; (j|0) < (lB|0); j = (j+4)|0 ) {\r\n                Bj = (B+j)|0;\r\n                Rk = (R+(i+j|0))|0;\r\n\r\n                bh0 = HEAP32[Bj>>2]|0,\r\n                bl0 = bh0 & 0xffff,\r\n                bh0 = bh0 >>> 16;\r\n\r\n                r0 = HEAP32[Rk>>2]|0;\r\n\r\n                u = ((imul(al0, bl0)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;\r\n                v = ((imul(ah0, bl0)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;\r\n                w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                r0 = (w << 16) | (u & 0xffff);\r\n\r\n                r1 = m;\r\n\r\n                HEAP32[Rk>>2] = r0;\r\n            }\r\n\r\n            Rk = (R+(i+j|0))|0;\r\n            HEAP32[Rk>>2] = r1;\r\n        }\r\n*/\r\n    }\r\n\r\n    /**\r\n     * Fast squaring\r\n     *\r\n     * Exploits the fact:\r\n     *\r\n     *  X² = ( X0 + X1*B )² = X0² + 2*X0*X1*B + X1²*B²,\r\n     *\r\n     * where B is a power of 2, so:\r\n     *\r\n     *  2*X0*X1*B = (X0*X1 << 1)*B\r\n     *\r\n     * @param A offset of the argument being squared, 32-byte aligned\r\n     * @param lA length of the argument, multiple of 32\r\n     *\r\n     * @param R offset where to place the result to, 32-byte aligned\r\n     */\r\n    function sqr ( A, lA, R ) {\r\n        A  =  A|0;\r\n        lA = lA|0;\r\n        R  =  R|0;\r\n\r\n        var al0 = 0, al1 = 0, al2 = 0, al3 = 0, al4 = 0, al5 = 0, al6 = 0, al7 = 0, ah0 = 0, ah1 = 0, ah2 = 0, ah3 = 0, ah4 = 0, ah5 = 0, ah6 = 0, ah7 = 0,\r\n            bl0 = 0, bl1 = 0, bl2 = 0, bl3 = 0, bl4 = 0, bl5 = 0, bl6 = 0, bl7 = 0, bh0 = 0, bh1 = 0, bh2 = 0, bh3 = 0, bh4 = 0, bh5 = 0, bh6 = 0, bh7 = 0,\r\n            r0 = 0, r1 = 0, r2 = 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0, r8 = 0, r9 = 0, r10 = 0, r11 = 0, r12 = 0, r13 = 0, r14 = 0, r15 = 0,\r\n            u = 0, v = 0, w = 0, c = 0, h = 0, m = 0, r = 0,\r\n            d = 0, dd = 0, p = 0, i = 0, j = 0, k = 0, Ai = 0, Aj = 0, Rk = 0;\r\n\r\n        // prepare for iterations\r\n        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\r\n            Rk = R+(i<<1)|0;\r\n            ah0 = HEAP32[(A+i)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16;\r\n            u = imul(al0,al0)|0;\r\n            v = (imul(al0,ah0)|0) + (u >>> 17)|0;\r\n            w = (imul(ah0,ah0)|0) + (v >>> 15)|0;\r\n            HEAP32[(Rk)>>2] = (v << 17) | (u & 0x1ffff);\r\n            HEAP32[(Rk|4)>>2] = w;\r\n        }\r\n\r\n        // unrolled 1st iteration\r\n        for ( p = 0; (p|0) < (lA|0); p = (p+8)|0 ) {\r\n            Ai = A+p|0, Rk = R+(p<<1)|0;\r\n\r\n            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16;\r\n\r\n            bh0 = HEAP32[(Ai|4)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16;\r\n\r\n            u = imul(al0,bl0)|0;\r\n            v = (imul(al0,bh0)|0) + (u >>> 16)|0;\r\n            w = (imul(ah0,bl0)|0) + (v & 0xffff)|0;\r\n            m = ((imul(ah0,bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n\r\n            r = HEAP32[(Rk|4)>>2]|0;\r\n            u = (r & 0xffff) + ((u & 0xffff) << 1)|0;\r\n            w = ((r >>> 16) + ((w & 0xffff) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk|4)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk|8)>>2]|0;\r\n            u = ((r & 0xffff) + ((m & 0xffff) << 1)|0) + c|0;\r\n            w = ((r >>> 16) + ((m >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk|8)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            if ( c ) {\r\n                r = HEAP32[(Rk|12)>>2]|0;\r\n                u = (r & 0xffff) + c|0;\r\n                w = (r >>> 16) + (u >>> 16)|0;\r\n                HEAP32[(Rk|12)>>2] = (w << 16) | (u & 0xffff);\r\n            }\r\n        }\r\n\r\n        // unrolled 2nd iteration\r\n        for ( p = 0; (p|0) < (lA|0); p = (p+16)|0 ) {\r\n            Ai = A+p|0, Rk = R+(p<<1)|0;\r\n\r\n            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,\r\n            ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16;\r\n\r\n            bh0 = HEAP32[(Ai|8)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,\r\n            bh1 = HEAP32[(Ai|12)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16;\r\n\r\n            u = imul(al0, bl0)|0;\r\n            v = imul(ah0, bl0)|0;\r\n            w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r0 = (w << 16) | (u & 0xffff);\r\n\r\n            u = (imul(al0, bl1)|0) + (m & 0xffff)|0;\r\n            v = (imul(ah0, bl1)|0) + (m >>> 16)|0;\r\n            w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r1 = (w << 16) | (u & 0xffff);\r\n\r\n            r2 = m;\r\n\r\n            u = (imul(al1, bl0)|0) + (r1 & 0xffff)|0;\r\n            v = (imul(ah1, bl0)|0) + (r1 >>> 16)|0;\r\n            w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r1 = (w << 16) | (u & 0xffff);\r\n\r\n            u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\r\n            v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\r\n            w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r2 = (w << 16) | (u & 0xffff);\r\n\r\n            r3 = m;\r\n\r\n            r = HEAP32[(Rk|8)>>2]|0;\r\n            u = (r & 0xffff) + ((r0 & 0xffff) << 1)|0;\r\n            w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk|8)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk|12)>>2]|0;\r\n            u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0)  + c|0;\r\n            w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk|12)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk|16)>>2]|0;\r\n            u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;\r\n            w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk|16)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk|20)>>2]|0;\r\n            u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;\r\n            w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk|20)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            for ( k = 24; !!c & ( (k|0) < 32 ); k = (k+4)|0 ) {\r\n                r = HEAP32[(Rk|k)>>2]|0;\r\n                u = (r & 0xffff) + c|0;\r\n                w = (r >>> 16) + (u >>> 16)|0;\r\n                HEAP32[(Rk|k)>>2] = (w << 16) | (u & 0xffff);\r\n                c = w >>> 16;\r\n            }\r\n        }\r\n\r\n        // unrolled 3rd iteration\r\n        for ( p = 0; (p|0) < (lA|0); p = (p+32)|0 ) {\r\n            Ai = A+p|0, Rk = R+(p<<1)|0;\r\n\r\n            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,\r\n            ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16,\r\n            ah2 = HEAP32[(Ai|8)>>2]|0, al2 = ah2 & 0xffff, ah2 = ah2 >>> 16,\r\n            ah3 = HEAP32[(Ai|12)>>2]|0, al3 = ah3 & 0xffff, ah3 = ah3 >>> 16;\r\n\r\n            bh0 = HEAP32[(Ai|16)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,\r\n            bh1 = HEAP32[(Ai|20)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16,\r\n            bh2 = HEAP32[(Ai|24)>>2]|0, bl2 = bh2 & 0xffff, bh2 = bh2 >>> 16,\r\n            bh3 = HEAP32[(Ai|28)>>2]|0, bl3 = bh3 & 0xffff, bh3 = bh3 >>> 16;\r\n\r\n            u = imul(al0, bl0)|0;\r\n            v = imul(ah0, bl0)|0;\r\n            w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r0 = (w << 16) | (u & 0xffff);\r\n\r\n            u = (imul(al0, bl1)|0) + (m & 0xffff)|0;\r\n            v = (imul(ah0, bl1)|0) + (m >>> 16)|0;\r\n            w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r1 = (w << 16) | (u & 0xffff);\r\n\r\n            u = (imul(al0, bl2)|0) + (m & 0xffff)|0;\r\n            v = (imul(ah0, bl2)|0) + (m >>> 16)|0;\r\n            w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r2 = (w << 16) | (u & 0xffff);\r\n\r\n            u = (imul(al0, bl3)|0) + (m & 0xffff)|0;\r\n            v = (imul(ah0, bl3)|0) + (m >>> 16)|0;\r\n            w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r3 = (w << 16) | (u & 0xffff);\r\n\r\n            r4 = m;\r\n\r\n            u = (imul(al1, bl0)|0) + (r1 & 0xffff)|0;\r\n            v = (imul(ah1, bl0)|0) + (r1 >>> 16)|0;\r\n            w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r1 = (w << 16) | (u & 0xffff);\r\n\r\n            u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\r\n            v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\r\n            w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r2 = (w << 16) | (u & 0xffff);\r\n\r\n            u = ((imul(al1, bl2)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\r\n            v = ((imul(ah1, bl2)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\r\n            w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r3 = (w << 16) | (u & 0xffff);\r\n\r\n            u = ((imul(al1, bl3)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\r\n            v = ((imul(ah1, bl3)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\r\n            w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r4 = (w << 16) | (u & 0xffff);\r\n\r\n            r5 = m;\r\n\r\n            u = (imul(al2, bl0)|0) + (r2 & 0xffff)|0;\r\n            v = (imul(ah2, bl0)|0) + (r2 >>> 16)|0;\r\n            w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r2 = (w << 16) | (u & 0xffff);\r\n\r\n            u = ((imul(al2, bl1)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\r\n            v = ((imul(ah2, bl1)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\r\n            w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r3 = (w << 16) | (u & 0xffff);\r\n\r\n            u = ((imul(al2, bl2)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\r\n            v = ((imul(ah2, bl2)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\r\n            w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r4 = (w << 16) | (u & 0xffff);\r\n\r\n            u = ((imul(al2, bl3)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\r\n            v = ((imul(ah2, bl3)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\r\n            w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r5 = (w << 16) | (u & 0xffff);\r\n\r\n            r6 = m;\r\n\r\n            u = (imul(al3, bl0)|0) + (r3 & 0xffff)|0;\r\n            v = (imul(ah3, bl0)|0) + (r3 >>> 16)|0;\r\n            w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r3 = (w << 16) | (u & 0xffff);\r\n\r\n            u = ((imul(al3, bl1)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\r\n            v = ((imul(ah3, bl1)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\r\n            w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r4 = (w << 16) | (u & 0xffff);\r\n\r\n            u = ((imul(al3, bl2)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\r\n            v = ((imul(ah3, bl2)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\r\n            w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r5 = (w << 16) | (u & 0xffff);\r\n\r\n            u = ((imul(al3, bl3)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\r\n            v = ((imul(ah3, bl3)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\r\n            w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n            m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n            r6 = (w << 16) | (u & 0xffff);\r\n\r\n            r7 = m;\r\n\r\n            r = HEAP32[(Rk|16)>>2]|0;\r\n            u = (r & 0xffff) + ((r0 & 0xffff) << 1)|0;\r\n            w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk|16)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk|20)>>2]|0;\r\n            u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0)  + c|0;\r\n            w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk|20)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk|24)>>2]|0;\r\n            u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;\r\n            w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk|24)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk|28)>>2]|0;\r\n            u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;\r\n            w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk|28)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk+32)>>2]|0;\r\n            u = ((r & 0xffff) + ((r4 & 0xffff) << 1)|0) + c|0;\r\n            w = ((r >>> 16) + ((r4 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk+32)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk+36)>>2]|0;\r\n            u = ((r & 0xffff) + ((r5 & 0xffff) << 1)|0) + c|0;\r\n            w = ((r >>> 16) + ((r5 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk+36)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk+40)>>2]|0;\r\n            u = ((r & 0xffff) + ((r6 & 0xffff) << 1)|0) + c|0;\r\n            w = ((r >>> 16) + ((r6 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk+40)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            r = HEAP32[(Rk+44)>>2]|0;\r\n            u = ((r & 0xffff) + ((r7 & 0xffff) << 1)|0) + c|0;\r\n            w = ((r >>> 16) + ((r7 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n            HEAP32[(Rk+44)>>2] = (w << 16) | (u & 0xffff);\r\n            c = w >>> 16;\r\n\r\n            for ( k = 48; !!c & ( (k|0) < 64 ); k = (k+4)|0 ) {\r\n                r = HEAP32[(Rk+k)>>2]|0;\r\n                u = (r & 0xffff) + c|0;\r\n                w = (r >>> 16) + (u >>> 16)|0;\r\n                HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                c = w >>> 16;\r\n            }\r\n        }\r\n\r\n        // perform iterations\r\n        for ( d = 32; (d|0) < (lA|0); d = d << 1 ) { // depth loop\r\n            dd = d << 1;\r\n\r\n            for ( p = 0; (p|0) < (lA|0); p = (p+dd)|0 ) { // part loop\r\n                Rk = R+(p<<1)|0;\r\n\r\n                h = 0;\r\n                for ( i = 0; (i|0) < (d|0); i = (i+32)|0 ) { // multiply-and-add loop\r\n                    Ai = (A+p|0)+i|0;\r\n\r\n                    ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,\r\n                    ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16,\r\n                    ah2 = HEAP32[(Ai|8)>>2]|0, al2 = ah2 & 0xffff, ah2 = ah2 >>> 16,\r\n                    ah3 = HEAP32[(Ai|12)>>2]|0, al3 = ah3 & 0xffff, ah3 = ah3 >>> 16,\r\n                    ah4 = HEAP32[(Ai|16)>>2]|0, al4 = ah4 & 0xffff, ah4 = ah4 >>> 16,\r\n                    ah5 = HEAP32[(Ai|20)>>2]|0, al5 = ah5 & 0xffff, ah5 = ah5 >>> 16,\r\n                    ah6 = HEAP32[(Ai|24)>>2]|0, al6 = ah6 & 0xffff, ah6 = ah6 >>> 16,\r\n                    ah7 = HEAP32[(Ai|28)>>2]|0, al7 = ah7 & 0xffff, ah7 = ah7 >>> 16;\r\n\r\n                    r8 = r9 = r10 = r11 = r12 = r13 = r14 = r15 = c = 0;\r\n\r\n                    for ( j = 0; (j|0) < (d|0); j = (j+32)|0 ) {\r\n                        Aj = ((A+p|0)+d|0)+j|0;\r\n\r\n                        bh0 = HEAP32[(Aj)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,\r\n                        bh1 = HEAP32[(Aj|4)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16,\r\n                        bh2 = HEAP32[(Aj|8)>>2]|0, bl2 = bh2 & 0xffff, bh2 = bh2 >>> 16,\r\n                        bh3 = HEAP32[(Aj|12)>>2]|0, bl3 = bh3 & 0xffff, bh3 = bh3 >>> 16,\r\n                        bh4 = HEAP32[(Aj|16)>>2]|0, bl4 = bh4 & 0xffff, bh4 = bh4 >>> 16,\r\n                        bh5 = HEAP32[(Aj|20)>>2]|0, bl5 = bh5 & 0xffff, bh5 = bh5 >>> 16,\r\n                        bh6 = HEAP32[(Aj|24)>>2]|0, bl6 = bh6 & 0xffff, bh6 = bh6 >>> 16,\r\n                        bh7 = HEAP32[(Aj|28)>>2]|0, bl7 = bh7 & 0xffff, bh7 = bh7 >>> 16;\r\n\r\n                        r0 = r1 = r2 = r3 = r4 = r5 = r6 = r7 = 0;\r\n\r\n                        u = ((imul(al0, bl0)|0) + (r0 & 0xffff)|0) + (r8 & 0xffff)|0;\r\n                        v = ((imul(ah0, bl0)|0) + (r0 >>> 16)|0) + (r8 >>> 16)|0;\r\n                        w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r0 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al0, bl1)|0) + (r1 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah0, bl1)|0) + (r1 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r1 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al0, bl2)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah0, bl2)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r2 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al0, bl3)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah0, bl3)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r3 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al0, bl4)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah0, bl4)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al0, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah0, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r4 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al0, bl5)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah0, bl5)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al0, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah0, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r5 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al0, bl6)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah0, bl6)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al0, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah0, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r6 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al0, bl7)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah0, bl7)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al0, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah0, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r7 = (w << 16) | (u & 0xffff);\r\n\r\n                        r8 = m;\r\n\r\n                        u = ((imul(al1, bl0)|0) + (r1 & 0xffff)|0) + (r9 & 0xffff)|0;\r\n                        v = ((imul(ah1, bl0)|0) + (r1 >>> 16)|0) + (r9 >>> 16)|0;\r\n                        w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r1 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r2 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al1, bl2)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah1, bl2)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r3 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al1, bl3)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah1, bl3)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r4 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al1, bl4)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah1, bl4)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al1, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah1, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r5 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al1, bl5)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah1, bl5)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al1, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah1, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r6 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al1, bl6)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah1, bl6)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al1, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah1, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r7 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al1, bl7)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah1, bl7)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al1, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah1, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r8 = (w << 16) | (u & 0xffff);\r\n\r\n                        r9 = m;\r\n\r\n                        u = ((imul(al2, bl0)|0) + (r2 & 0xffff)|0) + (r10 & 0xffff)|0;\r\n                        v = ((imul(ah2, bl0)|0) + (r2 >>> 16)|0) + (r10 >>> 16)|0;\r\n                        w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r2 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al2, bl1)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah2, bl1)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r3 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al2, bl2)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah2, bl2)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r4 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al2, bl3)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah2, bl3)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r5 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al2, bl4)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah2, bl4)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al2, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah2, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r6 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al2, bl5)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah2, bl5)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al2, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah2, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r7 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al2, bl6)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah2, bl6)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al2, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah2, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r8 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al2, bl7)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah2, bl7)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al2, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah2, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r9 = (w << 16) | (u & 0xffff);\r\n\r\n                        r10 = m;\r\n\r\n                        u = ((imul(al3, bl0)|0) + (r3 & 0xffff)|0) + (r11 & 0xffff)|0;\r\n                        v = ((imul(ah3, bl0)|0) + (r3 >>> 16)|0) + (r11 >>> 16)|0;\r\n                        w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r3 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al3, bl1)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah3, bl1)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r4 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al3, bl2)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah3, bl2)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r5 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al3, bl3)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah3, bl3)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r6 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al3, bl4)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah3, bl4)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al3, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah3, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r7 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al3, bl5)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah3, bl5)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al3, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah3, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r8 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al3, bl6)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah3, bl6)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al3, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah3, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r9 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al3, bl7)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah3, bl7)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al3, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah3, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r10 = (w << 16) | (u & 0xffff);\r\n\r\n                        r11 = m;\r\n\r\n                        u = ((imul(al4, bl0)|0) + (r4 & 0xffff)|0) + (r12 & 0xffff)|0;\r\n                        v = ((imul(ah4, bl0)|0) + (r4 >>> 16)|0) + (r12 >>> 16)|0;\r\n                        w = ((imul(al4, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah4, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r4 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al4, bl1)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah4, bl1)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al4, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah4, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r5 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al4, bl2)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah4, bl2)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al4, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah4, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r6 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al4, bl3)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah4, bl3)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al4, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah4, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r7 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al4, bl4)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah4, bl4)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al4, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah4, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r8 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al4, bl5)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah4, bl5)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al4, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah4, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r9 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al4, bl6)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah4, bl6)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al4, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah4, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r10 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al4, bl7)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah4, bl7)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al4, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah4, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r11 = (w << 16) | (u & 0xffff);\r\n\r\n                        r12 = m;\r\n\r\n                        u = ((imul(al5, bl0)|0) + (r5 & 0xffff)|0) + (r13 & 0xffff)|0;\r\n                        v = ((imul(ah5, bl0)|0) + (r5 >>> 16)|0) + (r13 >>> 16)|0;\r\n                        w = ((imul(al5, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah5, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r5 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al5, bl1)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah5, bl1)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al5, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah5, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r6 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al5, bl2)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah5, bl2)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al5, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah5, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r7 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al5, bl3)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah5, bl3)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al5, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah5, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r8 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al5, bl4)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah5, bl4)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al5, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah5, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r9 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al5, bl5)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah5, bl5)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al5, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah5, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r10 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al5, bl6)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah5, bl6)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al5, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah5, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r11 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al5, bl7)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah5, bl7)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al5, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah5, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r12 = (w << 16) | (u & 0xffff);\r\n\r\n                        r13 = m;\r\n\r\n                        u = ((imul(al6, bl0)|0) + (r6 & 0xffff)|0) + (r14 & 0xffff)|0;\r\n                        v = ((imul(ah6, bl0)|0) + (r6 >>> 16)|0) + (r14 >>> 16)|0;\r\n                        w = ((imul(al6, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah6, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r6 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al6, bl1)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah6, bl1)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al6, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah6, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r7 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al6, bl2)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah6, bl2)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al6, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah6, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r8 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al6, bl3)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah6, bl3)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al6, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah6, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r9 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al6, bl4)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah6, bl4)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al6, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah6, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r10 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al6, bl5)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah6, bl5)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al6, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah6, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r11 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al6, bl6)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah6, bl6)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al6, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah6, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r12 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al6, bl7)|0) + (r13 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah6, bl7)|0) + (r13 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al6, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah6, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r13 = (w << 16) | (u & 0xffff);\r\n\r\n                        r14 = m;\r\n\r\n                        u = ((imul(al7, bl0)|0) + (r7 & 0xffff)|0) + (r15 & 0xffff)|0;\r\n                        v = ((imul(ah7, bl0)|0) + (r7 >>> 16)|0) + (r15 >>> 16)|0;\r\n                        w = ((imul(al7, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah7, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r7 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al7, bl1)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah7, bl1)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al7, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah7, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r8 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al7, bl2)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah7, bl2)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al7, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah7, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r9 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al7, bl3)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah7, bl3)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al7, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah7, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r10 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al7, bl4)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah7, bl4)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al7, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah7, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r11 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al7, bl5)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah7, bl5)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al7, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah7, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r12 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al7, bl6)|0) + (r13 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah7, bl6)|0) + (r13 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al7, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah7, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r13 = (w << 16) | (u & 0xffff);\r\n\r\n                        u = ((imul(al7, bl7)|0) + (r14 & 0xffff)|0) + (m & 0xffff)|0;\r\n                        v = ((imul(ah7, bl7)|0) + (r14 >>> 16)|0) + (m >>> 16)|0;\r\n                        w = ((imul(al7, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\r\n                        m = ((imul(ah7, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\r\n                        r14 = (w << 16) | (u & 0xffff);\r\n\r\n                        r15 = m;\r\n\r\n                        k = d+(i+j|0)|0;\r\n                        r = HEAP32[(Rk+k)>>2]|0;\r\n                        u = ((r & 0xffff) + ((r0 & 0xffff) << 1)|0) + c|0;\r\n                        w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                        c = w >>> 16;\r\n\r\n                        k = k+4|0;\r\n                        r = HEAP32[(Rk+k)>>2]|0;\r\n                        u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0) + c|0;\r\n                        w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                        c = w >>> 16;\r\n\r\n                        k = k+4|0;\r\n                        r = HEAP32[(Rk+k)>>2]|0;\r\n                        u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;\r\n                        w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                        c = w >>> 16;\r\n\r\n                        k = k+4|0;\r\n                        r = HEAP32[(Rk+k)>>2]|0;\r\n                        u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;\r\n                        w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                        c = w >>> 16;\r\n\r\n                        k = k+4|0;\r\n                        r = HEAP32[(Rk+k)>>2]|0;\r\n                        u = ((r & 0xffff) + ((r4 & 0xffff) << 1)|0) + c|0;\r\n                        w = ((r >>> 16) + ((r4 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                        c = w >>> 16;\r\n\r\n                        k = k+4|0;\r\n                        r = HEAP32[(Rk+k)>>2]|0;\r\n                        u = ((r & 0xffff) + ((r5 & 0xffff) << 1)|0) + c|0;\r\n                        w = ((r >>> 16) + ((r5 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                        c = w >>> 16;\r\n\r\n                        k = k+4|0;\r\n                        r = HEAP32[(Rk+k)>>2]|0;\r\n                        u = ((r & 0xffff) + ((r6 & 0xffff) << 1)|0) + c|0;\r\n                        w = ((r >>> 16) + ((r6 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                        c = w >>> 16;\r\n\r\n                        k = k+4|0;\r\n                        r = HEAP32[(Rk+k)>>2]|0;\r\n                        u = ((r & 0xffff) + ((r7 & 0xffff) << 1)|0) + c|0;\r\n                        w = ((r >>> 16) + ((r7 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                        c = w >>> 16;\r\n                    }\r\n\r\n                    k = d+(i+j|0)|0;\r\n                    r = HEAP32[(Rk+k)>>2]|0;\r\n                    u = (((r & 0xffff) + ((r8 & 0xffff) << 1)|0) + c|0) + h|0;\r\n                    w = ((r >>> 16) + ((r8 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                    c = w >>> 16;\r\n\r\n                    k = k+4|0;\r\n                    r = HEAP32[(Rk+k)>>2]|0;\r\n                    u = ((r & 0xffff) + ((r9 & 0xffff) << 1)|0) + c|0;\r\n                    w = ((r >>> 16) + ((r9 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                    c = w >>> 16;\r\n\r\n                    k = k+4|0;\r\n                    r = HEAP32[(Rk+k)>>2]|0;\r\n                    u = ((r & 0xffff) + ((r10 & 0xffff) << 1)|0) + c|0;\r\n                    w = ((r >>> 16) + ((r10 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                    c = w >>> 16;\r\n\r\n                    k = k+4|0;\r\n                    r = HEAP32[(Rk+k)>>2]|0;\r\n                    u = ((r & 0xffff) + ((r11 & 0xffff) << 1)|0) + c|0;\r\n                    w = ((r >>> 16) + ((r11 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                    c = w >>> 16;\r\n\r\n                    k = k+4|0;\r\n                    r = HEAP32[(Rk+k)>>2]|0;\r\n                    u = ((r & 0xffff) + ((r12 & 0xffff) << 1)|0) + c|0;\r\n                    w = ((r >>> 16) + ((r12 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                    c = w >>> 16;\r\n\r\n                    k = k+4|0;\r\n                    r = HEAP32[(Rk+k)>>2]|0;\r\n                    u = ((r & 0xffff) + ((r13 & 0xffff) << 1)|0) + c|0;\r\n                    w = ((r >>> 16) + ((r13 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                    c = w >>> 16;\r\n\r\n                    k = k+4|0;\r\n                    r = HEAP32[(Rk+k)>>2]|0;\r\n                    u = ((r & 0xffff) + ((r14 & 0xffff) << 1)|0) + c|0;\r\n                    w = ((r >>> 16) + ((r14 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                    c = w >>> 16;\r\n\r\n                    k = k+4|0;\r\n                    r = HEAP32[(Rk+k)>>2]|0;\r\n                    u = ((r & 0xffff) + ((r15 & 0xffff) << 1)|0) + c|0;\r\n                    w = ((r >>> 16) + ((r15 >>> 16) << 1)|0) + (u >>> 16)|0;\r\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                    h = w >>> 16;\r\n                }\r\n\r\n                for ( k = k+4|0; !!h & ( (k|0) < (dd<<1) ); k = (k+4)|0 ) { // carry propagation loop\r\n                    r = HEAP32[(Rk+k)>>2]|0;\r\n                    u = (r & 0xffff) + h|0;\r\n                    w = (r >>> 16) + (u >>> 16)|0;\r\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\r\n                    h = w >>> 16;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Conventional division\r\n     *\r\n     * @param A offset of the numerator, 32-byte aligned\r\n     * @param lA length of the numerator, multiple of 32\r\n     *\r\n     * @param B offset of the divisor, 32-byte aligned\r\n     * @param lB length of the divisor, multiple of 32\r\n     *\r\n     * @param R offset where to place the remainder to, 32-byte aligned\r\n     *\r\n     * @param Q offser where to place the quotient to, 32-byte aligned\r\n     */\r\n\r\n    function div ( N, lN, D, lD, Q ) {\r\n        N  =  N|0;\r\n        lN = lN|0\r\n        D  =  D|0;\r\n        lD = lD|0\r\n        Q  =  Q|0;\r\n\r\n        var n = 0, d = 0, e = 0,\r\n            u1 = 0, u0 = 0,\r\n            v0 = 0, vh = 0, vl = 0,\r\n            qh = 0, ql = 0, rh = 0, rl = 0,\r\n            t1 = 0, t2 = 0, m = 0, c = 0,\r\n            i = 0, j = 0, k = 0;\r\n\r\n        // number of significant limbs in `N` (multiplied by 4)\r\n        for ( i = (lN-1) & -4; (i|0) >= 0; i = (i-4)|0 ) {\r\n            n = HEAP32[(N+i)>>2]|0;\r\n            if ( n ) {\r\n                lN = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // number of significant limbs in `D` (multiplied by 4)\r\n        for ( i = (lD-1) & -4; (i|0) >= 0; i = (i-4)|0 ) {\r\n            d = HEAP32[(D+i)>>2]|0;\r\n            if ( d ) {\r\n                lD = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // `D` is zero? WTF?!\r\n\r\n        // calculate `e` — the power of 2 of the normalization factor\r\n        while ( (d & 0x80000000) == 0 ) {\r\n            d = d << 1;\r\n            e = e + 1|0;\r\n        }\r\n\r\n        // normalize `N` in place\r\n        u0 = HEAP32[(N+lN)>>2]|0;\r\n        if ( e ) {\r\n            u1 = u0>>>(32-e|0);\r\n            for ( i = (lN-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\r\n                n = HEAP32[(N+i)>>2]|0;\r\n                HEAP32[(N+i+4)>>2] = (u0 << e) | ( e ? n >>> (32-e|0) : 0 );\r\n                u0 = n;\r\n            }\r\n            HEAP32[N>>2] = u0 << e;\r\n        }\r\n\r\n        // normalize `D` in place\r\n        if ( e ) {\r\n            v0 = HEAP32[(D+lD)>>2]|0;\r\n            for ( i = (lD-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\r\n                d = HEAP32[(D+i)>>2]|0;\r\n                HEAP32[(D+i+4)>>2] = (v0 << e) | ( d >>> (32-e|0) );\r\n                v0 = d;\r\n            }\r\n            HEAP32[D>>2] = v0 << e;\r\n        }\r\n\r\n        // divisor parts won't change\r\n        v0 = HEAP32[(D+lD)>>2]|0;\r\n        vh = v0 >>> 16, vl = v0 & 0xffff;\r\n\r\n        // perform division\r\n        for ( i = lN; (i|0) >= (lD|0); i = (i-4)|0 ) {\r\n            j = (i-lD)|0;\r\n\r\n            // estimate high part of the quotient\r\n            u0 = HEAP32[(N+i)>>2]|0;\r\n            qh = ( (u1>>>0) / (vh>>>0) )|0, rh = ( (u1>>>0) % (vh>>>0) )|0, t1 = imul(qh, vl)|0;\r\n            while ( ( (qh|0) == 0x10000 ) | ( (t1>>>0) > (((rh << 16)|(u0 >>> 16))>>>0) ) ) {\r\n                qh = (qh-1)|0, rh = (rh+vh)|0, t1 = (t1-vl)|0;\r\n                if ( (rh|0) >= 0x10000 ) break;\r\n            }\r\n\r\n            // bulk multiply-and-subtract\r\n            // m - multiplication carry, c - subtraction carry\r\n            m = 0, c = 0;\r\n            for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\r\n                d = HEAP32[(D+k)>>2]|0;\r\n                t1 = (imul(qh, d & 0xffff)|0) + (m >>> 16)|0;\r\n                t2 = (imul(qh, d >>> 16)|0) + (t1 >>> 16)|0;\r\n                d = (m & 0xffff) | (t1 << 16);\r\n                m = t2;\r\n                n = HEAP32[(N+j+k)>>2]|0;\r\n                t1 = ((n & 0xffff) - (d & 0xffff)|0) + c|0;\r\n                t2 = ((n >>> 16) - (d >>> 16)|0) + (t1 >> 16)|0;\r\n                HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);\r\n                c = t2 >> 16;\r\n            }\r\n            t1 = ((u1 & 0xffff) - (m & 0xffff)|0) + c|0;\r\n            t2 = ((u1 >>> 16) - (m >>> 16)|0) + (t1 >> 16)|0;\r\n            u1 = (t2 << 16) | (t1 & 0xffff);\r\n            c = t2 >> 16;\r\n\r\n            // add `D` back if got carry-out\r\n            if ( c ) {\r\n                qh = (qh-1)|0;\r\n                c = 0;\r\n                for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\r\n                    d = HEAP32[(D+k)>>2]|0;\r\n                    n = HEAP32[(N+j+k)>>2]|0;\r\n                    t1 = (n & 0xffff) + c|0;\r\n                    t2 = (n >>> 16) + d + (t1 >>> 16)|0;\r\n                    HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);\r\n                    c = t2 >>> 16;\r\n                }\r\n                u1 = (u1+c)|0;\r\n            }\r\n\r\n            // estimate low part of the quotient\r\n            u0 = HEAP32[(N+i)>>2]|0;\r\n            n = (u1 << 16) | (u0 >>> 16);\r\n            ql = ( (n>>>0) / (vh>>>0) )|0, rl = ( (n>>>0) % (vh>>>0) )|0, t1 = imul(ql, vl)|0;\r\n            while ( ( (ql|0) == 0x10000 ) | ( (t1>>>0) > (((rl << 16)|(u0 & 0xffff))>>>0) ) ) {\r\n                ql = (ql-1)|0, rl = (rl+vh)|0, t1 = (t1-vl)|0;\r\n                if ( (rl|0) >= 0x10000 ) break;\r\n            }\r\n\r\n            // bulk multiply-and-subtract\r\n            // m - multiplication carry, c - subtraction carry\r\n            m = 0, c = 0;\r\n            for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\r\n                d = HEAP32[(D+k)>>2]|0;\r\n                t1 = (imul(ql, d & 0xffff)|0) + (m & 0xffff)|0;\r\n                t2 = ((imul(ql, d >>> 16)|0) + (t1 >>> 16)|0) + (m >>> 16)|0;\r\n                d = (t1 & 0xffff) | (t2 << 16);\r\n                m = t2 >>> 16;\r\n                n = HEAP32[(N+j+k)>>2]|0;\r\n                t1 = ((n & 0xffff) - (d & 0xffff)|0) + c|0;\r\n                t2 = ((n >>> 16) - (d >>> 16)|0) + (t1 >> 16)|0;\r\n                c = t2 >> 16;\r\n                HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);\r\n            }\r\n            t1 = ((u1 & 0xffff) - (m & 0xffff)|0) + c|0;\r\n            t2 = ((u1 >>> 16) - (m >>> 16)|0) + (t1 >> 16)|0;\r\n            c = t2 >> 16;\r\n\r\n            // add `D` back if got carry-out\r\n            if ( c ) {\r\n                ql = (ql-1)|0;\r\n                c = 0;\r\n                for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\r\n                    d = HEAP32[(D+k)>>2]|0;\r\n                    n = HEAP32[(N+j+k)>>2]|0;\r\n                    t1 = ((n & 0xffff) + (d & 0xffff)|0) + c|0;\r\n                    t2 = ((n >>> 16) + (d >>> 16)|0) + (t1 >>> 16)|0;\r\n                    c = t2 >>> 16;\r\n                    HEAP32[(N+j+k)>>2] = (t1 & 0xffff) | (t2 << 16);\r\n                }\r\n            }\r\n\r\n            // got quotient limb\r\n            HEAP32[(Q+j)>>2] = (qh << 16) | ql;\r\n\r\n            u1 = HEAP32[(N+i)>>2]|0;\r\n        }\r\n\r\n        if ( e ) {\r\n            // TODO denormalize `D` in place\r\n\r\n            // denormalize `N` in place\r\n            u0 = HEAP32[N>>2]|0;\r\n            for ( i = 4; (i|0) <= (lD|0); i = (i+4)|0 ) {\r\n                n = HEAP32[(N+i)>>2]|0;\r\n                HEAP32[(N+i-4)>>2] = ( n << (32-e|0) ) | (u0 >>> e);\r\n                u0 = n;\r\n            }\r\n            HEAP32[(N+lD)>>2] = u0 >>> e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Montgomery modular reduction\r\n     *\r\n     * Definition:\r\n     *\r\n     *  MREDC(A) = A × X (mod N),\r\n     *  M × X = N × Y + 1,\r\n     *\r\n     * where M = 2^(32*m) such that N < M and A < N×M\r\n     *\r\n     * Numbers `X` and `Y` can be calculated using Extended Euclidean Algorithm.\r\n     */\r\n    function mredc ( A, lA, N, lN, y, R ) {\r\n        A  =  A|0;\r\n        lA = lA|0;\r\n        N  =  N|0;\r\n        lN = lN|0;\r\n        y  =  y|0;\r\n        R  =  R|0;\r\n\r\n        var T = 0,\r\n            c = 0, uh = 0, ul = 0, vl = 0, vh = 0, w0 = 0, w1 = 0, w2 = 0, r0 = 0, r1 = 0,\r\n            i = 0, j = 0, k = 0;\r\n\r\n        T = salloc(lN<<1)|0;\r\n        z(lN<<1, 0, T);\r\n\r\n        cp( lA, A, T );\r\n\r\n        // HAC 14.32\r\n        for ( i = 0; (i|0) < (lN|0); i = (i+4)|0 ) {\r\n            uh = HEAP32[(T+i)>>2]|0, ul = uh & 0xffff, uh = uh >>> 16;\r\n            vh = y >>> 16, vl = y & 0xffff;\r\n            w0 = imul(ul,vl)|0, w1 = ( (imul(ul,vh)|0) + (imul(uh,vl)|0) | 0 ) + (w0 >>> 16) | 0;\r\n            ul = w0 & 0xffff, uh = w1 & 0xffff;\r\n            r1 = 0;\r\n            for ( j = 0; (j|0) < (lN|0); j = (j+4)|0 ) {\r\n                k = (i+j)|0;\r\n                vh = HEAP32[(N+j)>>2]|0, vl = vh & 0xffff, vh = vh >>> 16;\r\n                r0 = HEAP32[(T+k)>>2]|0;\r\n                w0 = ((imul(ul, vl)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;\r\n                w1 = ((imul(ul, vh)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;\r\n                w2 = ((imul(uh, vl)|0) + (w1 & 0xffff)|0) + (w0 >>> 16)|0;\r\n                r1 = ((imul(uh, vh)|0) + (w2 >>> 16)|0) + (w1 >>> 16)|0;\r\n                r0 = (w2 << 16) | (w0 & 0xffff);\r\n                HEAP32[(T+k)>>2] = r0;\r\n            }\r\n            k = (i+j)|0;\r\n            r0 = HEAP32[(T+k)>>2]|0;\r\n            w0 = ((r0 & 0xffff) + (r1 & 0xffff)|0) + c|0;\r\n            w1 = ((r0 >>> 16) + (r1 >>> 16)|0) + (w0 >>> 16)|0;\r\n            HEAP32[(T+k)>>2] = (w1 << 16) | (w0 & 0xffff);\r\n            c = w1 >>> 16;\r\n        }\r\n\r\n        cp( lN, (T+lN)|0, R );\r\n\r\n        sfree(lN<<1);\r\n\r\n        if ( c | ( (cmp( N, lN, R, lN )|0) <= 0 ) ) {\r\n            sub( R, lN, N, lN, R, lN )|0;\r\n        }\r\n    }\r\n\r\n    return {\r\n        sreset: sreset,\r\n        salloc: salloc,\r\n        sfree:  sfree,\r\n        z: z,\r\n        tst: tst,\r\n        neg: neg,\r\n        cmp: cmp,\r\n        add: add,\r\n        sub: sub,\r\n        mul: mul,\r\n        sqr: sqr,\r\n        div: div,\r\n        mredc: mredc\r\n    };\r\n}\r\n","import {bigint_asm} from './bigint.asm';\r\nimport {is_buffer, is_bytes, is_number, is_string, string_to_bytes} from '../utils';\r\nimport {IllegalArgumentError} from '../errors';\r\n\r\nexport function is_big_number ( a ) {\r\n    return ( a instanceof BigNumber_constructor );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nexport var _bigint_stdlib = { Uint32Array: Uint32Array, Math: Math };\r\nexport var _bigint_heap = new Uint32Array(0x100000);\r\nexport var _bigint_asm;\r\n\r\nfunction _half_imul ( a, b ) {\r\n    return a * b | 0;\r\n}\r\n\r\nif ( _bigint_stdlib.Math.imul === undefined ) {\r\n    _bigint_stdlib.Math.imul = _half_imul;\r\n    _bigint_asm = bigint_asm( _bigint_stdlib, null, _bigint_heap.buffer );\r\n    delete _bigint_stdlib.Math.imul;\r\n}\r\nelse {\r\n    _bigint_asm = bigint_asm( _bigint_stdlib, null, _bigint_heap.buffer );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nvar _BigNumber_ZERO_limbs = new Uint32Array(0);\r\n\r\nexport function BigNumber_constructor (num ) {\r\n    var limbs = _BigNumber_ZERO_limbs,\r\n        bitlen = 0,\r\n        sign = 0;\r\n\r\n    if ( is_string(num) )\r\n        num = string_to_bytes(num);\r\n\r\n    if ( is_buffer(num) )\r\n        num = new Uint8Array(num);\r\n\r\n    if ( num === undefined ) {\r\n        // do nothing\r\n    }\r\n    else if ( is_number(num) ) {\r\n        var absnum = Math.abs(num);\r\n        if ( absnum > 0xffffffff ) {\r\n            limbs = new Uint32Array(2);\r\n            limbs[0] = absnum|0;\r\n            limbs[1] = (absnum/0x100000000)|0;\r\n            bitlen = 52;\r\n        }\r\n        else if ( absnum > 0 ) {\r\n            limbs = new Uint32Array(1);\r\n            limbs[0] = absnum;\r\n            bitlen = 32;\r\n        }\r\n        else {\r\n            limbs = _BigNumber_ZERO_limbs;\r\n            bitlen = 0;\r\n        }\r\n        sign = num < 0 ? -1 : 1;\r\n    }\r\n    else if ( is_bytes(num) ) {\r\n        for ( var i = 0; !num[i]; i++ );\r\n\r\n        bitlen = ( num.length - i ) * 8;\r\n        if ( !bitlen )\r\n            return BigNumber_ZERO;\r\n\r\n        limbs = new Uint32Array( (bitlen + 31) >> 5 );\r\n        for ( var j = num.length-4; j >= i ; j -= 4 ) {\r\n            limbs[(num.length-4-j)>>2] = (num[j] << 24) | (num[j+1] << 16) | (num[j+2] << 8) | num[j+3];\r\n        }\r\n        if ( i-j === 3 ) {\r\n            limbs[limbs.length-1] = num[i];\r\n        }\r\n        else if ( i-j === 2 ) {\r\n            limbs[limbs.length-1] = (num[i] << 8) | num[i+1];\r\n        }\r\n        else if ( i-j === 1 ) {\r\n            limbs[limbs.length-1] = (num[i] << 16) | (num[i+1] << 8) | num[i+2];\r\n        }\r\n\r\n        sign = 1;\r\n    }\r\n    else if ( typeof num === 'object' && num !== null ) {\r\n        limbs = new Uint32Array( num.limbs );\r\n        bitlen = num.bitLength;\r\n        sign = num.sign;\r\n    }\r\n    else {\r\n        throw new TypeError(\"number is of unexpected type\");\r\n    }\r\n\r\n    this.limbs = limbs;\r\n    this.bitLength = bitlen;\r\n    this.sign = sign;\r\n}\r\n\r\nfunction BigNumber_toString ( radix ) {\r\n    radix = radix || 16;\r\n\r\n    var limbs = this.limbs,\r\n        bitlen = this.bitLength,\r\n        str = '';\r\n\r\n    if ( radix === 16 ) {\r\n        // FIXME clamp last limb to (bitlen % 32)\r\n        for ( var i = (bitlen+31>>5)-1; i >= 0; i-- ) {\r\n            var h = limbs[i].toString(16);\r\n            str += '00000000'.substr(h.length);\r\n            str += h;\r\n        }\r\n\r\n        str = str.replace( /^0+/, '' );\r\n\r\n        if ( !str.length )\r\n            str = '0';\r\n    }\r\n    else {\r\n        throw new IllegalArgumentError(\"bad radix\");\r\n    }\r\n\r\n    if ( this.sign < 0 )\r\n        str = '-' + str;\r\n\r\n    return str;\r\n}\r\n\r\nfunction BigNumber_toBytes () {\r\n    var bitlen = this.bitLength,\r\n        limbs = this.limbs;\r\n\r\n    if ( bitlen === 0 )\r\n        return new Uint8Array(0);\r\n\r\n    var bytelen = ( bitlen + 7 ) >> 3,\r\n        bytes = new Uint8Array(bytelen);\r\n    for ( var i = 0; i < bytelen; i++ ) {\r\n        var j = bytelen - i - 1;\r\n        bytes[i] = limbs[j>>2] >> ( (j & 3) << 3 );\r\n    }\r\n\r\n    return bytes;\r\n}\r\n\r\n// Downgrade to Number\r\nfunction BigNumber_valueOf () {\r\n    var limbs = this.limbs,\r\n        bits = this.bitLength,\r\n        sign = this.sign;\r\n\r\n    if ( !sign )\r\n        return 0;\r\n\r\n    if ( bits <= 32 )\r\n        return sign * (limbs[0]>>>0);\r\n\r\n    if ( bits <= 52 )\r\n        return sign * ( 0x100000000 * (limbs[1]>>>0) + (limbs[0]>>>0) );\r\n\r\n    // normalization\r\n    var i, l, e = 0;\r\n    for ( i = limbs.length-1; i >= 0; i-- ) {\r\n        if ( (l = limbs[i]) === 0 ) continue;\r\n        while ( ( (l << e) & 0x80000000 ) === 0 ) e++;\r\n        break;\r\n    }\r\n\r\n    if ( i === 0 )\r\n        return sign * (limbs[0]>>>0);\r\n\r\n    return sign * ( 0x100000 * (( (limbs[i] << e) | ( e ? limbs[i-1] >>> (32-e) : 0 ) )>>>0)\r\n                             + (( (limbs[i-1] << e) | ( e && i > 1 ? limbs[i-2] >>> (32-e) : 0 ) )>>>12)\r\n                  ) * Math.pow( 2, 32*i-e-52 );\r\n}\r\n\r\nfunction BigNumber_clamp ( b ) {\r\n    var limbs = this.limbs,\r\n        bitlen = this.bitLength;\r\n\r\n    // FIXME check b is number and in a valid range\r\n\r\n    if ( b >= bitlen )\r\n        return this;\r\n\r\n    var clamped = new BigNumber_constructor,\r\n        n = (b + 31) >> 5,\r\n        k = b % 32;\r\n\r\n    clamped.limbs = new Uint32Array( limbs.subarray(0,n) );\r\n    clamped.bitLength = b;\r\n    clamped.sign = this.sign;\r\n\r\n    if ( k ) clamped.limbs[n-1] &= (-1 >>> (32-k));\r\n\r\n    return clamped;\r\n}\r\n\r\nfunction BigNumber_slice ( f, b ) {\r\n    if ( !is_number(f) )\r\n        throw new TypeError(\"TODO\");\r\n\r\n    if ( b !== undefined && !is_number(b) )\r\n        throw new TypeError(\"TODO\");\r\n\r\n    var limbs = this.limbs,\r\n        bitlen = this.bitLength;\r\n\r\n    if ( f < 0 )\r\n        throw new RangeError(\"TODO\");\r\n\r\n    if ( f >= bitlen )\r\n        return BigNumber_ZERO;\r\n\r\n    if ( b === undefined || b > bitlen - f )\r\n        b = bitlen - f;\r\n\r\n    var sliced = new BigNumber_constructor, slimbs,\r\n        n = f >> 5, m = (f + b + 31) >> 5, l = (b + 31) >> 5,\r\n        t = f % 32, k = b % 32;\r\n\r\n    slimbs = new Uint32Array(l);\r\n    if ( t ) {\r\n        for ( var i = 0; i < m-n-1; i++ ) {\r\n            slimbs[i] = (limbs[n+i]>>>t) | ( limbs[n+i+1]<<(32-t) );\r\n        }\r\n        slimbs[i] = limbs[n+i]>>>t;\r\n    }\r\n    else {\r\n        slimbs.set( limbs.subarray(n, m) );\r\n    }\r\n\r\n    if ( k ) {\r\n        slimbs[l-1] &= (-1 >>> (32-k));\r\n    }\r\n\r\n    sliced.limbs = slimbs\r\n    sliced.bitLength = b;\r\n    sliced.sign = this.sign;\r\n\r\n    return sliced;\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction BigNumber_negate () {\r\n    var negative = new BigNumber_constructor;\r\n\r\n    negative.limbs = this.limbs;\r\n    negative.bitLength = this.bitLength;\r\n    negative.sign = -1 * this.sign;\r\n\r\n    return negative;\r\n}\r\n\r\nfunction BigNumber_compare ( that ) {\r\n    if ( !is_big_number(that) )\r\n        that = new BigNumber_constructor(that);\r\n\r\n    var alimbs = this.limbs, alimbcnt = alimbs.length,\r\n        blimbs = that.limbs, blimbcnt = blimbs.length,\r\n        z = 0;\r\n\r\n    if ( this.sign < that.sign )\r\n        return -1;\r\n\r\n    if ( this.sign > that.sign )\r\n        return 1;\r\n\r\n    _bigint_heap.set( alimbs, 0 );\r\n    _bigint_heap.set( blimbs, alimbcnt );\r\n    z = _bigint_asm.cmp( 0, alimbcnt<<2, alimbcnt<<2, blimbcnt<<2 );\r\n\r\n    return z * this.sign;\r\n}\r\n\r\nfunction BigNumber_add ( that ) {\r\n    if ( !is_big_number(that) )\r\n        that = new BigNumber_constructor(that);\r\n\r\n    if ( !this.sign )\r\n        return that;\r\n\r\n    if ( !that.sign )\r\n        return this;\r\n\r\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, asign = this.sign,\r\n        bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length, bsign = that.sign,\r\n        rbitlen, rlimbcnt, rsign, rof, result = new BigNumber_constructor;\r\n\r\n    rbitlen = ( abitlen > bbitlen ? abitlen : bbitlen ) + ( asign * bsign > 0 ? 1 : 0 );\r\n    rlimbcnt = ( rbitlen + 31 ) >> 5;\r\n\r\n    _bigint_asm.sreset();\r\n\r\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\r\n        pB = _bigint_asm.salloc( blimbcnt<<2 ),\r\n        pR = _bigint_asm.salloc( rlimbcnt<<2 );\r\n\r\n    _bigint_asm.z( pR-pA+(rlimbcnt<<2), 0, pA );\r\n\r\n    _bigint_heap.set( alimbs, pA>>2 );\r\n    _bigint_heap.set( blimbs, pB>>2 );\r\n\r\n    if ( asign * bsign > 0 ) {\r\n        _bigint_asm.add( pA, alimbcnt<<2, pB, blimbcnt<<2, pR, rlimbcnt<<2 );\r\n        rsign = asign;\r\n    }\r\n    else if ( asign > bsign ) {\r\n        rof = _bigint_asm.sub( pA, alimbcnt<<2, pB, blimbcnt<<2, pR, rlimbcnt<<2 );\r\n        rsign = rof ? bsign : asign;\r\n    }\r\n    else {\r\n        rof = _bigint_asm.sub( pB, blimbcnt<<2, pA, alimbcnt<<2, pR, rlimbcnt<<2 );\r\n        rsign = rof ? asign : bsign;\r\n    }\r\n\r\n    if ( rof )\r\n        _bigint_asm.neg( pR, rlimbcnt<<2, pR, rlimbcnt<<2 );\r\n\r\n    if ( _bigint_asm.tst( pR, rlimbcnt<<2 ) === 0 )\r\n        return BigNumber_ZERO;\r\n\r\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+rlimbcnt ) );\r\n    result.bitLength = rbitlen;\r\n    result.sign = rsign;\r\n\r\n    return result;\r\n}\r\n\r\nfunction BigNumber_subtract ( that ) {\r\n    if ( !is_big_number(that) )\r\n        that = new BigNumber_constructor(that);\r\n\r\n    return this.add( that.negate() );\r\n}\r\n\r\nfunction BigNumber_multiply ( that ) {\r\n    if ( !is_big_number(that) )\r\n        that = new BigNumber_constructor(that);\r\n\r\n    if ( !this.sign || !that.sign )\r\n        return BigNumber_ZERO;\r\n\r\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length,\r\n        bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length,\r\n        rbitlen, rlimbcnt, result = new BigNumber_constructor;\r\n\r\n    rbitlen = abitlen + bbitlen;\r\n    rlimbcnt = ( rbitlen + 31 ) >> 5;\r\n\r\n    _bigint_asm.sreset();\r\n\r\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\r\n        pB = _bigint_asm.salloc( blimbcnt<<2 ),\r\n        pR = _bigint_asm.salloc( rlimbcnt<<2 );\r\n\r\n    _bigint_asm.z( pR-pA+(rlimbcnt<<2), 0, pA );\r\n\r\n    _bigint_heap.set( alimbs, pA>>2 );\r\n    _bigint_heap.set( blimbs, pB>>2 );\r\n\r\n    _bigint_asm.mul( pA, alimbcnt<<2, pB, blimbcnt<<2, pR, rlimbcnt<<2 );\r\n\r\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+rlimbcnt ) );\r\n    result.sign = this.sign * that.sign;\r\n    result.bitLength = rbitlen;\r\n\r\n    return result;\r\n}\r\n\r\nfunction BigNumber_square () {\r\n    if ( !this.sign )\r\n        return BigNumber_ZERO;\r\n\r\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length,\r\n        rbitlen, rlimbcnt, result = new BigNumber_constructor;\r\n\r\n    rbitlen = abitlen << 1;\r\n    rlimbcnt = ( rbitlen + 31 ) >> 5;\r\n\r\n    _bigint_asm.sreset();\r\n\r\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\r\n        pR = _bigint_asm.salloc( rlimbcnt<<2 );\r\n\r\n    _bigint_asm.z( pR-pA+(rlimbcnt<<2), 0, pA );\r\n\r\n    _bigint_heap.set( alimbs, pA>>2 );\r\n\r\n    _bigint_asm.sqr( pA, alimbcnt<<2, pR );\r\n\r\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+rlimbcnt ) );\r\n    result.bitLength = rbitlen;\r\n    result.sign = 1;\r\n\r\n    return result;\r\n}\r\n\r\nfunction BigNumber_divide ( that ) {\r\n    if ( !is_big_number(that) )\r\n        that = new BigNumber_constructor(that);\r\n\r\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length,\r\n        bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length,\r\n        qlimbcnt, rlimbcnt, quotient = BigNumber_ZERO, remainder = BigNumber_ZERO;\r\n\r\n    _bigint_asm.sreset();\r\n\r\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\r\n        pB = _bigint_asm.salloc( blimbcnt<<2 ),\r\n        pQ = _bigint_asm.salloc( alimbcnt<<2 );\r\n\r\n    _bigint_asm.z( pQ-pA+(alimbcnt<<2), 0, pA );\r\n\r\n    _bigint_heap.set( alimbs, pA>>2 );\r\n    _bigint_heap.set( blimbs, pB>>2 );\r\n\r\n    _bigint_asm.div( pA, alimbcnt<<2, pB, blimbcnt<<2, pQ );\r\n\r\n    qlimbcnt = _bigint_asm.tst( pQ, alimbcnt<<2 )>>2;\r\n    if ( qlimbcnt ) {\r\n        quotient = new BigNumber_constructor;\r\n        quotient.limbs = new Uint32Array( _bigint_heap.subarray( pQ>>2, (pQ>>2)+qlimbcnt ) );\r\n        quotient.bitLength = abitlen < (qlimbcnt<<5) ? abitlen : (qlimbcnt<<5);\r\n        quotient.sign = this.sign * that.sign;\r\n    }\r\n\r\n    rlimbcnt = _bigint_asm.tst( pA, blimbcnt<<2 )>>2;\r\n    if ( rlimbcnt ) {\r\n        remainder = new BigNumber_constructor;\r\n        remainder.limbs = new Uint32Array( _bigint_heap.subarray( pA>>2, (pA>>2)+rlimbcnt ) );;\r\n        remainder.bitLength = bbitlen < (rlimbcnt<<5) ? bbitlen : (rlimbcnt<<5);\r\n        remainder.sign = this.sign;\r\n    }\r\n\r\n    return {\r\n        quotient: quotient,\r\n        remainder: remainder\r\n    };\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nvar BigNumberPrototype = BigNumber_constructor.prototype = new Number;\r\nBigNumberPrototype.toString = BigNumber_toString;\r\nBigNumberPrototype.toBytes = BigNumber_toBytes;\r\nBigNumberPrototype.valueOf = BigNumber_valueOf;\r\nBigNumberPrototype.clamp = BigNumber_clamp;\r\nBigNumberPrototype.slice = BigNumber_slice;\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nBigNumberPrototype.negate = BigNumber_negate;\r\nBigNumberPrototype.compare = BigNumber_compare;\r\nBigNumberPrototype.add = BigNumber_add;\r\nBigNumberPrototype.subtract = BigNumber_subtract;\r\nBigNumberPrototype.multiply = BigNumber_multiply;\r\nBigNumberPrototype.square = BigNumber_square;\r\nBigNumberPrototype.divide = BigNumber_divide;\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nexport var BigNumber_ZERO = new BigNumber_constructor(0);\r\nexport var BigNumber_ONE  = new BigNumber_constructor(1);\r\n\r\nObject.freeze(BigNumber_ZERO);\r\nObject.freeze(BigNumber_ONE);\r\n","import {BigNumber_constructor, BigNumber_ONE, BigNumber_ZERO, is_big_number} from './bignum';\r\n\r\nexport function Number_extGCD (a, b ) {\r\n    var sa = ( a < 0 ) ? -1 : 1,\r\n        sb = ( b < 0 ) ? -1 : 1,\r\n        xi = 1, xj = 0,\r\n        yi = 0, yj = 1,\r\n        r, q, t, a_cmp_b;\r\n\r\n    a *= sa;\r\n    b *= sb;\r\n\r\n    a_cmp_b = ( a < b );\r\n    if ( a_cmp_b ) {\r\n        t = a; a = b, b = t;\r\n        t = sa; sa = sb; sb = t;\r\n    }\r\n\r\n    q = Math.floor( a / b ), r = a - q*b;\r\n    while ( r ) {\r\n        t = xi - q*xj, xi = xj, xj = t;\r\n        t = yi - q*yj, yi = yj, yj = t;\r\n        a = b, b = r;\r\n\r\n        q = Math.floor( a / b ), r = a - q*b;\r\n    }\r\n\r\n    xj *= sa;\r\n    yj *= sb;\r\n\r\n    if ( a_cmp_b ) {\r\n        t = xj; xj = yj, yj = t;\r\n    }\r\n\r\n    return {\r\n        gcd: b,\r\n        x: xj,\r\n        y: yj\r\n    };\r\n}\r\n\r\nexport function BigNumber_extGCD ( a, b ) {\r\n    if ( !is_big_number(a) )\r\n        a = new BigNumber_constructor(a);\r\n\r\n    if ( !is_big_number(b) )\r\n        b = new BigNumber_constructor(b);\r\n\r\n    var sa = a.sign, sb = b.sign;\r\n\r\n    if ( sa < 0 )\r\n        a = a.negate();\r\n\r\n    if ( sb < 0 )\r\n        b = b.negate();\r\n\r\n    var a_cmp_b = a.compare(b);\r\n    if ( a_cmp_b < 0 ) {\r\n        var t = a; a = b, b = t;\r\n        t = sa; sa = sb; sb = t;\r\n    }\r\n\r\n    var xi = BigNumber_ONE, xj = BigNumber_ZERO, lx = b.bitLength,\r\n        yi = BigNumber_ZERO, yj = BigNumber_ONE, ly = a.bitLength,\r\n        z, r, q;\r\n\r\n    z = a.divide(b);\r\n    while ( (r = z.remainder) !== BigNumber_ZERO ) {\r\n        q = z.quotient;\r\n\r\n        z = xi.subtract( q.multiply(xj).clamp(lx) ).clamp(lx), xi = xj, xj = z;\r\n        z = yi.subtract( q.multiply(yj).clamp(ly) ).clamp(ly), yi = yj, yj = z;\r\n\r\n        a = b, b = r;\r\n\r\n        z = a.divide(b);\r\n    }\r\n\r\n    if ( sa < 0 )\r\n        xj = xj.negate();\r\n\r\n    if ( sb < 0 )\r\n        yj = yj.negate();\r\n\r\n    if ( a_cmp_b < 0 ) {\r\n        var t = xj; xj = yj, yj = t;\r\n    }\r\n\r\n    return {\r\n        gcd: b,\r\n        x: xj,\r\n        y: yj\r\n    };\r\n}\r\n","import {BigNumber_constructor, is_big_number} from './bignum';\r\nimport {BigNumber_extGCD, Number_extGCD} from './extgcd';\r\nimport {_bigint_asm, _bigint_heap} from './bignum'\r\n\r\n/**\r\n * Modulus\r\n */\r\nexport function Modulus () {\r\n    BigNumber_constructor.apply( this, arguments );\r\n\r\n    if ( this.valueOf() < 1 )\r\n        throw new RangeError();\r\n\r\n    if ( this.bitLength <= 32 )\r\n        return;\r\n\r\n    var comodulus;\r\n\r\n    if ( this.limbs[0] & 1 ) {\r\n        var bitlen = ( (this.bitLength+31) & -32 ) + 1, limbs = new Uint32Array( (bitlen+31) >> 5 );\r\n        limbs[limbs.length-1] = 1;\r\n        comodulus = new BigNumber_constructor();\r\n        comodulus.sign = 1;\r\n        comodulus.bitLength = bitlen;\r\n        comodulus.limbs = limbs;\r\n\r\n        var k = Number_extGCD( 0x100000000, this.limbs[0] ).y;\r\n        this.coefficient = k < 0 ? -k : 0x100000000-k;\r\n    }\r\n    else {\r\n        /**\r\n         * TODO even modulus reduction\r\n         * Modulus represented as `N = 2^U * V`, where `V` is odd and thus `GCD(2^U, V) = 1`.\r\n         * Calculation `A = TR' mod V` is made as for odd modulo using Montgomery method.\r\n         * Calculation `B = TR' mod 2^U` is easy as modulus is a power of 2.\r\n         * Using Chinese Remainder Theorem and Garner's Algorithm restore `TR' mod N` from `A` and `B`.\r\n         */\r\n        return;\r\n    }\r\n\r\n    this.comodulus = comodulus;\r\n    this.comodulusRemainder = comodulus.divide(this).remainder;\r\n    this.comodulusRemainderSquare = comodulus.square().divide(this).remainder;\r\n}\r\n\r\n/**\r\n * Modular reduction\r\n */\r\nfunction Modulus_reduce ( a ) {\r\n    if ( !is_big_number(a) )\r\n        a = new BigNumber_constructor(a);\r\n\r\n    if ( a.bitLength <= 32 && this.bitLength <= 32 )\r\n        return new BigNumber_constructor( a.valueOf() % this.valueOf() );\r\n\r\n    if ( a.compare(this) < 0 )\r\n        return a;\r\n\r\n    return a.divide(this).remainder;\r\n}\r\n\r\n/**\r\n * Modular inverse\r\n */\r\nfunction Modulus_inverse ( a ) {\r\n    a = this.reduce(a);\r\n\r\n    var r = BigNumber_extGCD( this, a );\r\n    if ( r.gcd.valueOf() !== 1 ) return null;\r\n\r\n    r = r.y;\r\n    if ( r.sign < 0 ) r = r.add(this).clamp(this.bitLength);\r\n\r\n    return r;\r\n}\r\n\r\n/**\r\n * Modular exponentiation\r\n */\r\nfunction Modulus_power ( g, e ) {\r\n    if ( !is_big_number(g) )\r\n        g = new BigNumber_constructor(g);\r\n\r\n    if ( !is_big_number(e) )\r\n        e = new BigNumber_constructor(e);\r\n\r\n    // count exponent set bits\r\n    var c = 0;\r\n    for ( var i = 0; i < e.limbs.length; i++ ) {\r\n        var t = e.limbs[i];\r\n        while ( t ) {\r\n            if ( t & 1 ) c++;\r\n            t >>>= 1;\r\n        }\r\n    }\r\n\r\n    // window size parameter\r\n    var k = 8;\r\n    if ( e.bitLength <= 4536 ) k = 7;\r\n    if ( e.bitLength <= 1736 ) k = 6;\r\n    if ( e.bitLength <= 630 ) k = 5;\r\n    if ( e.bitLength <= 210 ) k = 4;\r\n    if ( e.bitLength <= 60 ) k = 3;\r\n    if ( e.bitLength <= 12 ) k = 2;\r\n    if ( c <= (1 << (k-1)) ) k = 1;\r\n\r\n    // montgomerize base\r\n    g = _Montgomery_reduce( this.reduce(g).multiply(this.comodulusRemainderSquare), this );\r\n\r\n    // precompute odd powers\r\n    var g2 = _Montgomery_reduce( g.square(), this ),\r\n        gn = new Array( 1 << (k-1) );\r\n    gn[0] = g;\r\n    gn[1] = _Montgomery_reduce( g.multiply(g2), this );\r\n    for ( var i = 2; i < (1 << (k-1)); i++ ) {\r\n        gn[i] = _Montgomery_reduce( gn[i-1].multiply(g2), this );\r\n    }\r\n\r\n    // perform exponentiation\r\n    var u = this.comodulusRemainder,\r\n        r = u;\r\n    for ( var i = e.limbs.length-1; i >= 0; i-- ) {\r\n        var t = e.limbs[i];\r\n        for ( var j = 32; j > 0; ) {\r\n            if ( t & 0x80000000 ) {\r\n                var n = t >>> (32-k), l = k;\r\n                while ( (n & 1) === 0 ) { n >>>= 1; l--; }\r\n                var m = gn[n>>>1];\r\n                while ( n ) { n >>>= 1; if ( r !== u ) r = _Montgomery_reduce( r.square(), this ); }\r\n                r = ( r !== u ) ? _Montgomery_reduce( r.multiply(m), this ) : m;\r\n                t <<= l, j -= l;\r\n            }\r\n            else {\r\n                if ( r !== u ) r = _Montgomery_reduce( r.square(), this );\r\n                t <<= 1, j--;\r\n            }\r\n        }\r\n    }\r\n\r\n    // de-montgomerize result\r\n    r = _Montgomery_reduce( r, this );\r\n\r\n    return r;\r\n}\r\n\r\nfunction _Montgomery_reduce ( a, n ) {\r\n    var alimbs = a.limbs, alimbcnt = alimbs.length,\r\n        nlimbs = n.limbs, nlimbcnt = nlimbs.length,\r\n        y = n.coefficient;\r\n\r\n    _bigint_asm.sreset();\r\n\r\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\r\n        pN = _bigint_asm.salloc( nlimbcnt<<2 ),\r\n        pR = _bigint_asm.salloc( nlimbcnt<<2 );\r\n\r\n    _bigint_asm.z( pR-pA+(nlimbcnt<<2), 0, pA );\r\n\r\n    _bigint_heap.set( alimbs, pA>>2 );\r\n    _bigint_heap.set( nlimbs, pN>>2 );\r\n\r\n    _bigint_asm.mredc( pA, alimbcnt<<2, pN, nlimbcnt<<2, y, pR );\r\n\r\n    var result = new BigNumber_constructor();\r\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+nlimbcnt ) );\r\n    result.bitLength = n.bitLength;\r\n    result.sign = 1;\r\n\r\n    return result;\r\n}\r\n\r\nvar ModulusPrototype = Modulus.prototype = new BigNumber_constructor;\r\nModulusPrototype.reduce = Modulus_reduce;\r\nModulusPrototype.inverse = Modulus_inverse;\r\nModulusPrototype.power = Modulus_power;\r\n","// Tests if the number supplied is a Miller-Rabin strong probable prime\r\nimport {BigNumber_constructor} from './bignum';\r\nimport {pow2_ceil} from '../utils';\r\nimport {Random_getValues} from '../random/random';\r\nimport {Modulus} from './modulus';\r\n\r\nfunction _BigNumber_isMillerRabinProbablePrime (rounds ) {\r\n    var t = new BigNumber_constructor(this),\r\n        s = 0;\r\n    t.limbs[0] -= 1;\r\n    while ( t.limbs[s>>5] === 0 ) s += 32;\r\n    while ( ( ( t.limbs[s>>5] >> (s & 31) ) & 1 ) === 0 ) s++;\r\n    t = t.slice(s);\r\n\r\n    var m = new Modulus(this),\r\n        m1 = this.subtract(BigNumber_constructor.ONE),\r\n        a = new BigNumber_constructor(this),\r\n        l = this.limbs.length-1;\r\n    while ( a.limbs[l] === 0 ) l--;\r\n\r\n    while ( --rounds >= 0 ) {\r\n        Random_getValues(a.limbs);\r\n        if ( a.limbs[0] < 2 ) a.limbs[0] += 2;\r\n        while ( a.compare(m1) >= 0 ) a.limbs[l] >>>= 1;\r\n\r\n        var x = m.power( a, t );\r\n        if ( x.compare(BigNumber_constructor.ONE) === 0 ) continue;\r\n        if ( x.compare(m1) === 0 ) continue;\r\n\r\n        var c = s;\r\n        while ( --c > 0 ) {\r\n            x = x.square().divide(m).remainder;\r\n            if ( x.compare(BigNumber_constructor.ONE) === 0 ) return false;\r\n            if ( x.compare(m1) === 0 ) break;\r\n        }\r\n\r\n        if ( c === 0 ) return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction BigNumber_isProbablePrime ( paranoia ) {\r\n    paranoia = paranoia || 80;\r\n\r\n    var limbs = this.limbs,\r\n        i = 0;\r\n\r\n    // Oddity test\r\n    // (50% false positive probability)\r\n    if ( ( limbs[0] & 1 ) === 0 ) return false;\r\n    if ( paranoia <= 1 ) return true;\r\n\r\n    // Magic divisors (3, 5, 17) test\r\n    // (~25% false positive probability)\r\n    var s3 = 0, s5 = 0, s17 = 0;\r\n    for ( i = 0; i < limbs.length; i++ ) {\r\n        var l3 = limbs[i];\r\n        while ( l3 ) {\r\n            s3 += (l3 & 3);\r\n            l3 >>>= 2;\r\n        }\r\n\r\n        var l5 = limbs[i];\r\n        while ( l5 ) {\r\n            s5 += (l5 & 3);\r\n            l5 >>>= 2;\r\n            s5 -= (l5 & 3);\r\n            l5 >>>= 2;\r\n        }\r\n\r\n        var l17 = limbs[i];\r\n        while ( l17 ) {\r\n            s17 += (l17 & 15);\r\n            l17 >>>= 4;\r\n            s17 -= (l17 & 15);\r\n            l17 >>>= 4;\r\n        }\r\n    }\r\n    if ( !(s3 % 3) || !(s5 % 5) || !(s17 % 17) ) return false;\r\n    if ( paranoia <= 2 ) return true;\r\n\r\n    // Miller-Rabin test\r\n    // (≤ 4^(-k) false positive probability)\r\n    return _BigNumber_isMillerRabinProbablePrime.call( this, paranoia >>> 1 );\r\n}\r\n\r\n// Small primes for trail division\r\nvar _primes = [ 2, 3 /* and so on, computed lazily */ ];\r\n\r\n// Returns an array populated with first n primes.\r\nfunction _small_primes ( n ) {\r\n    if ( _primes.length >= n )\r\n        return _primes.slice( 0, n );\r\n\r\n    for ( var p = _primes[_primes.length-1] + 2; _primes.length < n; p += 2 ) {\r\n        for ( var i = 0, d = _primes[i]; d*d <= p; d = _primes[++i] ) {\r\n            if ( p % d == 0 ) break;\r\n        }\r\n        if ( d*d > p ) _primes.push(p);\r\n    }\r\n\r\n    return _primes;\r\n}\r\n\r\n// Returns strong pseudoprime of a specified bit length\r\nexport function BigNumber_randomProbablePrime ( bitlen, filter ) {\r\n    var limbcnt = (bitlen + 31) >> 5,\r\n        prime = new BigNumber_constructor({ sign: 1, bitLength: bitlen, limbs: limbcnt }),\r\n        limbs = prime.limbs;\r\n\r\n    // Number of small divisors to try that minimizes the total cost of the trial division\r\n    // along with the first round of Miller-Rabin test for a certain bit length.\r\n    var k = 10000;\r\n    if ( bitlen <= 512 ) k = 2200;\r\n    if ( bitlen <= 256 ) k = 600;\r\n\r\n    var divisors = _small_primes(k),\r\n        remainders = new Uint32Array(k);\r\n\r\n    // Number of Miller-Rabin iterations for an error rate  of less than 2^-80\r\n    // Damgaard, Landrock, Pomerance: Average case error estimates for the strong probable prime test.\r\n    var s = (bitlen * Math.LN2) | 0,\r\n        r = 27;\r\n    if ( bitlen >= 250 ) r = 12;\r\n    if ( bitlen >= 450 ) r = 6;\r\n    if ( bitlen >= 850 ) r = 3;\r\n    if ( bitlen >= 1300 ) r = 2;\r\n\r\n    while ( true ) {\r\n        // populate `prime` with random bits, clamp to the appropriate bit length\r\n        Random_getValues(limbs);\r\n        limbs[0] |= 1;\r\n        limbs[limbcnt-1] |= 1 << ((bitlen - 1) & 31);\r\n        if ( bitlen & 31 ) limbs[limbcnt-1] &= pow2_ceil((bitlen + 1) & 31) - 1;\r\n\r\n        // remainders from division to small primes\r\n        remainders[0] = 1;\r\n        for ( var i = 1; i < k; i++ ) {\r\n            remainders[i] = prime.divide( divisors[i] ).remainder.valueOf();\r\n        }\r\n\r\n        // try no more than `s` subsequent candidates\r\n        seek:\r\n        for ( var j = 0; j < s; j += 2, limbs[0] += 2 ) {\r\n            // check for small factors\r\n            for ( var i = 1; i < k; i++ ) {\r\n                if ( ( remainders[i] + j ) % divisors[i] === 0 ) continue seek;\r\n            }\r\n\r\n            // additional check just before the heavy lifting\r\n            if ( typeof filter === 'function' && !filter(prime) ) continue;\r\n\r\n            // proceed to Miller-Rabin test\r\n            if ( _BigNumber_isMillerRabinProbablePrime.call( prime, r ) ) return prime;\r\n        }\r\n    }\r\n}\r\n\r\nBigNumber_constructor.prototype.isProbablePrime = BigNumber_isProbablePrime;\r\n\r\nBigNumber_constructor.randomProbablePrime = BigNumber_randomProbablePrime;\r\n","import {BigNumber_constructor, BigNumber_ONE, BigNumber_ZERO} from './bignum';\r\nimport {BigNumber_extGCD} from './extgcd';\r\nimport \"./prime\";\r\n\r\nexport var BigNumber = BigNumber_constructor;\r\nBigNumber.ZERO = BigNumber_ZERO;\r\nBigNumber.ONE  = BigNumber_ONE;\r\n\r\nBigNumber.extGCD = BigNumber_extGCD;\r\n\r\nexport { Modulus } from \"./modulus\";\r\n","import {Modulus} from '../bignum/modulus';\r\nimport {BigNumber_constructor, is_big_number} from '../bignum/bignum';\r\nimport {is_buffer, is_bytes, is_string, string_to_bytes} from '../utils';\r\nimport {IllegalStateError} from '../errors';\r\n\r\nexport function RSA (options ) {\r\n    options = options || {};\r\n\r\n    this.key = null;\r\n    this.result = null;\r\n\r\n    this.reset(options);\r\n}\r\n\r\nexport function RSA_reset ( options ) {\r\n    options = options || {};\r\n\r\n    this.result = null;\r\n\r\n    var key = options.key\r\n    if ( key !== undefined ) {\r\n        if ( key instanceof Array ) {\r\n            var l = key.length;\r\n            if ( l !== 2 && l !== 3 && l !== 8 )\r\n                throw new SyntaxError(\"unexpected key type\");\r\n\r\n            var k = [];\r\n            k[0] = new Modulus( key[0] );\r\n            k[1] = new BigNumber_constructor( key[1] );\r\n            if ( l > 2 ) {\r\n                k[2] = new BigNumber_constructor( key[2] );\r\n            }\r\n            if ( l > 3 ) {\r\n                k[3] = new Modulus( key[3] );\r\n                k[4] = new Modulus( key[4] );\r\n                k[5] = new BigNumber_constructor( key[5] );\r\n                k[6] = new BigNumber_constructor( key[6] );\r\n                k[7] = new BigNumber_constructor( key[7] );\r\n            }\r\n\r\n            this.key = k;\r\n        }\r\n        else {\r\n            throw new TypeError(\"unexpected key type\");\r\n        }\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nexport function RSA_encrypt ( data ) {\r\n    if ( !this.key )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    if ( is_string(data) )\r\n        data = string_to_bytes(data);\r\n\r\n    if ( is_buffer(data) )\r\n        data = new Uint8Array(data);\r\n\r\n    var msg;\r\n    if ( is_bytes(data) ) {\r\n        msg = new BigNumber_constructor(data);\r\n    }\r\n    else if ( is_big_number(data) ) {\r\n        msg = data;\r\n    }\r\n    else {\r\n        throw new TypeError(\"unexpected data type\");\r\n    }\r\n\r\n    if ( this.key[0].compare(msg) <= 0 )\r\n        throw new RangeError(\"data too large\");\r\n\r\n    var m = this.key[0],\r\n        e = this.key[1];\r\n\r\n    var result = m.power( msg, e ).toBytes();\r\n\r\n    var bytelen = m.bitLength + 7 >> 3;\r\n    if ( result.length < bytelen ) {\r\n        var r = new Uint8Array(bytelen);\r\n        r.set( result, bytelen - result.length );\r\n        result = r;\r\n    }\r\n\r\n    this.result = result;\r\n\r\n    return this;\r\n}\r\n\r\nexport function RSA_decrypt ( data ) {\r\n    if ( !this.key )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    if ( this.key.length < 3 )\r\n        throw new IllegalStateError(\"key isn't suitable for decription\");\r\n\r\n    if ( is_string(data) )\r\n        data = string_to_bytes(data);\r\n\r\n    if ( is_buffer(data) )\r\n        data = new Uint8Array(data);\r\n\r\n    var msg;\r\n    if ( is_bytes(data) ) {\r\n        msg = new BigNumber_constructor(data);\r\n    }\r\n    else if ( is_big_number(data) ) {\r\n        msg = data;\r\n    }\r\n    else {\r\n        throw new TypeError(\"unexpected data type\");\r\n    }\r\n\r\n    if ( this.key[0].compare(msg) <= 0 )\r\n        throw new RangeError(\"data too large\");\r\n\r\n    var result;\r\n    if ( this.key.length > 3 ) {\r\n        var m = this.key[0],\r\n            p = this.key[3],\r\n            q = this.key[4],\r\n            dp = this.key[5],\r\n            dq = this.key[6],\r\n            u = this.key[7];\r\n\r\n        var x = p.power( msg, dp ),\r\n            y = q.power( msg, dq );\r\n\r\n        var t = x.subtract(y);\r\n        while ( t.sign < 0 ) t = t.add(p);\r\n\r\n        var h = p.reduce( u.multiply(t) );\r\n\r\n        result = h.multiply(q).add(y).clamp(m.bitLength).toBytes();\r\n    }\r\n    else {\r\n        var m = this.key[0],\r\n            d = this.key[2];\r\n\r\n        result = m.power( msg, d ).toBytes();\r\n    }\r\n\r\n    var bytelen = m.bitLength + 7 >> 3;\r\n    if ( result.length < bytelen ) {\r\n        var r = new Uint8Array(bytelen);\r\n        r.set( result, bytelen - result.length );\r\n        result = r;\r\n    }\r\n\r\n    this.result = result;\r\n\r\n    return this;\r\n}\r\n\r\nvar RSA_prototype = RSA.prototype;\r\nRSA_prototype.reset = RSA_reset;\r\nRSA_prototype.encrypt = RSA_encrypt;\r\nRSA_prototype.decrypt = RSA_decrypt;\r\n","import {RSA_reset, RSA_encrypt, RSA_decrypt} from './rsa'\r\nimport {Random_getValues} from '../random/random';\r\nimport {is_buffer, is_bytes, is_number, is_string, string_to_bytes} from '../utils';\r\nimport {IllegalArgumentError, IllegalStateError, SecurityError} from '../errors';\r\n\r\nexport function RSA_OAEP ( options ) {\r\n    options = options || {};\r\n\r\n    if ( !options.hash )\r\n        throw new SyntaxError(\"option 'hash' is required\");\r\n\r\n    if ( !options.hash.HASH_SIZE )\r\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\r\n\r\n    this.hash = options.hash;\r\n\r\n    this.label = null;\r\n\r\n    this.reset(options);\r\n}\r\n\r\nfunction RSA_OAEP_reset ( options ) {\r\n    options = options || {};\r\n\r\n    var label = options.label;\r\n    if ( label !== undefined ) {\r\n        if ( is_buffer(label) || is_bytes(label) ) {\r\n            label = new Uint8Array(label);\r\n        }\r\n        else if ( is_string(label) ) {\r\n            label = string_to_bytes(label);\r\n        }\r\n        else {\r\n            throw new TypeError(\"unexpected label type\");\r\n        }\r\n\r\n        this.label = ( label.length > 0 ) ? label : null;\r\n    }\r\n    else {\r\n        this.label = null;\r\n    }\r\n\r\n    RSA_reset.call( this, options );\r\n}\r\n\r\nfunction RSA_OAEP_encrypt ( data ) {\r\n    if ( !this.key )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    var key_size = Math.ceil( this.key[0].bitLength / 8 ),\r\n        hash_size = this.hash.HASH_SIZE,\r\n        data_length = data.byteLength || data.length || 0,\r\n        ps_length = key_size - data_length - 2*hash_size - 2;\r\n\r\n    if ( data_length > key_size - 2*this.hash.HASH_SIZE - 2 )\r\n        throw new IllegalArgumentError(\"data too large\");\r\n\r\n    var message = new Uint8Array(key_size),\r\n        seed = message.subarray( 1, hash_size + 1 ),\r\n        data_block = message.subarray( hash_size + 1 );\r\n\r\n    if ( is_bytes(data) ) {\r\n        data_block.set( data, hash_size + ps_length + 1 );\r\n    }\r\n    else if ( is_buffer(data) ) {\r\n        data_block.set( new Uint8Array(data), hash_size + ps_length + 1 );\r\n    }\r\n    else if ( is_string(data) ) {\r\n        data_block.set( string_to_bytes(data), hash_size + ps_length + 1 );\r\n    }\r\n    else {\r\n        throw new TypeError(\"unexpected data type\");\r\n    }\r\n\r\n    data_block.set( this.hash.reset().process( this.label || '' ).finish().result, 0 );\r\n    data_block[ hash_size + ps_length ] = 1;\r\n\r\n    Random_getValues(seed);\r\n\r\n    var data_block_mask = RSA_MGF1_generate.call( this, seed, data_block.length );\r\n    for ( var i = 0; i < data_block.length; i++ )\r\n        data_block[i] ^= data_block_mask[i];\r\n\r\n    var seed_mask = RSA_MGF1_generate.call( this, data_block, seed.length );\r\n    for ( var i = 0; i < seed.length; i++ )\r\n        seed[i] ^= seed_mask[i];\r\n\r\n    RSA_encrypt.call( this, message );\r\n\r\n    return this;\r\n}\r\n\r\nfunction RSA_OAEP_decrypt ( data ) {\r\n    if ( !this.key )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    var key_size = Math.ceil( this.key[0].bitLength / 8 ),\r\n        hash_size = this.hash.HASH_SIZE,\r\n        data_length = data.byteLength || data.length || 0;\r\n\r\n    if ( data_length !== key_size )\r\n        throw new IllegalArgumentError(\"bad data\");\r\n\r\n    RSA_decrypt.call( this, data );\r\n\r\n    var z = this.result[0],\r\n        seed = this.result.subarray( 1, hash_size + 1 ),\r\n        data_block = this.result.subarray( hash_size + 1 );\r\n\r\n    if ( z !== 0 )\r\n        throw new SecurityError(\"decryption failed\");\r\n\r\n    var seed_mask = RSA_MGF1_generate.call( this, data_block, seed.length );\r\n    for ( var i = 0; i < seed.length; i++ )\r\n        seed[i] ^= seed_mask[i];\r\n\r\n    var data_block_mask = RSA_MGF1_generate.call( this, seed, data_block.length );\r\n    for ( var i = 0; i < data_block.length; i++ )\r\n        data_block[i] ^= data_block_mask[i];\r\n\r\n    var lhash = this.hash.reset().process( this.label || '' ).finish().result;\r\n    for ( var i = 0; i < hash_size; i++ ) {\r\n        if ( lhash[i] !== data_block[i] )\r\n            throw new SecurityError(\"decryption failed\");\r\n    }\r\n\r\n    var ps_end = hash_size;\r\n    for ( ; ps_end < data_block.length; ps_end++ ) {\r\n        var psz = data_block[ps_end];\r\n        if ( psz === 1 )\r\n            break;\r\n        if ( psz !== 0 )\r\n            throw new SecurityError(\"decryption failed\");\r\n    }\r\n    if ( ps_end === data_block.length )\r\n        throw new SecurityError(\"decryption failed\");\r\n\r\n    this.result = data_block.subarray( ps_end + 1 );\r\n\r\n    return this;\r\n}\r\n\r\nfunction RSA_MGF1_generate( seed, length ) {\r\n    seed = seed || '';\r\n    length = length || 0;\r\n\r\n    var hash_size = this.hash.HASH_SIZE;\r\n//    if ( length > (hash_size * 0x100000000) )\r\n//        throw new IllegalArgumentError(\"mask length too large\");\r\n\r\n    var mask = new Uint8Array(length),\r\n        counter = new Uint8Array(4),\r\n        chunks = Math.ceil( length / hash_size );\r\n    for ( var i = 0; i < chunks; i++ ) {\r\n        counter[0] = i >>> 24,\r\n        counter[1] = (i >>> 16) & 255,\r\n        counter[2] = (i >>> 8) & 255,\r\n        counter[3] = i & 255;\r\n\r\n        var submask = mask.subarray( i * hash_size );\r\n\r\n        var chunk = this.hash.reset().process(seed).process(counter).finish().result;\r\n        if ( chunk.length > submask.length ) chunk = chunk.subarray( 0, submask.length );\r\n\r\n        submask.set(chunk);\r\n    }\r\n\r\n    return mask;\r\n}\r\n\r\nexport function RSA_PSS ( options ) {\r\n    options = options || {};\r\n\r\n    if ( !options.hash )\r\n        throw new SyntaxError(\"option 'hash' is required\");\r\n\r\n    if ( !options.hash.HASH_SIZE )\r\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\r\n\r\n    this.hash = options.hash;\r\n\r\n    this.saltLength = 4;\r\n\r\n    this.reset(options);\r\n}\r\n\r\nfunction RSA_PSS_reset ( options ) {\r\n    options = options || {};\r\n\r\n    RSA_reset.call( this, options );\r\n\r\n    var slen = options.saltLength;\r\n    if ( slen !== undefined ) {\r\n        if ( !is_number(slen) || slen < 0 )\r\n            throw new TypeError(\"saltLength should be a non-negative number\");\r\n\r\n        if ( this.key !== null && Math.ceil( ( this.key[0].bitLength - 1 ) / 8 ) < this.hash.HASH_SIZE + slen + 2 )\r\n            throw new SyntaxError(\"saltLength is too large\");\r\n\r\n        this.saltLength = slen;\r\n    }\r\n    else {\r\n        this.saltLength = 4;\r\n    }\r\n}\r\n\r\nfunction RSA_PSS_sign ( data ) {\r\n    if ( !this.key )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    var key_bits = this.key[0].bitLength,\r\n        hash_size = this.hash.HASH_SIZE,\r\n        message_length = Math.ceil( ( key_bits - 1 ) / 8 ),\r\n        salt_length = this.saltLength,\r\n        ps_length = message_length - salt_length - hash_size - 2;\r\n\r\n    var message = new Uint8Array(message_length),\r\n        h_block = message.subarray( message_length - hash_size - 1, message_length - 1 ),\r\n        d_block = message.subarray( 0, message_length - hash_size - 1 ),\r\n        d_salt = d_block.subarray( ps_length + 1 );\r\n\r\n    var m_block = new Uint8Array( 8 + hash_size + salt_length ),\r\n        m_hash = m_block.subarray( 8, 8 + hash_size ),\r\n        m_salt = m_block.subarray( 8 + hash_size );\r\n\r\n    m_hash.set( this.hash.reset().process(data).finish().result );\r\n\r\n    if ( salt_length > 0 )\r\n        Random_getValues(m_salt);\r\n\r\n    d_block[ps_length] = 1;\r\n    d_salt.set(m_salt);\r\n\r\n    h_block.set( this.hash.reset().process(m_block).finish().result );\r\n\r\n    var d_block_mask = RSA_MGF1_generate.call( this, h_block, d_block.length );\r\n    for ( var i = 0; i < d_block.length; i++ )\r\n        d_block[i] ^= d_block_mask[i];\r\n\r\n    message[message_length-1] = 0xbc;\r\n\r\n    var zbits = 8*message_length - key_bits + 1;\r\n    if ( zbits % 8 ) message[0] &= (0xff >>> zbits);\r\n\r\n    RSA_decrypt.call( this, message );\r\n\r\n    return this;\r\n}\r\n\r\nfunction RSA_PSS_verify ( signature, data ) {\r\n    if ( !this.key )\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n\r\n    var key_bits = this.key[0].bitLength,\r\n        hash_size = this.hash.HASH_SIZE,\r\n        message_length = Math.ceil( ( key_bits - 1 ) / 8 ),\r\n        salt_length = this.saltLength,\r\n        ps_length = message_length - salt_length - hash_size - 2;\r\n\r\n    RSA_encrypt.call( this, signature );\r\n\r\n    var message = this.result;\r\n    if ( message[message_length-1] !== 0xbc )\r\n        throw new SecurityError(\"bad signature\");\r\n\r\n    var h_block = message.subarray( message_length - hash_size - 1, message_length - 1 ),\r\n        d_block = message.subarray( 0, message_length - hash_size - 1 ),\r\n        d_salt = d_block.subarray( ps_length + 1 );\r\n\r\n    var zbits = 8*message_length - key_bits + 1;\r\n    if ( (zbits % 8) && (message[0] >>> (8-zbits)) )\r\n        throw new SecurityError(\"bad signature\");\r\n\r\n    var d_block_mask = RSA_MGF1_generate.call( this, h_block, d_block.length );\r\n    for ( var i = 0; i < d_block.length; i++ )\r\n        d_block[i] ^= d_block_mask[i];\r\n\r\n    if ( zbits % 8 ) message[0] &= (0xff >>> zbits);\r\n\r\n    for ( var i = 0; i < ps_length; i++ ) {\r\n        if ( d_block[i] !== 0 )\r\n            throw new SecurityError(\"bad signature\");\r\n    }\r\n    if ( d_block[ps_length] !== 1 )\r\n        throw new SecurityError(\"bad signature\");\r\n\r\n    var m_block = new Uint8Array( 8 + hash_size + salt_length ),\r\n        m_hash = m_block.subarray( 8, 8 + hash_size ),\r\n        m_salt = m_block.subarray( 8 + hash_size );\r\n\r\n    m_hash.set( this.hash.reset().process(data).finish().result );\r\n    m_salt.set( d_salt );\r\n\r\n    var h_block_verify = this.hash.reset().process(m_block).finish().result;\r\n    for ( var i = 0; i < hash_size; i++ ) {\r\n        if ( h_block[i] !== h_block_verify[i] )\r\n            throw new SecurityError(\"bad signature\");\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nfunction RSA_PKCS1_v1_5(options) {\r\n    options = options || {};\r\n\r\n    if (!options.hash)\r\n        throw new SyntaxError(\"option 'hash' is required\");\r\n\r\n    if (!options.hash.HASH_SIZE)\r\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\r\n\r\n    this.hash = options.hash;\r\n\r\n    this.reset(options);\r\n}\r\n\r\nfunction RSA_PKCS1_v1_5_reset(options) {\r\n    options = options || {};\r\n\r\n    RSA_reset.call(this, options);\r\n}\r\n\r\nvar HASH_PREFIXES = {\r\n    \"sha1\": new Uint8Array([0x30, 0x21, 0x30, 0x09, 0x06, 0x05, 0x2b, 0x0e, 0x03, 0x02, 0x1a, 0x05, 0x00, 0x04, 0x14]),\r\n    \"sha256\": new Uint8Array([0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x04, 0x20]),\r\n    \"sha384\": new Uint8Array([0x30, 0x41, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x02, 0x05, 0x00, 0x04, 0x30]),\r\n    \"sha512\": new Uint8Array([0x30, 0x51, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x03, 0x05, 0x00, 0x04, 0x40]),\r\n}\r\n\r\nfunction getHashPrefix(hash) {\r\n    var hashName = hash.constructor.NAME;\r\n    var prefix = HASH_PREFIXES[hashName];\r\n    if (!prefix) {\r\n        throw new Error(\"Cannot get hash prefix for hash algorithm '\" + hashName + \"'\");\r\n    }\r\n    return prefix;\r\n}\r\n\r\nfunction RSA_PKCS1_v1_5_sign(data) {\r\n    if (!this.key) {\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n    }\r\n    var prefix = getHashPrefix(this.hash);\r\n    var hash_size = this.hash.HASH_SIZE;\r\n\r\n    var t_len = prefix.length + hash_size;\r\n    var k = (this.key[0].bitLength + 7) >> 3;\r\n    if (k < t_len + 11) {\r\n        throw new Error(\"Message too long\");\r\n    }\r\n\r\n    var m_hash = new Uint8Array(hash_size);\r\n    m_hash.set(this.hash.reset().process(data).finish().result);\r\n\r\n    // EM = 0x00 || 0x01 || PS || 0x00 || T\r\n    var em = new Uint8Array(k);\r\n    var i = 0;\r\n    em[i++] = 0; // 0x00\r\n    em[i++] = 1; // 0x01\r\n    // PS\r\n    for (i; i < k - t_len - 1; i++) {\r\n        em[i] = 0xff;\r\n    }\r\n    em[i++] = 0;\r\n    em.set(prefix, i); // 0x00\r\n    // T\r\n    em.set(m_hash, em.length - hash_size);\r\n\r\n    RSA_decrypt.call(this, em);\r\n\r\n    return this;\r\n}\r\n\r\nfunction RSA_PKCS1_v1_5_verify(signature, data) {\r\n    if (!this.key) {\r\n        throw new IllegalStateError(\"no key is associated with the instance\");\r\n    }\r\n    var prefix = getHashPrefix(this.hash);\r\n    var hash_size = this.hash.HASH_SIZE;\r\n\r\n    var t_len = prefix.length + hash_size;\r\n    var k = (this.key[0].bitLength + 7) >> 3;\r\n    if (k < t_len + 11) {\r\n        throw new SecurityError(\"Bad signature\");\r\n    }\r\n\r\n    RSA_encrypt.call(this, signature);\r\n\r\n    var m_hash = new Uint8Array(hash_size);\r\n    m_hash.set(this.hash.reset().process(data).finish().result);\r\n\r\n    var res = 1;\r\n    // EM = 0x00 || 0x01 || PS || 0x00 || T\r\n    var decryptedSignature = this.result;\r\n    var i = 0;\r\n    res &= decryptedSignature[i++] === 0; // 0x00\r\n    res &= decryptedSignature[i++] === 1; // 0x01\r\n    // PS\r\n    for (i; i < k - t_len - 1; i++) {\r\n        res &= decryptedSignature[i] === 0xff;\r\n    }\r\n    res &= decryptedSignature[i++] === 0; // 0x00\r\n    // T\r\n    var j = 0;\r\n    var n = i + prefix.length;\r\n    // prefix\r\n    for (i; i < n; i++) {\r\n        res &= decryptedSignature[i] === prefix[j++];\r\n    }\r\n    j = 0;\r\n    n = i + m_hash.length;\r\n    // hash\r\n    for (i; i < n; i++) {\r\n        res &= decryptedSignature[i] === m_hash[j++];\r\n    }\r\n\r\n    if (!res) {\r\n        throw new SecurityError(\"Bad signature\");\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nvar RSA_OAEP_prototype = RSA_OAEP.prototype;\r\nRSA_OAEP_prototype.reset = RSA_OAEP_reset;\r\nRSA_OAEP_prototype.encrypt = RSA_OAEP_encrypt;\r\nRSA_OAEP_prototype.decrypt = RSA_OAEP_decrypt;\r\n\r\nvar RSA_PSS_prototype = RSA_PSS.prototype;\r\nRSA_PSS_prototype.reset = RSA_PSS_reset;\r\nRSA_PSS_prototype.sign = RSA_PSS_sign;\r\nRSA_PSS_prototype.verify = RSA_PSS_verify;\r\n\r\nvar RSA_PKCS1_v1_5_prototype = RSA_PKCS1_v1_5.prototype;\r\nRSA_PKCS1_v1_5_prototype.reset = RSA_PKCS1_v1_5_reset;\r\nRSA_PKCS1_v1_5_prototype.sign = RSA_PKCS1_v1_5_sign;\r\nRSA_PKCS1_v1_5_prototype.verify = RSA_PKCS1_v1_5_verify;\r\n","var _global_console = typeof console !== 'undefined' ? console : undefined;\r\n\r\nvar _secure_origin = (typeof location === \"undefined\") || !location.protocol.search( /https:|file:|chrome:|chrome-extension:|moz-extension:/ );\r\n\r\nif ( !_secure_origin && _global_console !== undefined ) {\r\n    _global_console.warn(\"asmCrypto seems to be load from an insecure origin; this may cause to MitM-attack vulnerability. Consider using secure transport protocol.\");\r\n}\r\n"]}