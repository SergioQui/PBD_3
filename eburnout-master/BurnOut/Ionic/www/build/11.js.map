{"version":3,"sources":["../../src/pages/login/login.ts","../../node_modules/rxjs/add/observable/combineLatest.js","../../node_modules/rxjs/observable/combineLatest.js","../../node_modules/rxjs/operators/combineLatest.js","../../src/pages/login/login.module.ts"],"names":[],"mappings":"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AC,MAAM,CAAC;YACvC,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,QAAQ;YAClB,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;QACH,YAAY,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IACD,mCAAmC;IAEnC,qCAAiB,GAAjB;QACE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;IA5MU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;oLAW4B,0EAAgC,sEAAe,EAAmC;YAC9F,MAAkH;OAXvH,SAAS,CA8MrB;IAAD,CAAC;AAAA;SA9MY,SAAS,e;;;;;;;;ACjBtB;AACA;AACA;AACA;AACA,yC;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;ACvIA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,SAAS;AACpB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kIAAkI;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,yC;;;;;;;;;;;;;;;;;;;ACtJyC;AACO;AACZ;AAUpC;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAR3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;aACpC;SACF,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH","file":"11.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, ToastController, LoadingController } from 'ionic-angular';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { GlobalProvider } from '../../providers/global/global';\nimport { DatabaseProvider } from '../../providers/database/database';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/combineLatest';\n\nimport { SQLite } from '@ionic-native/sqlite';\nimport { SQLiteObject } from '@ionic-native/sqlite';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  formulario: { email: string, password: string };\n  loading: any;\n  observable: any;\n\n  private _db: SQLiteObject = null;\n  private _id : number = 0;\n  \n\n  constructor(public navCtrl: NavController, public fireAuth: AngularFireAuth, public toastCtrl: ToastController,\n\t  public global: GlobalProvider, public database: DatabaseProvider, public loadingCtrl: \tLoadingController, private _sqlite: SQLite) {\n    this.formulario = { email: '', password: '' };\n    \n  }\n\n  ionViewDidLoad() {\n      this._onInit();\n  }\n\n    private _cipher(message, action) {\n        var text = message;\n        var encrypted = \"\";\n\n        for(var i = 0; i < text.length; i++) {\n            var ASCII = text[i].charCodeAt(0);\n            var n = null;\n\n            if(i % 2 == 0) {\n                n = action == 'encrypt' ? ASCII + 4 : ASCII - 4;\n            }\n\n            else if(i % 2 == 1) {\n                n = action == 'encrypt' ? ASCII + 7 : ASCII - 7;\n            }\n\n            var s = String.fromCharCode(n);\n\n            encrypted += s;;\n        }\n   \n        return encrypted;\n\n    }\n\n\n    private _onInit(){\n     // Sql lite deactive\n/*\n        var _self = this;\n        this._createDatabase().then((success) => {\n\n\n\n\n            if(success[0] !== undefined){\n\n                _self._id = success[0][\"id\"];\n                _self.formulario.email = success[0][\"email\"];\n                var desc = _self._cipher(success[0][\"pwd\"],'')\n                _self.formulario.password = desc;\n\n                return _self.login();\n\n            }\n            \n        }, (error) => {\n            _self.toast(JSON.stringify(error));\n        });\n*/\n    }\n\n/*\n    private _createDatabase(){\n        var _self = this;\n        return this._sqlite.create({\n              name: 'eburnout.db',\n              location: 'default' // the location field is required\n        })\n        .then((db) => {\n              _self._setDatabase(db);\n              _self._createTable();\n              return _self._getUser();\n        })\n        .catch(error =>{\n            _self.toast(JSON.stringify(error));\n            Promise.reject( error );\n        });\n    }\n\n\n    private _setDatabase(db: SQLiteObject){\n        if(this._db === null){\n              this._db = db;\n        }\n    }\n\n    private _update(email:any,pwd:any,id: any){\n        let sql = 'UPDATE usuario SET email=?, pwd=? WHERE id=?';\n        return this._db.executeSql(sql, [email, pwd, id]);\n    }\n\n    private _create(email:any,pwd:any){\n        let sql = 'INSERT INTO usuario(email,pwd) VALUES(?,?)';\n        return this._db.executeSql(sql, [email,pwd]);\n    }\n*/\n    /*private _deleteTable(){\n        let sql = 'DROP TABLE IF EXISTS usuario';\n        return this._db.executeSql(sql, []);\n    }*/\n\n    /*\n    private _createTable(){\n        let sql = 'CREATE TABLE IF NOT EXISTS usuario(id INTEGER PRIMARY KEY AUTOINCREMENT, email VARCHAR(100),pwd TEXT)';\n        return this._db.executeSql(sql, []);\n    }\n\n    private _getUser(){\n\n        let sql = 'SELECT * FROM usuario WHERE id=1';\n        return this._db.executeSql(sql, [])\n            .then(response => {\n                let arrData = [];\n                for (let index = 0; index < response.rows.length; index++) {\n                    arrData.push( response.rows.item(index) );\n                }\n                return Promise.resolve( arrData );\n            })\n            .catch(error => Promise.reject( error ) );\n\t\t\t\n    }\n*/\n   \n    \n\n\n\n\n  /* LOGIN FIREBASE */\n  login() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Cargando'\n    });\n    this.loading.present().then(() => {\n      this.fireAuth.auth.signInWithEmailAndPassword(this.formulario.email, this.formulario.password)\n        .then(resultado => {\n          this.observable = Observable.combineLatest(this.database.preguntas(), this.database.recomendaciones(),\n            this.database.usuarioRegistradoBD(resultado.uid), this.database.encuestasUltimas(resultado.uid),this.database.idClientFitBit(resultado.uid)).subscribe(resultados => {\n\n              this.global.questions = resultados[0];\n              this.global.recommendations = resultados[1];\n              if (resultados[2] == null) {\n                this.navCtrl.setRoot('RegistroPage', { idUsuario: resultado.uid, email: this.formulario.email, password: this.formulario.password });\n                this.loading.dismiss();\n              } else {\n                /*var dato = this._cipher(this.formulario.password,'encrypt');\n                if( this._id ){\n                    this._update(this.formulario.email, dato, this._id);\n                }else{\n                    this._create(this.formulario.email, dato);\n                }*/\n\n\n                this.global.usuario = resultados[2];\n                this.global.resultadoPreguntas = this.global.usuario.ultimaencuesta;\n                for (let resultadoPreguntas of resultados[3]) {\n                  var encuesta: any = resultadoPreguntas;\n                  this.global.resultadosPreguntas.push(encuesta.encuesta);\n                }\n                for (let llavesFitBit of resultados[4]) {\n                  this.global.client_id = llavesFitBit[\"client_id\"];\n                  this.global.client_secret = llavesFitBit[\"client_secret\"];\n                }\n                this.navCtrl.setRoot('ConsentimientoPage');\n                this.loading.dismiss();\n              }\n\t\t\t  \n            });\n        })\n        .catch(error => {\n          var mensaje: string = '';\n          error.code == 'auth/user-not-found' || error.code == 'auth/invalid-email' ? mensaje = 'Usuario no válido' : mensaje = 'Contraseña no válida';\n          this.loading.dismiss();\n          this.toast(mensaje);\n        });\n    });\n  }\n  /* FIN LOGIN FIREBASE */\n\n  /* TOAST MENSAJE LOGIN ERROR */\n  toast(mensaje: string) {\n    let toastMensaje = this.toastCtrl.create({\n      message: mensaje,\n      duration: 2500,\n      position: 'bottom',\n      dismissOnPageChange: true\n    });\n    toastMensaje.present();\n  }\n  /* FIN TOAST MENSAJE LOGIN ERROR */\n\n  ionViewWillUnload() {\n    this.observable.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineLatest_1 = require('../../observable/combineLatest');\nObservable_1.Observable.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/combineLatest.js\n// module id = 1098\n// module chunks = 11","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar isArray_1 = require('../util/isArray');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar combineLatest_1 = require('../operators/combineLatest');\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/combineLatest.js\n// module id = 1099\n// module chunks = 11","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(new ArrayObservable_1.ArrayObservable([source].concat(observables)), new CombineLatestOperator(project)); };\n}\nexports.combineLatest = combineLatest;\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operators/combineLatest.js\n// module id = 1100\n// module chunks = 11","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts"],"sourceRoot":""}